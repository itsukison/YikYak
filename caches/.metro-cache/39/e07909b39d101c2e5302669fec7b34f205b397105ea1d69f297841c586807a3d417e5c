{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@tanstack/react-query","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":78,"index":78}}],"key":"Pzwu/0TIyhnZOrC9PAkpZx92hFo=","exportNames":["*"],"imports":1}},{"name":"../supabase","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":79},"end":{"line":2,"column":39,"index":118}}],"key":"zx/dTdJp0d3TJEOaa003L7FI5PE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.useCommentsQuery = useCommentsQuery;\n  exports.useCommentVotesQuery = useCommentVotesQuery;\n  exports.useCreateCommentMutation = useCreateCommentMutation;\n  exports.useVoteCommentMutation = useVoteCommentMutation;\n  exports.useDeleteCommentMutation = useDeleteCommentMutation;\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _tanstackReactQuery = require(_dependencyMap[1], \"@tanstack/react-query\");\n  var _supabase = require(_dependencyMap[2], \"../supabase\");\n  /**\n   * Fetch comments for a specific post\n   */\n  function useCommentsQuery(postId) {\n    _s();\n    return (0, _tanstackReactQuery.useQuery)({\n      queryKey: [\"comments\", postId],\n      queryFn: function () {\n        var _ref = (0, _asyncToGenerator.default)(function* () {\n          if (!postId) throw new Error(\"Post ID required\");\n          var _yield$supabase$from$ = yield _supabase.supabase.from(\"comments\").select(`\n          *,\n          author:users!comments_user_id_fkey(id, nickname, is_anonymous)\n        `).eq(\"post_id\", postId).order(\"created_at\", {\n              ascending: true\n            }),\n            data = _yield$supabase$from$.data,\n            error = _yield$supabase$from$.error;\n          if (error) throw error;\n\n          // Transform to include display name\n          return data.map(comment => ({\n            ...comment,\n            author_nickname: comment.author.is_anonymous ? \"Anonymous\" : comment.author.nickname || \"User\"\n          }));\n        });\n        return function queryFn() {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      enabled: !!postId\n    });\n  }\n\n  /**\n   * Fetch user's votes on comments for a post\n   */\n  _s(useCommentsQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n    return [_tanstackReactQuery.useQuery];\n  });\n  function useCommentVotesQuery(postId, userId) {\n    _s2();\n    return (0, _tanstackReactQuery.useQuery)({\n      queryKey: [\"comment-votes\", postId, userId],\n      queryFn: function () {\n        var _ref2 = (0, _asyncToGenerator.default)(function* () {\n          if (!postId || !userId) return {};\n          var _yield$supabase$from$2 = yield _supabase.supabase.from(\"votes_comments\").select(\"comment_id, vote_type\").eq(\"user_id\", userId).in(\"comment_id\",\n            // Get all comment IDs for this post first\n            (yield _supabase.supabase.from(\"comments\").select(\"id\").eq(\"post_id\", postId)).data?.map(c => c.id) || []),\n            data = _yield$supabase$from$2.data,\n            error = _yield$supabase$from$2.error;\n          if (error) throw error;\n\n          // Convert to map for easy lookup\n          return data.reduce((acc, vote) => {\n            acc[vote.comment_id] = vote.vote_type;\n            return acc;\n          }, {});\n        });\n        return function queryFn() {\n          return _ref2.apply(this, arguments);\n        };\n      }(),\n      enabled: !!postId && !!userId\n    });\n  }\n\n  /**\n   * Create a new comment\n   */\n  _s2(useCommentVotesQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n    return [_tanstackReactQuery.useQuery];\n  });\n  function useCreateCommentMutation() {\n    _s3();\n    var queryClient = (0, _tanstackReactQuery.useQueryClient)();\n    return (0, _tanstackReactQuery.useMutation)({\n      mutationFn: function () {\n        var _ref4 = (0, _asyncToGenerator.default)(function* (_ref3) {\n          var postId = _ref3.postId,\n            userId = _ref3.userId,\n            content = _ref3.content;\n          var _yield$supabase$from$3 = yield _supabase.supabase.from(\"comments\").insert({\n              post_id: postId,\n              user_id: userId,\n              content: content.trim()\n            }).select(`\n          *,\n          author:users!comments_user_id_fkey(id, nickname, is_anonymous)\n        `).single(),\n            data = _yield$supabase$from$3.data,\n            error = _yield$supabase$from$3.error;\n          if (error) throw error;\n\n          // Transform to include display name\n          return {\n            ...data,\n            author_nickname: data.author.is_anonymous ? \"Anonymous\" : data.author.nickname || \"User\"\n          };\n        });\n        return function mutationFn(_x) {\n          return _ref4.apply(this, arguments);\n        };\n      }(),\n      onSuccess: (data, variables) => {\n        // Invalidate comments query to refetch\n        queryClient.invalidateQueries([\"comments\", variables.postId]);\n        // Invalidate posts query to update comment count\n        queryClient.invalidateQueries([\"posts\"]);\n      }\n    });\n  }\n\n  /**\n   * Vote on a comment (upvote/downvote)\n   */\n  _s3(useCreateCommentMutation, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n    return [_tanstackReactQuery.useQueryClient, _tanstackReactQuery.useMutation];\n  });\n  function useVoteCommentMutation() {\n    _s4();\n    var queryClient = (0, _tanstackReactQuery.useQueryClient)();\n    return (0, _tanstackReactQuery.useMutation)({\n      mutationFn: function () {\n        var _ref6 = (0, _asyncToGenerator.default)(function* (_ref5) {\n          var userId = _ref5.userId,\n            commentId = _ref5.commentId,\n            voteType = _ref5.voteType,\n            postId = _ref5.postId;\n          // Insert or update vote\n          var _yield$supabase$from$4 = yield _supabase.supabase.from(\"votes_comments\").upsert({\n              user_id: userId,\n              comment_id: commentId,\n              vote_type: voteType\n            }, {\n              onConflict: \"user_id,comment_id\"\n            }),\n            error = _yield$supabase$from$4.error;\n          if (error) throw error;\n\n          // Recalculate comment score\n          var _yield$supabase$from$5 = yield _supabase.supabase.from(\"votes_comments\").select(\"vote_type\").eq(\"comment_id\", commentId),\n            votes = _yield$supabase$from$5.data;\n          var newScore = votes?.reduce((sum, vote) => sum + vote.vote_type, 0) || 0;\n          yield _supabase.supabase.from(\"comments\").update({\n            score: newScore\n          }).eq(\"id\", commentId);\n        });\n        return function mutationFn(_x2) {\n          return _ref6.apply(this, arguments);\n        };\n      }(),\n      onSuccess: (_, variables) => {\n        queryClient.invalidateQueries([\"comments\", variables.postId]);\n        queryClient.invalidateQueries([\"comment-votes\", variables.postId]);\n      }\n    });\n  }\n\n  /**\n   * Delete a comment\n   */\n  _s4(useVoteCommentMutation, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n    return [_tanstackReactQuery.useQueryClient, _tanstackReactQuery.useMutation];\n  });\n  function useDeleteCommentMutation() {\n    _s5();\n    var queryClient = (0, _tanstackReactQuery.useQueryClient)();\n    return (0, _tanstackReactQuery.useMutation)({\n      mutationFn: function () {\n        var _ref8 = (0, _asyncToGenerator.default)(function* (_ref7) {\n          var commentId = _ref7.commentId,\n            postId = _ref7.postId;\n          var _yield$supabase$from$6 = yield _supabase.supabase.from(\"comments\").delete().eq(\"id\", commentId),\n            error = _yield$supabase$from$6.error;\n          if (error) throw error;\n        });\n        return function mutationFn(_x3) {\n          return _ref8.apply(this, arguments);\n        };\n      }(),\n      onSuccess: (_, variables) => {\n        queryClient.invalidateQueries([\"comments\", variables.postId]);\n        queryClient.invalidateQueries([\"posts\"]);\n      }\n    });\n  }\n  _s5(useDeleteCommentMutation, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n    return [_tanstackReactQuery.useQueryClient, _tanstackReactQuery.useMutation];\n  });\n});","lineCount":217,"map":[[17,2,7,0,"exports"],[17,9,7,0],[17,10,7,0,"useCommentsQuery"],[17,26,7,0],[17,29,7,0,"useCommentsQuery"],[17,45,7,0],[18,2,39,0,"exports"],[18,9,39,0],[18,10,39,0,"useCommentVotesQuery"],[18,30,39,0],[18,33,39,0,"useCommentVotesQuery"],[18,53,39,0],[19,2,75,0,"exports"],[19,9,75,0],[19,10,75,0,"useCreateCommentMutation"],[19,34,75,0],[19,37,75,0,"useCreateCommentMutation"],[19,61,75,0],[20,2,115,0,"exports"],[20,9,115,0],[20,10,115,0,"useVoteCommentMutation"],[20,32,115,0],[20,35,115,0,"useVoteCommentMutation"],[20,57,115,0],[21,2,159,0,"exports"],[21,9,159,0],[21,10,159,0,"useDeleteCommentMutation"],[21,34,159,0],[21,37,159,0,"useDeleteCommentMutation"],[21,61,159,0],[22,2,176,1],[22,6,176,1,"_babelRuntimeHelpersAsyncToGenerator"],[22,42,176,1],[22,45,176,1,"require"],[22,52,176,1],[22,53,176,1,"_dependencyMap"],[22,67,176,1],[23,2,176,1],[23,6,176,1,"_asyncToGenerator"],[23,23,176,1],[23,26,176,1,"_interopDefault"],[23,41,176,1],[23,42,176,1,"_babelRuntimeHelpersAsyncToGenerator"],[23,78,176,1],[24,2,1,0],[24,6,1,0,"_tanstackReactQuery"],[24,25,1,0],[24,28,1,0,"require"],[24,35,1,0],[24,36,1,0,"_dependencyMap"],[24,50,1,0],[25,2,2,0],[25,6,2,0,"_supabase"],[25,15,2,0],[25,18,2,0,"require"],[25,25,2,0],[25,26,2,0,"_dependencyMap"],[25,40,2,0],[26,2,4,0],[27,0,5,0],[28,0,6,0],[29,2,7,7],[29,11,7,16,"useCommentsQuery"],[29,27,7,32,"useCommentsQuery"],[29,28,7,33,"postId"],[29,34,7,39],[29,36,7,41],[30,4,7,41,"_s"],[30,6,7,41],[31,4,8,2],[31,11,8,9],[31,15,8,9,"useQuery"],[31,34,8,17],[31,35,8,17,"useQuery"],[31,43,8,17],[31,45,8,18],[32,6,9,4,"queryKey"],[32,14,9,12],[32,16,9,14],[32,17,9,15],[32,27,9,25],[32,29,9,27,"postId"],[32,35,9,33],[32,36,9,34],[33,6,10,4,"queryFn"],[33,13,10,11],[34,8,10,11],[34,12,10,11,"_ref"],[34,16,10,11],[34,23,10,11,"_asyncToGenerator"],[34,40,10,11],[34,41,10,11,"default"],[34,48,10,11],[34,50,10,13],[34,63,10,25],[35,10,11,6],[35,14,11,10],[35,15,11,11,"postId"],[35,21,11,17],[35,23,11,19],[35,29,11,25],[35,33,11,29,"Error"],[35,38,11,34],[35,39,11,35],[35,57,11,53],[35,58,11,54],[36,10,13,6],[36,14,13,6,"_yield$supabase$from$"],[36,35,13,6],[36,44,13,36,"supabase"],[36,53,13,44],[36,54,13,44,"supabase"],[36,62,13,44],[36,63,14,9,"from"],[36,67,14,13],[36,68,14,14],[36,78,14,24],[36,79,14,25],[36,80,15,9,"select"],[36,86,15,15],[36,87,15,16],[37,0,16,0],[38,0,17,0],[39,0,18,0],[39,9,18,9],[39,10,18,10],[39,11,19,9,"eq"],[39,13,19,11],[39,14,19,12],[39,23,19,21],[39,25,19,23,"postId"],[39,31,19,29],[39,32,19,30],[39,33,20,9,"order"],[39,38,20,14],[39,39,20,15],[39,51,20,27],[39,53,20,29],[40,14,20,31,"ascending"],[40,23,20,40],[40,25,20,42],[41,12,20,47],[41,13,20,48],[41,14,20,49],[42,12,13,14,"data"],[42,16,13,18],[42,19,13,18,"_yield$supabase$from$"],[42,40,13,18],[42,41,13,14,"data"],[42,45,13,18],[43,12,13,20,"error"],[43,17,13,25],[43,20,13,25,"_yield$supabase$from$"],[43,41,13,25],[43,42,13,20,"error"],[43,47,13,25],[44,10,22,6],[44,14,22,10,"error"],[44,19,22,15],[44,21,22,17],[44,27,22,23,"error"],[44,32,22,28],[46,10,24,6],[47,10,25,6],[47,17,25,13,"data"],[47,21,25,17],[47,22,25,18,"map"],[47,25,25,21],[47,26,25,23,"comment"],[47,33,25,30],[47,38,25,36],[48,12,26,8],[48,15,26,11,"comment"],[48,22,26,18],[49,12,27,8,"author_nickname"],[49,27,27,23],[49,29,27,25,"comment"],[49,36,27,32],[49,37,27,33,"author"],[49,43,27,39],[49,44,27,40,"is_anonymous"],[49,56,27,52],[49,59,28,12],[49,70,28,23],[49,73,29,12,"comment"],[49,80,29,19],[49,81,29,20,"author"],[49,87,29,26],[49,88,29,27,"nickname"],[49,96,29,35],[49,100,29,39],[50,10,30,6],[50,11,30,7],[50,12,30,8],[50,13,30,9],[51,8,31,4],[51,9,31,5],[52,8,31,5],[52,24,10,4,"queryFn"],[52,31,10,11,"queryFn"],[52,32,10,11],[53,10,10,11],[53,17,10,11,"_ref"],[53,21,10,11],[53,22,10,11,"apply"],[53,27,10,11],[53,34,10,11,"arguments"],[53,43,10,11],[54,8,10,11],[55,6,10,11],[55,9,31,5],[56,6,32,4,"enabled"],[56,13,32,11],[56,15,32,13],[56,16,32,14],[56,17,32,15,"postId"],[57,4,33,2],[57,5,33,3],[57,6,33,4],[58,2,34,0],[60,2,36,0],[61,0,37,0],[62,0,38,0],[63,2,36,0,"_s"],[63,4,36,0],[63,5,7,16,"useCommentsQuery"],[63,21,7,32],[64,4,7,32],[64,12,8,9,"useQuery"],[64,31,8,17],[64,32,8,17,"useQuery"],[64,40,8,17],[65,2,8,17],[66,2,39,7],[66,11,39,16,"useCommentVotesQuery"],[66,31,39,36,"useCommentVotesQuery"],[66,32,39,37,"postId"],[66,38,39,43],[66,40,39,45,"userId"],[66,46,39,51],[66,48,39,53],[67,4,39,53,"_s2"],[67,7,39,53],[68,4,40,2],[68,11,40,9],[68,15,40,9,"useQuery"],[68,34,40,17],[68,35,40,17,"useQuery"],[68,43,40,17],[68,45,40,18],[69,6,41,4,"queryKey"],[69,14,41,12],[69,16,41,14],[69,17,41,15],[69,32,41,30],[69,34,41,32,"postId"],[69,40,41,38],[69,42,41,40,"userId"],[69,48,41,46],[69,49,41,47],[70,6,42,4,"queryFn"],[70,13,42,11],[71,8,42,11],[71,12,42,11,"_ref2"],[71,17,42,11],[71,24,42,11,"_asyncToGenerator"],[71,41,42,11],[71,42,42,11,"default"],[71,49,42,11],[71,51,42,13],[71,64,42,25],[72,10,43,6],[72,14,43,10],[72,15,43,11,"postId"],[72,21,43,17],[72,25,43,21],[72,26,43,22,"userId"],[72,32,43,28],[72,34,43,30],[72,41,43,37],[72,42,43,38],[72,43,43,39],[73,10,45,6],[73,14,45,6,"_yield$supabase$from$2"],[73,36,45,6],[73,45,45,36,"supabase"],[73,54,45,44],[73,55,45,44,"supabase"],[73,63,45,44],[73,64,46,9,"from"],[73,68,46,13],[73,69,46,14],[73,85,46,30],[73,86,46,31],[73,87,47,9,"select"],[73,93,47,15],[73,94,47,16],[73,117,47,39],[73,118,47,40],[73,119,48,9,"eq"],[73,121,48,11],[73,122,48,12],[73,131,48,21],[73,133,48,23,"userId"],[73,139,48,29],[73,140,48,30],[73,141,49,9,"in"],[73,143,49,11],[73,144,50,10],[73,156,50,22],[74,12,51,10],[75,12,52,10],[75,19,53,18,"supabase"],[75,28,53,26],[75,29,53,26,"supabase"],[75,37,53,26],[75,38,54,15,"from"],[75,42,54,19],[75,43,54,20],[75,53,54,30],[75,54,54,31],[75,55,55,15,"select"],[75,61,55,21],[75,62,55,22],[75,66,55,26],[75,67,55,27],[75,68,56,15,"eq"],[75,70,56,17],[75,71,56,18],[75,80,56,27],[75,82,56,29,"postId"],[75,88,56,35],[75,89,56,36],[75,91,57,12,"data"],[75,95,57,16],[75,97,57,18,"map"],[75,100,57,21],[75,101,57,23,"c"],[75,102,57,24],[75,106,57,29,"c"],[75,107,57,30],[75,108,57,31,"id"],[75,110,57,33],[75,111,57,34],[75,115,57,38],[75,117,58,8],[75,118,58,9],[76,12,45,14,"data"],[76,16,45,18],[76,19,45,18,"_yield$supabase$from$2"],[76,41,45,18],[76,42,45,14,"data"],[76,46,45,18],[77,12,45,20,"error"],[77,17,45,25],[77,20,45,25,"_yield$supabase$from$2"],[77,42,45,25],[77,43,45,20,"error"],[77,48,45,25],[78,10,60,6],[78,14,60,10,"error"],[78,19,60,15],[78,21,60,17],[78,27,60,23,"error"],[78,32,60,28],[80,10,62,6],[81,10,63,6],[81,17,63,13,"data"],[81,21,63,17],[81,22,63,18,"reduce"],[81,28,63,24],[81,29,63,25],[81,30,63,26,"acc"],[81,33,63,29],[81,35,63,31,"vote"],[81,39,63,35],[81,44,63,40],[82,12,64,8,"acc"],[82,15,64,11],[82,16,64,12,"vote"],[82,20,64,16],[82,21,64,17,"comment_id"],[82,31,64,27],[82,32,64,28],[82,35,64,31,"vote"],[82,39,64,35],[82,40,64,36,"vote_type"],[82,49,64,45],[83,12,65,8],[83,19,65,15,"acc"],[83,22,65,18],[84,10,66,6],[84,11,66,7],[84,13,66,9],[84,14,66,10],[84,15,66,11],[84,16,66,12],[85,8,67,4],[85,9,67,5],[86,8,67,5],[86,24,42,4,"queryFn"],[86,31,42,11,"queryFn"],[86,32,42,11],[87,10,42,11],[87,17,42,11,"_ref2"],[87,22,42,11],[87,23,42,11,"apply"],[87,28,42,11],[87,35,42,11,"arguments"],[87,44,42,11],[88,8,42,11],[89,6,42,11],[89,9,67,5],[90,6,68,4,"enabled"],[90,13,68,11],[90,15,68,13],[90,16,68,14],[90,17,68,15,"postId"],[90,23,68,21],[90,27,68,25],[90,28,68,26],[90,29,68,27,"userId"],[91,4,69,2],[91,5,69,3],[91,6,69,4],[92,2,70,0],[94,2,72,0],[95,0,73,0],[96,0,74,0],[97,2,72,0,"_s2"],[97,5,72,0],[97,6,39,16,"useCommentVotesQuery"],[97,26,39,36],[98,4,39,36],[98,12,40,9,"useQuery"],[98,31,40,17],[98,32,40,17,"useQuery"],[98,40,40,17],[99,2,40,17],[100,2,75,7],[100,11,75,16,"useCreateCommentMutation"],[100,35,75,40,"useCreateCommentMutation"],[100,36,75,40],[100,38,75,43],[101,4,75,43,"_s3"],[101,7,75,43],[102,4,76,2],[102,8,76,8,"queryClient"],[102,19,76,19],[102,22,76,22],[102,26,76,22,"useQueryClient"],[102,45,76,36],[102,46,76,36,"useQueryClient"],[102,60,76,36],[102,62,76,37],[102,63,76,38],[103,4,78,2],[103,11,78,9],[103,15,78,9,"useMutation"],[103,34,78,20],[103,35,78,20,"useMutation"],[103,46,78,20],[103,48,78,21],[104,6,79,4,"mutationFn"],[104,16,79,14],[105,8,79,14],[105,12,79,14,"_ref4"],[105,17,79,14],[105,24,79,14,"_asyncToGenerator"],[105,41,79,14],[105,42,79,14,"default"],[105,49,79,14],[105,51,79,16],[105,62,79,16,"_ref3"],[105,67,79,16],[105,69,79,55],[106,10,79,55],[106,14,79,25,"postId"],[106,20,79,31],[106,23,79,31,"_ref3"],[106,28,79,31],[106,29,79,25,"postId"],[106,35,79,31],[107,12,79,33,"userId"],[107,18,79,39],[107,21,79,39,"_ref3"],[107,26,79,39],[107,27,79,33,"userId"],[107,33,79,39],[108,12,79,41,"content"],[108,19,79,48],[108,22,79,48,"_ref3"],[108,27,79,48],[108,28,79,41,"content"],[108,35,79,48],[109,10,80,6],[109,14,80,6,"_yield$supabase$from$3"],[109,36,80,6],[109,45,80,36,"supabase"],[109,54,80,44],[109,55,80,44,"supabase"],[109,63,80,44],[109,64,81,9,"from"],[109,68,81,13],[109,69,81,14],[109,79,81,24],[109,80,81,25],[109,81,82,9,"insert"],[109,87,82,15],[109,88,82,16],[110,14,83,10,"post_id"],[110,21,83,17],[110,23,83,19,"postId"],[110,29,83,25],[111,14,84,10,"user_id"],[111,21,84,17],[111,23,84,19,"userId"],[111,29,84,25],[112,14,85,10,"content"],[112,21,85,17],[112,23,85,19,"content"],[112,30,85,26],[112,31,85,27,"trim"],[112,35,85,31],[112,36,85,32],[113,12,86,8],[113,13,86,9],[113,14,86,10],[113,15,87,9,"select"],[113,21,87,15],[113,22,87,16],[114,0,88,0],[115,0,89,0],[116,0,90,0],[116,9,90,9],[116,10,90,10],[116,11,91,9,"single"],[116,17,91,15],[116,18,91,16],[116,19,91,17],[117,12,80,14,"data"],[117,16,80,18],[117,19,80,18,"_yield$supabase$from$3"],[117,41,80,18],[117,42,80,14,"data"],[117,46,80,18],[118,12,80,20,"error"],[118,17,80,25],[118,20,80,25,"_yield$supabase$from$3"],[118,42,80,25],[118,43,80,20,"error"],[118,48,80,25],[119,10,93,6],[119,14,93,10,"error"],[119,19,93,15],[119,21,93,17],[119,27,93,23,"error"],[119,32,93,28],[121,10,95,6],[122,10,96,6],[122,17,96,13],[123,12,97,8],[123,15,97,11,"data"],[123,19,97,15],[124,12,98,8,"author_nickname"],[124,27,98,23],[124,29,98,25,"data"],[124,33,98,29],[124,34,98,30,"author"],[124,40,98,36],[124,41,98,37,"is_anonymous"],[124,53,98,49],[124,56,99,12],[124,67,99,23],[124,70,100,12,"data"],[124,74,100,16],[124,75,100,17,"author"],[124,81,100,23],[124,82,100,24,"nickname"],[124,90,100,32],[124,94,100,36],[125,10,101,6],[125,11,101,7],[126,8,102,4],[126,9,102,5],[127,8,102,5],[127,24,79,4,"mutationFn"],[127,34,79,14,"mutationFn"],[127,35,79,14,"_x"],[127,37,79,14],[128,10,79,14],[128,17,79,14,"_ref4"],[128,22,79,14],[128,23,79,14,"apply"],[128,28,79,14],[128,35,79,14,"arguments"],[128,44,79,14],[129,8,79,14],[130,6,79,14],[130,9,102,5],[131,6,103,4,"onSuccess"],[131,15,103,13],[131,17,103,15,"onSuccess"],[131,18,103,16,"data"],[131,22,103,20],[131,24,103,22,"variables"],[131,33,103,31],[131,38,103,36],[132,8,104,6],[133,8,105,6,"queryClient"],[133,19,105,17],[133,20,105,18,"invalidateQueries"],[133,37,105,35],[133,38,105,36],[133,39,105,37],[133,49,105,47],[133,51,105,49,"variables"],[133,60,105,58],[133,61,105,59,"postId"],[133,67,105,65],[133,68,105,66],[133,69,105,67],[134,8,106,6],[135,8,107,6,"queryClient"],[135,19,107,17],[135,20,107,18,"invalidateQueries"],[135,37,107,35],[135,38,107,36],[135,39,107,37],[135,46,107,44],[135,47,107,45],[135,48,107,46],[136,6,108,4],[137,4,109,2],[137,5,109,3],[137,6,109,4],[138,2,110,0],[140,2,112,0],[141,0,113,0],[142,0,114,0],[143,2,112,0,"_s3"],[143,5,112,0],[143,6,75,16,"useCreateCommentMutation"],[143,30,75,40],[144,4,75,40],[144,12,76,22,"useQueryClient"],[144,31,76,36],[144,32,76,36,"useQueryClient"],[144,46,76,36],[144,48,78,9,"useMutation"],[144,67,78,20],[144,68,78,20,"useMutation"],[144,79,78,20],[145,2,78,20],[146,2,115,7],[146,11,115,16,"useVoteCommentMutation"],[146,33,115,38,"useVoteCommentMutation"],[146,34,115,38],[146,36,115,41],[147,4,115,41,"_s4"],[147,7,115,41],[148,4,116,2],[148,8,116,8,"queryClient"],[148,19,116,19],[148,22,116,22],[148,26,116,22,"useQueryClient"],[148,45,116,36],[148,46,116,36,"useQueryClient"],[148,60,116,36],[148,62,116,37],[148,63,116,38],[149,4,118,2],[149,11,118,9],[149,15,118,9,"useMutation"],[149,34,118,20],[149,35,118,20,"useMutation"],[149,46,118,20],[149,48,118,21],[150,6,119,4,"mutationFn"],[150,16,119,14],[151,8,119,14],[151,12,119,14,"_ref6"],[151,17,119,14],[151,24,119,14,"_asyncToGenerator"],[151,41,119,14],[151,42,119,14,"default"],[151,49,119,14],[151,51,119,16],[151,62,119,16,"_ref5"],[151,67,119,16],[151,69,119,67],[152,10,119,67],[152,14,119,25,"userId"],[152,20,119,31],[152,23,119,31,"_ref5"],[152,28,119,31],[152,29,119,25,"userId"],[152,35,119,31],[153,12,119,33,"commentId"],[153,21,119,42],[153,24,119,42,"_ref5"],[153,29,119,42],[153,30,119,33,"commentId"],[153,39,119,42],[154,12,119,44,"voteType"],[154,20,119,52],[154,23,119,52,"_ref5"],[154,28,119,52],[154,29,119,44,"voteType"],[154,37,119,52],[155,12,119,54,"postId"],[155,18,119,60],[155,21,119,60,"_ref5"],[155,26,119,60],[155,27,119,54,"postId"],[155,33,119,60],[156,10,120,6],[157,10,121,6],[157,14,121,6,"_yield$supabase$from$4"],[157,36,121,6],[157,45,121,30,"supabase"],[157,54,121,38],[157,55,121,38,"supabase"],[157,63,121,38],[157,64,122,9,"from"],[157,68,122,13],[157,69,122,14],[157,85,122,30],[157,86,122,31],[157,87,123,9,"upsert"],[157,93,123,15],[157,94,124,10],[158,14,125,12,"user_id"],[158,21,125,19],[158,23,125,21,"userId"],[158,29,125,27],[159,14,126,12,"comment_id"],[159,24,126,22],[159,26,126,24,"commentId"],[159,35,126,33],[160,14,127,12,"vote_type"],[160,23,127,21],[160,25,127,23,"voteType"],[161,12,128,10],[161,13,128,11],[161,15,129,10],[162,14,130,12,"onConflict"],[162,24,130,22],[162,26,130,24],[163,12,131,10],[163,13,132,8],[163,14,132,9],[164,12,121,14,"error"],[164,17,121,19],[164,20,121,19,"_yield$supabase$from$4"],[164,42,121,19],[164,43,121,14,"error"],[164,48,121,19],[165,10,134,6],[165,14,134,10,"error"],[165,19,134,15],[165,21,134,17],[165,27,134,23,"error"],[165,32,134,28],[167,10,136,6],[168,10,137,6],[168,14,137,6,"_yield$supabase$from$5"],[168,36,137,6],[168,45,137,36,"supabase"],[168,54,137,44],[168,55,137,44,"supabase"],[168,63,137,44],[168,64,138,9,"from"],[168,68,138,13],[168,69,138,14],[168,85,138,30],[168,86,138,31],[168,87,139,9,"select"],[168,93,139,15],[168,94,139,16],[168,105,139,27],[168,106,139,28],[168,107,140,9,"eq"],[168,109,140,11],[168,110,140,12],[168,122,140,24],[168,124,140,26,"commentId"],[168,133,140,35],[168,134,140,36],[169,12,137,20,"votes"],[169,17,137,25],[169,20,137,25,"_yield$supabase$from$5"],[169,42,137,25],[169,43,137,14,"data"],[169,47,137,18],[170,10,142,6],[170,14,142,12,"newScore"],[170,22,142,20],[170,25,142,23,"votes"],[170,30,142,28],[170,32,142,30,"reduce"],[170,38,142,36],[170,39,142,37],[170,40,142,38,"sum"],[170,43,142,41],[170,45,142,43,"vote"],[170,49,142,47],[170,54,142,52,"sum"],[170,57,142,55],[170,60,142,58,"vote"],[170,64,142,62],[170,65,142,63,"vote_type"],[170,74,142,72],[170,76,142,74],[170,77,142,75],[170,78,142,76],[170,82,142,80],[170,83,142,81],[171,10,144,6],[171,16,144,12,"supabase"],[171,25,144,20],[171,26,144,20,"supabase"],[171,34,144,20],[171,35,145,9,"from"],[171,39,145,13],[171,40,145,14],[171,50,145,24],[171,51,145,25],[171,52,146,9,"update"],[171,58,146,15],[171,59,146,16],[172,12,146,18,"score"],[172,17,146,23],[172,19,146,25,"newScore"],[173,10,146,34],[173,11,146,35],[173,12,146,36],[173,13,147,9,"eq"],[173,15,147,11],[173,16,147,12],[173,20,147,16],[173,22,147,18,"commentId"],[173,31,147,27],[173,32,147,28],[174,8,148,4],[174,9,148,5],[175,8,148,5],[175,24,119,4,"mutationFn"],[175,34,119,14,"mutationFn"],[175,35,119,14,"_x2"],[175,38,119,14],[176,10,119,14],[176,17,119,14,"_ref6"],[176,22,119,14],[176,23,119,14,"apply"],[176,28,119,14],[176,35,119,14,"arguments"],[176,44,119,14],[177,8,119,14],[178,6,119,14],[178,9,148,5],[179,6,149,4,"onSuccess"],[179,15,149,13],[179,17,149,15,"onSuccess"],[179,18,149,16,"_"],[179,19,149,17],[179,21,149,19,"variables"],[179,30,149,28],[179,35,149,33],[180,8,150,6,"queryClient"],[180,19,150,17],[180,20,150,18,"invalidateQueries"],[180,37,150,35],[180,38,150,36],[180,39,150,37],[180,49,150,47],[180,51,150,49,"variables"],[180,60,150,58],[180,61,150,59,"postId"],[180,67,150,65],[180,68,150,66],[180,69,150,67],[181,8,151,6,"queryClient"],[181,19,151,17],[181,20,151,18,"invalidateQueries"],[181,37,151,35],[181,38,151,36],[181,39,151,37],[181,54,151,52],[181,56,151,54,"variables"],[181,65,151,63],[181,66,151,64,"postId"],[181,72,151,70],[181,73,151,71],[181,74,151,72],[182,6,152,4],[183,4,153,2],[183,5,153,3],[183,6,153,4],[184,2,154,0],[186,2,156,0],[187,0,157,0],[188,0,158,0],[189,2,156,0,"_s4"],[189,5,156,0],[189,6,115,16,"useVoteCommentMutation"],[189,28,115,38],[190,4,115,38],[190,12,116,22,"useQueryClient"],[190,31,116,36],[190,32,116,36,"useQueryClient"],[190,46,116,36],[190,48,118,9,"useMutation"],[190,67,118,20],[190,68,118,20,"useMutation"],[190,79,118,20],[191,2,118,20],[192,2,159,7],[192,11,159,16,"useDeleteCommentMutation"],[192,35,159,40,"useDeleteCommentMutation"],[192,36,159,40],[192,38,159,43],[193,4,159,43,"_s5"],[193,7,159,43],[194,4,160,2],[194,8,160,8,"queryClient"],[194,19,160,19],[194,22,160,22],[194,26,160,22,"useQueryClient"],[194,45,160,36],[194,46,160,36,"useQueryClient"],[194,60,160,36],[194,62,160,37],[194,63,160,38],[195,4,162,2],[195,11,162,9],[195,15,162,9,"useMutation"],[195,34,162,20],[195,35,162,20,"useMutation"],[195,46,162,20],[195,48,162,21],[196,6,163,4,"mutationFn"],[196,16,163,14],[197,8,163,14],[197,12,163,14,"_ref8"],[197,17,163,14],[197,24,163,14,"_asyncToGenerator"],[197,41,163,14],[197,42,163,14,"default"],[197,49,163,14],[197,51,163,16],[197,62,163,16,"_ref7"],[197,67,163,16],[197,69,163,49],[198,10,163,49],[198,14,163,25,"commentId"],[198,23,163,34],[198,26,163,34,"_ref7"],[198,31,163,34],[198,32,163,25,"commentId"],[198,41,163,34],[199,12,163,36,"postId"],[199,18,163,42],[199,21,163,42,"_ref7"],[199,26,163,42],[199,27,163,36,"postId"],[199,33,163,42],[200,10,164,6],[200,14,164,6,"_yield$supabase$from$6"],[200,36,164,6],[200,45,164,30,"supabase"],[200,54,164,38],[200,55,164,38,"supabase"],[200,63,164,38],[200,64,165,9,"from"],[200,68,165,13],[200,69,165,14],[200,79,165,24],[200,80,165,25],[200,81,166,9,"delete"],[200,87,166,15],[200,88,166,16],[200,89,166,17],[200,90,167,9,"eq"],[200,92,167,11],[200,93,167,12],[200,97,167,16],[200,99,167,18,"commentId"],[200,108,167,27],[200,109,167,28],[201,12,164,14,"error"],[201,17,164,19],[201,20,164,19,"_yield$supabase$from$6"],[201,42,164,19],[201,43,164,14,"error"],[201,48,164,19],[202,10,169,6],[202,14,169,10,"error"],[202,19,169,15],[202,21,169,17],[202,27,169,23,"error"],[202,32,169,28],[203,8,170,4],[203,9,170,5],[204,8,170,5],[204,24,163,4,"mutationFn"],[204,34,163,14,"mutationFn"],[204,35,163,14,"_x3"],[204,38,163,14],[205,10,163,14],[205,17,163,14,"_ref8"],[205,22,163,14],[205,23,163,14,"apply"],[205,28,163,14],[205,35,163,14,"arguments"],[205,44,163,14],[206,8,163,14],[207,6,163,14],[207,9,170,5],[208,6,171,4,"onSuccess"],[208,15,171,13],[208,17,171,15,"onSuccess"],[208,18,171,16,"_"],[208,19,171,17],[208,21,171,19,"variables"],[208,30,171,28],[208,35,171,33],[209,8,172,6,"queryClient"],[209,19,172,17],[209,20,172,18,"invalidateQueries"],[209,37,172,35],[209,38,172,36],[209,39,172,37],[209,49,172,47],[209,51,172,49,"variables"],[209,60,172,58],[209,61,172,59,"postId"],[209,67,172,65],[209,68,172,66],[209,69,172,67],[210,8,173,6,"queryClient"],[210,19,173,17],[210,20,173,18,"invalidateQueries"],[210,37,173,35],[210,38,173,36],[210,39,173,37],[210,46,173,44],[210,47,173,45],[210,48,173,46],[211,6,174,4],[212,4,175,2],[212,5,175,3],[212,6,175,4],[213,2,176,0],[214,2,176,1,"_s5"],[214,5,176,1],[214,6,159,16,"useDeleteCommentMutation"],[214,30,159,40],[215,4,159,40],[215,12,160,22,"useQueryClient"],[215,31,160,36],[215,32,160,36,"useQueryClient"],[215,46,160,36],[215,48,162,9,"useMutation"],[215,67,162,20],[215,68,162,20,"useMutation"],[215,79,162,20],[216,2,162,20],[217,0,162,20],[217,3]],"functionMap":{"names":["<global>","useCommentsQuery","useQuery$argument_0.queryFn","data.map$argument_0","useCommentVotesQuery","data.reduce$argument_0","useCreateCommentMutation","useMutation$argument_0.mutationFn","useMutation$argument_0.onSuccess","useVoteCommentMutation","votes.reduce$argument_0","useDeleteCommentMutation"],"mappings":"AAA;OCM;aCG;sBCe;QDK;KDC;CDG;OIK;aFG;sBCe,WD;yBGM;OHG;KEC;CJG;OMK;gBCI;KDuB;eEC;KFK;CNE;OSK;gBFI;qCGuB,mCH;KEM;eDC;KCG;CTE;OWK;gBJI;KIO;eHC;KGG;CXE"},"hasCjsExports":false},"type":"js/module"}]}