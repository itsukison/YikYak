{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@tanstack/react-query","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":78,"index":78}}],"key":"Pzwu/0TIyhnZOrC9PAkpZx92hFo=","exportNames":["*"],"imports":1}},{"name":"../supabase","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":79},"end":{"line":2,"column":39,"index":118}}],"key":"zx/dTdJp0d3TJEOaa003L7FI5PE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.useNotificationsQuery = useNotificationsQuery;\n  exports.useUnreadCountQuery = useUnreadCountQuery;\n  exports.useMarkNotificationReadMutation = useMarkNotificationReadMutation;\n  exports.useMarkAllReadMutation = useMarkAllReadMutation;\n  exports.useDeleteNotificationMutation = useDeleteNotificationMutation;\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _tanstackReactQuery = require(_dependencyMap[1], \"@tanstack/react-query\");\n  var _supabase = require(_dependencyMap[2], \"../supabase\");\n  /**\n   * Fetch all notifications for a user\n   */\n  function useNotificationsQuery(userId) {\n    _s();\n    return (0, _tanstackReactQuery.useQuery)({\n      queryKey: [\"notifications\", userId],\n      queryFn: function () {\n        var _ref = (0, _asyncToGenerator.default)(function* () {\n          if (!userId) throw new Error(\"User ID required\");\n          var _yield$supabase$from$ = yield _supabase.supabase.from(\"notifications\").select(`\n          *,\n          actor:users!notifications_actor_id_fkey(id, nickname, is_anonymous),\n          post:posts(id, content),\n          comment:comments(id, content)\n        `).eq(\"user_id\", userId).order(\"created_at\", {\n              ascending: false\n            }).limit(50),\n            data = _yield$supabase$from$.data,\n            error = _yield$supabase$from$.error;\n          if (error) throw error;\n\n          // Transform data to include display names\n          return data.map(notification => ({\n            ...notification,\n            actor_name: notification.actor?.is_anonymous ? \"Anonymous\" : notification.actor?.nickname || \"Someone\"\n          }));\n        });\n        return function queryFn() {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      enabled: !!userId\n    });\n  }\n\n  /**\n   * Get unread notification count\n   */\n  _s(useNotificationsQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n    return [_tanstackReactQuery.useQuery];\n  });\n  function useUnreadCountQuery(userId) {\n    _s2();\n    return (0, _tanstackReactQuery.useQuery)({\n      queryKey: [\"notifications-unread-count\", userId],\n      queryFn: function () {\n        var _ref2 = (0, _asyncToGenerator.default)(function* () {\n          if (!userId) return 0;\n          var _yield$supabase$from$2 = yield _supabase.supabase.from(\"notifications\").select(\"*\", {\n              count: \"exact\",\n              head: true\n            }).eq(\"user_id\", userId).eq(\"is_read\", false),\n            count = _yield$supabase$from$2.count,\n            error = _yield$supabase$from$2.error;\n          if (error) throw error;\n          return count || 0;\n        });\n        return function queryFn() {\n          return _ref2.apply(this, arguments);\n        };\n      }(),\n      enabled: !!userId\n    });\n  }\n\n  /**\n   * Mark a notification as read\n   */\n  _s2(useUnreadCountQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n    return [_tanstackReactQuery.useQuery];\n  });\n  function useMarkNotificationReadMutation() {\n    _s3();\n    var queryClient = (0, _tanstackReactQuery.useQueryClient)();\n    return (0, _tanstackReactQuery.useMutation)({\n      mutationFn: function () {\n        var _ref4 = (0, _asyncToGenerator.default)(function* (_ref3) {\n          var notificationId = _ref3.notificationId;\n          var _yield$supabase$from$3 = yield _supabase.supabase.from(\"notifications\").update({\n              is_read: true\n            }).eq(\"id\", notificationId),\n            error = _yield$supabase$from$3.error;\n          if (error) throw error;\n        });\n        return function mutationFn(_x) {\n          return _ref4.apply(this, arguments);\n        };\n      }(),\n      onSuccess: (_, variables) => {\n        // Invalidate notifications query\n        queryClient.invalidateQueries([\"notifications\"]);\n        queryClient.invalidateQueries([\"notifications-unread-count\"]);\n      }\n    });\n  }\n\n  /**\n   * Mark all notifications as read\n   */\n  _s3(useMarkNotificationReadMutation, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n    return [_tanstackReactQuery.useQueryClient, _tanstackReactQuery.useMutation];\n  });\n  function useMarkAllReadMutation() {\n    _s4();\n    var queryClient = (0, _tanstackReactQuery.useQueryClient)();\n    return (0, _tanstackReactQuery.useMutation)({\n      mutationFn: function () {\n        var _ref6 = (0, _asyncToGenerator.default)(function* (_ref5) {\n          var userId = _ref5.userId;\n          var _yield$supabase$from$4 = yield _supabase.supabase.from(\"notifications\").update({\n              is_read: true\n            }).eq(\"user_id\", userId).eq(\"is_read\", false),\n            error = _yield$supabase$from$4.error;\n          if (error) throw error;\n        });\n        return function mutationFn(_x2) {\n          return _ref6.apply(this, arguments);\n        };\n      }(),\n      onSuccess: () => {\n        queryClient.invalidateQueries([\"notifications\"]);\n        queryClient.invalidateQueries([\"notifications-unread-count\"]);\n      }\n    });\n  }\n\n  /**\n   * Delete a notification\n   */\n  _s4(useMarkAllReadMutation, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n    return [_tanstackReactQuery.useQueryClient, _tanstackReactQuery.useMutation];\n  });\n  function useDeleteNotificationMutation() {\n    _s5();\n    var queryClient = (0, _tanstackReactQuery.useQueryClient)();\n    return (0, _tanstackReactQuery.useMutation)({\n      mutationFn: function () {\n        var _ref8 = (0, _asyncToGenerator.default)(function* (_ref7) {\n          var notificationId = _ref7.notificationId;\n          var _yield$supabase$from$5 = yield _supabase.supabase.from(\"notifications\").delete().eq(\"id\", notificationId),\n            error = _yield$supabase$from$5.error;\n          if (error) throw error;\n        });\n        return function mutationFn(_x3) {\n          return _ref8.apply(this, arguments);\n        };\n      }(),\n      onSuccess: () => {\n        queryClient.invalidateQueries([\"notifications\"]);\n        queryClient.invalidateQueries([\"notifications-unread-count\"]);\n      }\n    });\n  }\n  _s5(useDeleteNotificationMutation, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n    return [_tanstackReactQuery.useQueryClient, _tanstackReactQuery.useMutation];\n  });\n});","lineCount":183,"map":[[17,2,7,0,"exports"],[17,9,7,0],[17,10,7,0,"useNotificationsQuery"],[17,31,7,0],[17,34,7,0,"useNotificationsQuery"],[17,55,7,0],[18,2,42,0,"exports"],[18,9,42,0],[18,10,42,0,"useUnreadCountQuery"],[18,29,42,0],[18,32,42,0,"useUnreadCountQuery"],[18,51,42,0],[19,2,64,0,"exports"],[19,9,64,0],[19,10,64,0,"useMarkNotificationReadMutation"],[19,41,64,0],[19,44,64,0,"useMarkNotificationReadMutation"],[19,75,64,0],[20,2,87,0,"exports"],[20,9,87,0],[20,10,87,0,"useMarkAllReadMutation"],[20,32,87,0],[20,35,87,0,"useMarkAllReadMutation"],[20,57,87,0],[21,2,110,0,"exports"],[21,9,110,0],[21,10,110,0,"useDeleteNotificationMutation"],[21,39,110,0],[21,42,110,0,"useDeleteNotificationMutation"],[21,71,110,0],[22,2,127,1],[22,6,127,1,"_babelRuntimeHelpersAsyncToGenerator"],[22,42,127,1],[22,45,127,1,"require"],[22,52,127,1],[22,53,127,1,"_dependencyMap"],[22,67,127,1],[23,2,127,1],[23,6,127,1,"_asyncToGenerator"],[23,23,127,1],[23,26,127,1,"_interopDefault"],[23,41,127,1],[23,42,127,1,"_babelRuntimeHelpersAsyncToGenerator"],[23,78,127,1],[24,2,1,0],[24,6,1,0,"_tanstackReactQuery"],[24,25,1,0],[24,28,1,0,"require"],[24,35,1,0],[24,36,1,0,"_dependencyMap"],[24,50,1,0],[25,2,2,0],[25,6,2,0,"_supabase"],[25,15,2,0],[25,18,2,0,"require"],[25,25,2,0],[25,26,2,0,"_dependencyMap"],[25,40,2,0],[26,2,4,0],[27,0,5,0],[28,0,6,0],[29,2,7,7],[29,11,7,16,"useNotificationsQuery"],[29,32,7,37,"useNotificationsQuery"],[29,33,7,38,"userId"],[29,39,7,44],[29,41,7,46],[30,4,7,46,"_s"],[30,6,7,46],[31,4,8,2],[31,11,8,9],[31,15,8,9,"useQuery"],[31,34,8,17],[31,35,8,17,"useQuery"],[31,43,8,17],[31,45,8,18],[32,6,9,4,"queryKey"],[32,14,9,12],[32,16,9,14],[32,17,9,15],[32,32,9,30],[32,34,9,32,"userId"],[32,40,9,38],[32,41,9,39],[33,6,10,4,"queryFn"],[33,13,10,11],[34,8,10,11],[34,12,10,11,"_ref"],[34,16,10,11],[34,23,10,11,"_asyncToGenerator"],[34,40,10,11],[34,41,10,11,"default"],[34,48,10,11],[34,50,10,13],[34,63,10,25],[35,10,11,6],[35,14,11,10],[35,15,11,11,"userId"],[35,21,11,17],[35,23,11,19],[35,29,11,25],[35,33,11,29,"Error"],[35,38,11,34],[35,39,11,35],[35,57,11,53],[35,58,11,54],[36,10,13,6],[36,14,13,6,"_yield$supabase$from$"],[36,35,13,6],[36,44,13,36,"supabase"],[36,53,13,44],[36,54,13,44,"supabase"],[36,62,13,44],[36,63,14,9,"from"],[36,67,14,13],[36,68,14,14],[36,83,14,29],[36,84,14,30],[36,85,15,9,"select"],[36,91,15,15],[36,92,15,16],[37,0,16,0],[38,0,17,0],[39,0,18,0],[40,0,19,0],[41,0,20,0],[41,9,20,9],[41,10,20,10],[41,11,21,9,"eq"],[41,13,21,11],[41,14,21,12],[41,23,21,21],[41,25,21,23,"userId"],[41,31,21,29],[41,32,21,30],[41,33,22,9,"order"],[41,38,22,14],[41,39,22,15],[41,51,22,27],[41,53,22,29],[42,14,22,31,"ascending"],[42,23,22,40],[42,25,22,42],[43,12,22,48],[43,13,22,49],[43,14,22,50],[43,15,23,9,"limit"],[43,20,23,14],[43,21,23,15],[43,23,23,17],[43,24,23,18],[44,12,13,14,"data"],[44,16,13,18],[44,19,13,18,"_yield$supabase$from$"],[44,40,13,18],[44,41,13,14,"data"],[44,45,13,18],[45,12,13,20,"error"],[45,17,13,25],[45,20,13,25,"_yield$supabase$from$"],[45,41,13,25],[45,42,13,20,"error"],[45,47,13,25],[46,10,25,6],[46,14,25,10,"error"],[46,19,25,15],[46,21,25,17],[46,27,25,23,"error"],[46,32,25,28],[48,10,27,6],[49,10,28,6],[49,17,28,13,"data"],[49,21,28,17],[49,22,28,18,"map"],[49,25,28,21],[49,26,28,23,"notification"],[49,38,28,35],[49,43,28,41],[50,12,29,8],[50,15,29,11,"notification"],[50,27,29,23],[51,12,30,8,"actor_name"],[51,22,30,18],[51,24,30,20,"notification"],[51,36,30,32],[51,37,30,33,"actor"],[51,42,30,38],[51,44,30,40,"is_anonymous"],[51,56,30,52],[51,59,31,12],[51,70,31,23],[51,73,32,12,"notification"],[51,85,32,24],[51,86,32,25,"actor"],[51,91,32,30],[51,93,32,32,"nickname"],[51,101,32,40],[51,105,32,44],[52,10,33,6],[52,11,33,7],[52,12,33,8],[52,13,33,9],[53,8,34,4],[53,9,34,5],[54,8,34,5],[54,24,10,4,"queryFn"],[54,31,10,11,"queryFn"],[54,32,10,11],[55,10,10,11],[55,17,10,11,"_ref"],[55,21,10,11],[55,22,10,11,"apply"],[55,27,10,11],[55,34,10,11,"arguments"],[55,43,10,11],[56,8,10,11],[57,6,10,11],[57,9,34,5],[58,6,35,4,"enabled"],[58,13,35,11],[58,15,35,13],[58,16,35,14],[58,17,35,15,"userId"],[59,4,36,2],[59,5,36,3],[59,6,36,4],[60,2,37,0],[62,2,39,0],[63,0,40,0],[64,0,41,0],[65,2,39,0,"_s"],[65,4,39,0],[65,5,7,16,"useNotificationsQuery"],[65,26,7,37],[66,4,7,37],[66,12,8,9,"useQuery"],[66,31,8,17],[66,32,8,17,"useQuery"],[66,40,8,17],[67,2,8,17],[68,2,42,7],[68,11,42,16,"useUnreadCountQuery"],[68,30,42,35,"useUnreadCountQuery"],[68,31,42,36,"userId"],[68,37,42,42],[68,39,42,44],[69,4,42,44,"_s2"],[69,7,42,44],[70,4,43,2],[70,11,43,9],[70,15,43,9,"useQuery"],[70,34,43,17],[70,35,43,17,"useQuery"],[70,43,43,17],[70,45,43,18],[71,6,44,4,"queryKey"],[71,14,44,12],[71,16,44,14],[71,17,44,15],[71,45,44,43],[71,47,44,45,"userId"],[71,53,44,51],[71,54,44,52],[72,6,45,4,"queryFn"],[72,13,45,11],[73,8,45,11],[73,12,45,11,"_ref2"],[73,17,45,11],[73,24,45,11,"_asyncToGenerator"],[73,41,45,11],[73,42,45,11,"default"],[73,49,45,11],[73,51,45,13],[73,64,45,25],[74,10,46,6],[74,14,46,10],[74,15,46,11,"userId"],[74,21,46,17],[74,23,46,19],[74,30,46,26],[74,31,46,27],[75,10,48,6],[75,14,48,6,"_yield$supabase$from$2"],[75,36,48,6],[75,45,48,37,"supabase"],[75,54,48,45],[75,55,48,45,"supabase"],[75,63,48,45],[75,64,49,9,"from"],[75,68,49,13],[75,69,49,14],[75,84,49,29],[75,85,49,30],[75,86,50,9,"select"],[75,92,50,15],[75,93,50,16],[75,96,50,19],[75,98,50,21],[76,14,50,23,"count"],[76,19,50,28],[76,21,50,30],[76,28,50,37],[77,14,50,39,"head"],[77,18,50,43],[77,20,50,45],[78,12,50,50],[78,13,50,51],[78,14,50,52],[78,15,51,9,"eq"],[78,17,51,11],[78,18,51,12],[78,27,51,21],[78,29,51,23,"userId"],[78,35,51,29],[78,36,51,30],[78,37,52,9,"eq"],[78,39,52,11],[78,40,52,12],[78,49,52,21],[78,51,52,23],[78,56,52,28],[78,57,52,29],[79,12,48,14,"count"],[79,17,48,19],[79,20,48,19,"_yield$supabase$from$2"],[79,42,48,19],[79,43,48,14,"count"],[79,48,48,19],[80,12,48,21,"error"],[80,17,48,26],[80,20,48,26,"_yield$supabase$from$2"],[80,42,48,26],[80,43,48,21,"error"],[80,48,48,26],[81,10,54,6],[81,14,54,10,"error"],[81,19,54,15],[81,21,54,17],[81,27,54,23,"error"],[81,32,54,28],[82,10,55,6],[82,17,55,13,"count"],[82,22,55,18],[82,26,55,22],[82,27,55,23],[83,8,56,4],[83,9,56,5],[84,8,56,5],[84,24,45,4,"queryFn"],[84,31,45,11,"queryFn"],[84,32,45,11],[85,10,45,11],[85,17,45,11,"_ref2"],[85,22,45,11],[85,23,45,11,"apply"],[85,28,45,11],[85,35,45,11,"arguments"],[85,44,45,11],[86,8,45,11],[87,6,45,11],[87,9,56,5],[88,6,57,4,"enabled"],[88,13,57,11],[88,15,57,13],[88,16,57,14],[88,17,57,15,"userId"],[89,4,58,2],[89,5,58,3],[89,6,58,4],[90,2,59,0],[92,2,61,0],[93,0,62,0],[94,0,63,0],[95,2,61,0,"_s2"],[95,5,61,0],[95,6,42,16,"useUnreadCountQuery"],[95,25,42,35],[96,4,42,35],[96,12,43,9,"useQuery"],[96,31,43,17],[96,32,43,17,"useQuery"],[96,40,43,17],[97,2,43,17],[98,2,64,7],[98,11,64,16,"useMarkNotificationReadMutation"],[98,42,64,47,"useMarkNotificationReadMutation"],[98,43,64,47],[98,45,64,50],[99,4,64,50,"_s3"],[99,7,64,50],[100,4,65,2],[100,8,65,8,"queryClient"],[100,19,65,19],[100,22,65,22],[100,26,65,22,"useQueryClient"],[100,45,65,36],[100,46,65,36,"useQueryClient"],[100,60,65,36],[100,62,65,37],[100,63,65,38],[101,4,67,2],[101,11,67,9],[101,15,67,9,"useMutation"],[101,34,67,20],[101,35,67,20,"useMutation"],[101,46,67,20],[101,48,67,21],[102,6,68,4,"mutationFn"],[102,16,68,14],[103,8,68,14],[103,12,68,14,"_ref4"],[103,17,68,14],[103,24,68,14,"_asyncToGenerator"],[103,41,68,14],[103,42,68,14,"default"],[103,49,68,14],[103,51,68,16],[103,62,68,16,"_ref3"],[103,67,68,16],[103,69,68,46],[104,10,68,46],[104,14,68,25,"notificationId"],[104,28,68,39],[104,31,68,39,"_ref3"],[104,36,68,39],[104,37,68,25,"notificationId"],[104,51,68,39],[105,10,69,6],[105,14,69,6,"_yield$supabase$from$3"],[105,36,69,6],[105,45,69,30,"supabase"],[105,54,69,38],[105,55,69,38,"supabase"],[105,63,69,38],[105,64,70,9,"from"],[105,68,70,13],[105,69,70,14],[105,84,70,29],[105,85,70,30],[105,86,71,9,"update"],[105,92,71,15],[105,93,71,16],[106,14,71,18,"is_read"],[106,21,71,25],[106,23,71,27],[107,12,71,32],[107,13,71,33],[107,14,71,34],[107,15,72,9,"eq"],[107,17,72,11],[107,18,72,12],[107,22,72,16],[107,24,72,18,"notificationId"],[107,38,72,32],[107,39,72,33],[108,12,69,14,"error"],[108,17,69,19],[108,20,69,19,"_yield$supabase$from$3"],[108,42,69,19],[108,43,69,14,"error"],[108,48,69,19],[109,10,74,6],[109,14,74,10,"error"],[109,19,74,15],[109,21,74,17],[109,27,74,23,"error"],[109,32,74,28],[110,8,75,4],[110,9,75,5],[111,8,75,5],[111,24,68,4,"mutationFn"],[111,34,68,14,"mutationFn"],[111,35,68,14,"_x"],[111,37,68,14],[112,10,68,14],[112,17,68,14,"_ref4"],[112,22,68,14],[112,23,68,14,"apply"],[112,28,68,14],[112,35,68,14,"arguments"],[112,44,68,14],[113,8,68,14],[114,6,68,14],[114,9,75,5],[115,6,76,4,"onSuccess"],[115,15,76,13],[115,17,76,15,"onSuccess"],[115,18,76,16,"_"],[115,19,76,17],[115,21,76,19,"variables"],[115,30,76,28],[115,35,76,33],[116,8,77,6],[117,8,78,6,"queryClient"],[117,19,78,17],[117,20,78,18,"invalidateQueries"],[117,37,78,35],[117,38,78,36],[117,39,78,37],[117,54,78,52],[117,55,78,53],[117,56,78,54],[118,8,79,6,"queryClient"],[118,19,79,17],[118,20,79,18,"invalidateQueries"],[118,37,79,35],[118,38,79,36],[118,39,79,37],[118,67,79,65],[118,68,79,66],[118,69,79,67],[119,6,80,4],[120,4,81,2],[120,5,81,3],[120,6,81,4],[121,2,82,0],[123,2,84,0],[124,0,85,0],[125,0,86,0],[126,2,84,0,"_s3"],[126,5,84,0],[126,6,64,16,"useMarkNotificationReadMutation"],[126,37,64,47],[127,4,64,47],[127,12,65,22,"useQueryClient"],[127,31,65,36],[127,32,65,36,"useQueryClient"],[127,46,65,36],[127,48,67,9,"useMutation"],[127,67,67,20],[127,68,67,20,"useMutation"],[127,79,67,20],[128,2,67,20],[129,2,87,7],[129,11,87,16,"useMarkAllReadMutation"],[129,33,87,38,"useMarkAllReadMutation"],[129,34,87,38],[129,36,87,41],[130,4,87,41,"_s4"],[130,7,87,41],[131,4,88,2],[131,8,88,8,"queryClient"],[131,19,88,19],[131,22,88,22],[131,26,88,22,"useQueryClient"],[131,45,88,36],[131,46,88,36,"useQueryClient"],[131,60,88,36],[131,62,88,37],[131,63,88,38],[132,4,90,2],[132,11,90,9],[132,15,90,9,"useMutation"],[132,34,90,20],[132,35,90,20,"useMutation"],[132,46,90,20],[132,48,90,21],[133,6,91,4,"mutationFn"],[133,16,91,14],[134,8,91,14],[134,12,91,14,"_ref6"],[134,17,91,14],[134,24,91,14,"_asyncToGenerator"],[134,41,91,14],[134,42,91,14,"default"],[134,49,91,14],[134,51,91,16],[134,62,91,16,"_ref5"],[134,67,91,16],[134,69,91,38],[135,10,91,38],[135,14,91,25,"userId"],[135,20,91,31],[135,23,91,31,"_ref5"],[135,28,91,31],[135,29,91,25,"userId"],[135,35,91,31],[136,10,92,6],[136,14,92,6,"_yield$supabase$from$4"],[136,36,92,6],[136,45,92,30,"supabase"],[136,54,92,38],[136,55,92,38,"supabase"],[136,63,92,38],[136,64,93,9,"from"],[136,68,93,13],[136,69,93,14],[136,84,93,29],[136,85,93,30],[136,86,94,9,"update"],[136,92,94,15],[136,93,94,16],[137,14,94,18,"is_read"],[137,21,94,25],[137,23,94,27],[138,12,94,32],[138,13,94,33],[138,14,94,34],[138,15,95,9,"eq"],[138,17,95,11],[138,18,95,12],[138,27,95,21],[138,29,95,23,"userId"],[138,35,95,29],[138,36,95,30],[138,37,96,9,"eq"],[138,39,96,11],[138,40,96,12],[138,49,96,21],[138,51,96,23],[138,56,96,28],[138,57,96,29],[139,12,92,14,"error"],[139,17,92,19],[139,20,92,19,"_yield$supabase$from$4"],[139,42,92,19],[139,43,92,14,"error"],[139,48,92,19],[140,10,98,6],[140,14,98,10,"error"],[140,19,98,15],[140,21,98,17],[140,27,98,23,"error"],[140,32,98,28],[141,8,99,4],[141,9,99,5],[142,8,99,5],[142,24,91,4,"mutationFn"],[142,34,91,14,"mutationFn"],[142,35,91,14,"_x2"],[142,38,91,14],[143,10,91,14],[143,17,91,14,"_ref6"],[143,22,91,14],[143,23,91,14,"apply"],[143,28,91,14],[143,35,91,14,"arguments"],[143,44,91,14],[144,8,91,14],[145,6,91,14],[145,9,99,5],[146,6,100,4,"onSuccess"],[146,15,100,13],[146,17,100,15,"onSuccess"],[146,18,100,15],[146,23,100,21],[147,8,101,6,"queryClient"],[147,19,101,17],[147,20,101,18,"invalidateQueries"],[147,37,101,35],[147,38,101,36],[147,39,101,37],[147,54,101,52],[147,55,101,53],[147,56,101,54],[148,8,102,6,"queryClient"],[148,19,102,17],[148,20,102,18,"invalidateQueries"],[148,37,102,35],[148,38,102,36],[148,39,102,37],[148,67,102,65],[148,68,102,66],[148,69,102,67],[149,6,103,4],[150,4,104,2],[150,5,104,3],[150,6,104,4],[151,2,105,0],[153,2,107,0],[154,0,108,0],[155,0,109,0],[156,2,107,0,"_s4"],[156,5,107,0],[156,6,87,16,"useMarkAllReadMutation"],[156,28,87,38],[157,4,87,38],[157,12,88,22,"useQueryClient"],[157,31,88,36],[157,32,88,36,"useQueryClient"],[157,46,88,36],[157,48,90,9,"useMutation"],[157,67,90,20],[157,68,90,20,"useMutation"],[157,79,90,20],[158,2,90,20],[159,2,110,7],[159,11,110,16,"useDeleteNotificationMutation"],[159,40,110,45,"useDeleteNotificationMutation"],[159,41,110,45],[159,43,110,48],[160,4,110,48,"_s5"],[160,7,110,48],[161,4,111,2],[161,8,111,8,"queryClient"],[161,19,111,19],[161,22,111,22],[161,26,111,22,"useQueryClient"],[161,45,111,36],[161,46,111,36,"useQueryClient"],[161,60,111,36],[161,62,111,37],[161,63,111,38],[162,4,113,2],[162,11,113,9],[162,15,113,9,"useMutation"],[162,34,113,20],[162,35,113,20,"useMutation"],[162,46,113,20],[162,48,113,21],[163,6,114,4,"mutationFn"],[163,16,114,14],[164,8,114,14],[164,12,114,14,"_ref8"],[164,17,114,14],[164,24,114,14,"_asyncToGenerator"],[164,41,114,14],[164,42,114,14,"default"],[164,49,114,14],[164,51,114,16],[164,62,114,16,"_ref7"],[164,67,114,16],[164,69,114,46],[165,10,114,46],[165,14,114,25,"notificationId"],[165,28,114,39],[165,31,114,39,"_ref7"],[165,36,114,39],[165,37,114,25,"notificationId"],[165,51,114,39],[166,10,115,6],[166,14,115,6,"_yield$supabase$from$5"],[166,36,115,6],[166,45,115,30,"supabase"],[166,54,115,38],[166,55,115,38,"supabase"],[166,63,115,38],[166,64,116,9,"from"],[166,68,116,13],[166,69,116,14],[166,84,116,29],[166,85,116,30],[166,86,117,9,"delete"],[166,92,117,15],[166,93,117,16],[166,94,117,17],[166,95,118,9,"eq"],[166,97,118,11],[166,98,118,12],[166,102,118,16],[166,104,118,18,"notificationId"],[166,118,118,32],[166,119,118,33],[167,12,115,14,"error"],[167,17,115,19],[167,20,115,19,"_yield$supabase$from$5"],[167,42,115,19],[167,43,115,14,"error"],[167,48,115,19],[168,10,120,6],[168,14,120,10,"error"],[168,19,120,15],[168,21,120,17],[168,27,120,23,"error"],[168,32,120,28],[169,8,121,4],[169,9,121,5],[170,8,121,5],[170,24,114,4,"mutationFn"],[170,34,114,14,"mutationFn"],[170,35,114,14,"_x3"],[170,38,114,14],[171,10,114,14],[171,17,114,14,"_ref8"],[171,22,114,14],[171,23,114,14,"apply"],[171,28,114,14],[171,35,114,14,"arguments"],[171,44,114,14],[172,8,114,14],[173,6,114,14],[173,9,121,5],[174,6,122,4,"onSuccess"],[174,15,122,13],[174,17,122,15,"onSuccess"],[174,18,122,15],[174,23,122,21],[175,8,123,6,"queryClient"],[175,19,123,17],[175,20,123,18,"invalidateQueries"],[175,37,123,35],[175,38,123,36],[175,39,123,37],[175,54,123,52],[175,55,123,53],[175,56,123,54],[176,8,124,6,"queryClient"],[176,19,124,17],[176,20,124,18,"invalidateQueries"],[176,37,124,35],[176,38,124,36],[176,39,124,37],[176,67,124,65],[176,68,124,66],[176,69,124,67],[177,6,125,4],[178,4,126,2],[178,5,126,3],[178,6,126,4],[179,2,127,0],[180,2,127,1,"_s5"],[180,5,127,1],[180,6,110,16,"useDeleteNotificationMutation"],[180,35,110,45],[181,4,110,45],[181,12,111,22,"useQueryClient"],[181,31,111,36],[181,32,111,36,"useQueryClient"],[181,46,111,36],[181,48,113,9,"useMutation"],[181,67,113,20],[181,68,113,20,"useMutation"],[181,79,113,20],[182,2,113,20],[183,0,113,20],[183,3]],"functionMap":{"names":["<global>","useNotificationsQuery","useQuery$argument_0.queryFn","data.map$argument_0","useUnreadCountQuery","useMarkNotificationReadMutation","useMutation$argument_0.mutationFn","useMutation$argument_0.onSuccess","useMarkAllReadMutation","useDeleteNotificationMutation"],"mappings":"AAA;OCM;aCG;sBCkB;QDK;KDC;CDG;OIK;aFG;KEW;CJG;OKK;gBCI;KDO;eEC;KFI;CLE;OQK;gBFI;KEQ;eDC;KCG;CRE;OSK;gBHI;KGO;eFC;KEG;CTE"},"hasCjsExports":false},"type":"js/module"}]}