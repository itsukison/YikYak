{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"react-native","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":7,"column":0,"index":183},"end":{"line":7,"column":47,"index":230}}],"key":"KyzuX10g6ixS9UfynhmjlvCIG3g=","exportNames":["*"],"imports":1}},{"name":"@react-native/assets-registry/registry","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":11,"column":0,"index":349},"end":{"line":11,"column":70,"index":419}}],"key":"DfKH1NNXqDIAaDOtB+YKkBB07j8=","exportNames":["*"],"imports":1}},{"name":"./dynamic-loading-setting.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":12,"column":0,"index":420},"end":{"line":12,"column":90,"index":510}}],"key":"9b6OFU/5emZ1+l0NfofinoBG31I=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  /*\n   * The following imports are always present when react native is installed\n   * in the future, more explicit apis will be exposed by the core, including typings\n   * */\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"dynamicLoader\", {\n    enumerable: true,\n    get: function () {\n      return dynamicLoader;\n    }\n  });\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _reactNative = require(_dependencyMap[1], \"react-native\");\n  var _reactNativeAssetsRegistryRegistry = require(_dependencyMap[2], \"@react-native/assets-registry/registry\");\n  var _dynamicLoadingSettingJs = require(_dependencyMap[3], \"./dynamic-loading-setting.js\");\n  // @ts-expect-error missing types\n  // eslint-disable-next-line import/no-extraneous-dependencies,import/no-unresolved\n  var loadPromises = {};\n  var loadFontAsync = /*#__PURE__*/function () {\n    var _ref = (0, _asyncToGenerator.default)(function* (fontFamily, fontSource) {\n      var globalRef = globalThis;\n      (0, _dynamicLoadingSettingJs.assertExpoModulesPresent)(globalRef);\n      var expoModules = globalRef.expo.modules;\n      if (loadPromises[fontFamily]) {\n        return loadPromises[fontFamily];\n      }\n      loadPromises[fontFamily] = function () {\n        var _LoadFont = (0, _asyncToGenerator.default)(function* () {\n          try {\n            var localUri = yield (() => {\n              if (typeof fontSource === 'string') {\n                // a local filesystem uri\n                return fontSource;\n              }\n              // a module id\n              var _getLocalFontUrl = getLocalFontUrl(fontSource, fontFamily),\n                uri = _getLocalFontUrl.uri,\n                type = _getLocalFontUrl.type,\n                hash = _getLocalFontUrl.hash;\n              return expoModules.ExpoAsset.downloadAsync(uri, hash, type);\n            })();\n            var asset = _reactNative.Platform.select({\n              web: {\n                uri: localUri,\n                display: 'auto'\n              },\n              default: localUri\n            });\n            yield expoModules.ExpoFontLoader.loadAsync(fontFamily, asset);\n          } catch (error) {\n            console.error(`Failed to load font ${fontFamily}`, error); // eslint-disable-line no-console\n\n            (0, _dynamicLoadingSettingJs.getErrorCallback)()?.({\n              error: error,\n              fontFamily,\n              fontSource\n            });\n          } finally {\n            delete loadPromises[fontFamily];\n          }\n        });\n        function LoadFont() {\n          return _LoadFont.apply(this, arguments);\n        }\n        return LoadFont;\n      }()();\n      return loadPromises[fontFamily];\n    });\n    return function loadFontAsync(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n  var getLocalFontUrl = (fontModuleId, fontFamily) => {\n    var assetMeta = (0, _reactNativeAssetsRegistryRegistry.getAssetByID)(fontModuleId);\n    if (!assetMeta) {\n      throw new Error(`no asset found for font family \"${fontFamily}\", moduleId: ${String(fontModuleId)}`);\n    }\n    var assetSource = _reactNative.Image.resolveAssetSource(fontModuleId);\n    return {\n      ...assetMeta,\n      ...assetSource\n    };\n  };\n  var loadedFontsCache = {};\n  var isLoadedNative = fontFamily => {\n    if (fontFamily in loadedFontsCache) {\n      return true;\n    }\n    var globalRef = globalThis;\n    (0, _dynamicLoadingSettingJs.assertExpoModulesPresent)(globalRef);\n    var loadedNativeFonts = globalRef.expo.modules.ExpoFontLoader.getLoadedFonts();\n    loadedNativeFonts.forEach(font => {\n      loadedFontsCache[font] = true;\n    });\n    return fontFamily in loadedFontsCache;\n  };\n  var dynamicLoader = {\n    isLoaded: isLoadedNative,\n    loadFontAsync\n  };\n});","lineCount":112,"map":[[2,2,1,0],[2,14,1,12],[4,2,3,0],[5,0,4,0],[6,0,5,0],[7,0,6,0],[8,2,3,0,"Object"],[8,8,3,0],[8,9,3,0,"defineProperty"],[8,23,3,0],[8,24,3,0,"exports"],[8,31,3,0],[9,4,3,0,"value"],[9,9,3,0],[10,2,3,0],[11,2,3,0],[11,11,3,0,"_interopDefault"],[11,27,3,0,"e"],[11,28,3,0],[12,4,3,0],[12,11,3,0,"e"],[12,12,3,0],[12,16,3,0,"e"],[12,17,3,0],[12,18,3,0,"__esModule"],[12,28,3,0],[12,31,3,0,"e"],[12,32,3,0],[13,6,3,0,"default"],[13,13,3,0],[13,15,3,0,"e"],[14,4,3,0],[15,2,3,0],[16,2,82,0,"Object"],[16,8,82,0],[16,9,82,0,"defineProperty"],[16,23,82,0],[16,24,82,0,"exports"],[16,31,82,0],[17,4,82,0,"enumerable"],[17,14,82,0],[18,4,82,0,"get"],[18,7,82,0],[18,18,82,0,"get"],[18,19,82,0],[19,6,82,0],[19,13,82,0,"dynamicLoader"],[19,26,82,0],[20,4,82,0],[21,2,82,0],[22,2,85,2],[22,6,85,2,"_babelRuntimeHelpersAsyncToGenerator"],[22,42,85,2],[22,45,85,2,"require"],[22,52,85,2],[22,53,85,2,"_dependencyMap"],[22,67,85,2],[23,2,85,2],[23,6,85,2,"_asyncToGenerator"],[23,23,85,2],[23,26,85,2,"_interopDefault"],[23,41,85,2],[23,42,85,2,"_babelRuntimeHelpersAsyncToGenerator"],[23,78,85,2],[24,2,7,0],[24,6,7,0,"_reactNative"],[24,18,7,0],[24,21,7,0,"require"],[24,28,7,0],[24,29,7,0,"_dependencyMap"],[24,43,7,0],[25,2,11,0],[25,6,11,0,"_reactNativeAssetsRegistryRegistry"],[25,40,11,0],[25,43,11,0,"require"],[25,50,11,0],[25,51,11,0,"_dependencyMap"],[25,65,11,0],[26,2,12,0],[26,6,12,0,"_dynamicLoadingSettingJs"],[26,30,12,0],[26,33,12,0,"require"],[26,40,12,0],[26,41,12,0,"_dependencyMap"],[26,55,12,0],[27,2,9,0],[28,2,10,0],[29,2,13,0],[29,6,13,6,"loadPromises"],[29,18,13,18],[29,21,13,21],[29,22,13,22],[29,23,13,23],[30,2,14,0],[30,6,14,6,"loadFontAsync"],[30,19,14,19],[31,4,14,19],[31,8,14,19,"_ref"],[31,12,14,19],[31,19,14,19,"_asyncToGenerator"],[31,36,14,19],[31,37,14,19,"default"],[31,44,14,19],[31,46,14,22],[31,57,14,29,"fontFamily"],[31,67,14,39],[31,69,14,41,"fontSource"],[31,79,14,51],[31,81,14,56],[32,6,15,2],[32,10,15,8,"globalRef"],[32,19,15,17],[32,22,15,20,"globalThis"],[32,32,15,30],[33,6,16,2],[33,10,16,2,"assertExpoModulesPresent"],[33,34,16,26],[33,35,16,26,"assertExpoModulesPresent"],[33,59,16,26],[33,61,16,27,"globalRef"],[33,70,16,36],[33,71,16,37],[34,6,17,2],[34,10,17,8,"expoModules"],[34,21,17,19],[34,24,17,22,"globalRef"],[34,33,17,31],[34,34,17,32,"expo"],[34,38,17,36],[34,39,17,37,"modules"],[34,46,17,44],[35,6,18,2],[35,10,18,6,"loadPromises"],[35,22,18,18],[35,23,18,19,"fontFamily"],[35,33,18,29],[35,34,18,30],[35,36,18,32],[36,8,19,4],[36,15,19,11,"loadPromises"],[36,27,19,23],[36,28,19,24,"fontFamily"],[36,38,19,34],[36,39,19,35],[37,6,20,2],[38,6,21,2,"loadPromises"],[38,18,21,14],[38,19,21,15,"fontFamily"],[38,29,21,25],[38,30,21,26],[38,33,21,29],[39,8,21,29],[39,12,21,29,"_LoadFont"],[39,21,21,29],[39,28,21,29,"_asyncToGenerator"],[39,45,21,29],[39,46,21,29,"default"],[39,53,21,29],[39,68,21,55],[40,10,22,4],[40,14,22,8],[41,12,23,6],[41,16,23,12,"localUri"],[41,24,23,20],[41,33,23,29],[41,34,23,30],[41,40,23,36],[42,14,24,8],[42,18,24,12],[42,25,24,19,"fontSource"],[42,35,24,29],[42,40,24,34],[42,48,24,42],[42,50,24,44],[43,16,25,10],[44,16,26,10],[44,23,26,17,"fontSource"],[44,33,26,27],[45,14,27,8],[46,14,28,8],[47,14,29,8],[47,18,29,8,"_getLocalFontUrl"],[47,34,29,8],[47,37,33,12,"getLocalFontUrl"],[47,52,33,27],[47,53,33,28,"fontSource"],[47,63,33,38],[47,65,33,40,"fontFamily"],[47,75,33,50],[47,76,33,51],[48,16,30,10,"uri"],[48,19,30,13],[48,22,30,13,"_getLocalFontUrl"],[48,38,30,13],[48,39,30,10,"uri"],[48,42,30,13],[49,16,31,10,"type"],[49,20,31,14],[49,23,31,14,"_getLocalFontUrl"],[49,39,31,14],[49,40,31,10,"type"],[49,44,31,14],[50,16,32,10,"hash"],[50,20,32,14],[50,23,32,14,"_getLocalFontUrl"],[50,39,32,14],[50,40,32,10,"hash"],[50,44,32,14],[51,14,34,8],[51,21,34,15,"expoModules"],[51,32,34,26],[51,33,34,27,"ExpoAsset"],[51,42,34,36],[51,43,34,37,"downloadAsync"],[51,56,34,50],[51,57,34,51,"uri"],[51,60,34,54],[51,62,34,56,"hash"],[51,66,34,60],[51,68,34,62,"type"],[51,72,34,66],[51,73,34,67],[52,12,35,6],[52,13,35,7],[52,15,35,9],[52,16,35,10],[53,12,36,6],[53,16,36,12,"asset"],[53,21,36,17],[53,24,36,20,"Platform"],[53,36,36,28],[53,37,36,28,"Platform"],[53,45,36,28],[53,46,36,29,"select"],[53,52,36,35],[53,53,36,36],[54,14,37,8,"web"],[54,17,37,11],[54,19,37,13],[55,16,38,10,"uri"],[55,19,38,13],[55,21,38,15,"localUri"],[55,29,38,23],[56,16,39,10,"display"],[56,23,39,17],[56,25,39,19],[57,14,40,8],[57,15,40,9],[58,14,41,8,"default"],[58,21,41,15],[58,23,41,17,"localUri"],[59,12,42,6],[59,13,42,7],[59,14,42,8],[60,12,43,6],[60,18,43,12,"expoModules"],[60,29,43,23],[60,30,43,24,"ExpoFontLoader"],[60,44,43,38],[60,45,43,39,"loadAsync"],[60,54,43,48],[60,55,43,49,"fontFamily"],[60,65,43,59],[60,67,43,61,"asset"],[60,72,43,66],[60,73,43,67],[61,10,44,4],[61,11,44,5],[61,12,44,6],[61,19,44,13,"error"],[61,24,44,18],[61,26,44,20],[62,12,45,6,"console"],[62,19,45,13],[62,20,45,14,"error"],[62,25,45,19],[62,26,45,20],[62,49,45,43,"fontFamily"],[62,59,45,53],[62,61,45,55],[62,63,45,57,"error"],[62,68,45,62],[62,69,45,63],[62,70,45,64],[62,71,45,65],[64,12,47,6],[64,16,47,6,"getErrorCallback"],[64,40,47,22],[64,41,47,22,"getErrorCallback"],[64,57,47,22],[64,59,47,23],[64,60,47,24],[64,63,47,27],[65,14,48,8,"error"],[65,19,48,13],[65,21,48,15,"error"],[65,26,48,20],[66,14,49,8,"fontFamily"],[66,24,49,18],[67,14,50,8,"fontSource"],[68,12,51,6],[68,13,51,7],[68,14,51,8],[69,10,52,4],[69,11,52,5],[69,20,52,14],[70,12,53,6],[70,19,53,13,"loadPromises"],[70,31,53,25],[70,32,53,26,"fontFamily"],[70,42,53,36],[70,43,53,37],[71,10,54,4],[72,8,55,2],[72,9,55,3],[73,8,55,3],[73,17,21,44,"LoadFont"],[73,25,21,52,"LoadFont"],[73,26,21,52],[74,10,21,52],[74,17,21,52,"_LoadFont"],[74,26,21,52],[74,27,21,52,"apply"],[74,32,21,52],[74,39,21,52,"arguments"],[74,48,21,52],[75,8,21,52],[76,8,21,52],[76,15,21,44,"LoadFont"],[76,23,21,52],[77,6,21,52],[77,10,55,4],[77,11,55,5],[78,6,56,2],[78,13,56,9,"loadPromises"],[78,25,56,21],[78,26,56,22,"fontFamily"],[78,36,56,32],[78,37,56,33],[79,4,57,0],[79,5,57,1],[80,4,57,1],[80,20,14,6,"loadFontAsync"],[80,33,14,19,"loadFontAsync"],[80,34,14,19,"_x"],[80,36,14,19],[80,38,14,19,"_x2"],[80,41,14,19],[81,6,14,19],[81,13,14,19,"_ref"],[81,17,14,19],[81,18,14,19,"apply"],[81,23,14,19],[81,30,14,19,"arguments"],[81,39,14,19],[82,4,14,19],[83,2,14,19],[83,5,57,1],[84,2,58,0],[84,6,58,6,"getLocalFontUrl"],[84,21,58,21],[84,24,58,24,"getLocalFontUrl"],[84,25,58,25,"fontModuleId"],[84,37,58,37],[84,39,58,39,"fontFamily"],[84,49,58,49],[84,54,58,54],[85,4,59,2],[85,8,59,8,"assetMeta"],[85,17,59,17],[85,20,59,20],[85,24,59,20,"getAssetByID"],[85,58,59,32],[85,59,59,32,"getAssetByID"],[85,71,59,32],[85,73,59,33,"fontModuleId"],[85,85,59,45],[85,86,59,46],[86,4,60,2],[86,8,60,6],[86,9,60,7,"assetMeta"],[86,18,60,16],[86,20,60,18],[87,6,61,4],[87,12,61,10],[87,16,61,14,"Error"],[87,21,61,19],[87,22,61,20],[87,57,61,55,"fontFamily"],[87,67,61,65],[87,83,61,81,"String"],[87,89,61,87],[87,90,61,88,"fontModuleId"],[87,102,61,100],[87,103,61,101],[87,105,61,103],[87,106,61,104],[88,4,62,2],[89,4,63,2],[89,8,63,8,"assetSource"],[89,19,63,19],[89,22,63,22,"Image"],[89,34,63,27],[89,35,63,27,"Image"],[89,40,63,27],[89,41,63,28,"resolveAssetSource"],[89,59,63,46],[89,60,63,47,"fontModuleId"],[89,72,63,59],[89,73,63,60],[90,4,64,2],[90,11,64,9],[91,6,65,4],[91,9,65,7,"assetMeta"],[91,18,65,16],[92,6,66,4],[92,9,66,7,"assetSource"],[93,4,67,2],[93,5,67,3],[94,2,68,0],[94,3,68,1],[95,2,69,0],[95,6,69,6,"loadedFontsCache"],[95,22,69,22],[95,25,69,25],[95,26,69,26],[95,27,69,27],[96,2,70,0],[96,6,70,6,"isLoadedNative"],[96,20,70,20],[96,23,70,23,"fontFamily"],[96,33,70,33],[96,37,70,37],[97,4,71,2],[97,8,71,6,"fontFamily"],[97,18,71,16],[97,22,71,20,"loadedFontsCache"],[97,38,71,36],[97,40,71,38],[98,6,72,4],[98,13,72,11],[98,17,72,15],[99,4,73,2],[100,4,74,2],[100,8,74,8,"globalRef"],[100,17,74,17],[100,20,74,20,"globalThis"],[100,30,74,30],[101,4,75,2],[101,8,75,2,"assertExpoModulesPresent"],[101,32,75,26],[101,33,75,26,"assertExpoModulesPresent"],[101,57,75,26],[101,59,75,27,"globalRef"],[101,68,75,36],[101,69,75,37],[102,4,76,2],[102,8,76,8,"loadedNativeFonts"],[102,25,76,25],[102,28,76,28,"globalRef"],[102,37,76,37],[102,38,76,38,"expo"],[102,42,76,42],[102,43,76,43,"modules"],[102,50,76,50],[102,51,76,51,"ExpoFontLoader"],[102,65,76,65],[102,66,76,66,"getLoadedFonts"],[102,80,76,80],[102,81,76,81],[102,82,76,82],[103,4,77,2,"loadedNativeFonts"],[103,21,77,19],[103,22,77,20,"forEach"],[103,29,77,27],[103,30,77,28,"font"],[103,34,77,32],[103,38,77,36],[104,6,78,4,"loadedFontsCache"],[104,22,78,20],[104,23,78,21,"font"],[104,27,78,25],[104,28,78,26],[104,31,78,29],[104,35,78,33],[105,4,79,2],[105,5,79,3],[105,6,79,4],[106,4,80,2],[106,11,80,9,"fontFamily"],[106,21,80,19],[106,25,80,23,"loadedFontsCache"],[106,41,80,39],[107,2,81,0],[107,3,81,1],[108,2,82,7],[108,6,82,13,"dynamicLoader"],[108,19,82,26],[108,22,82,29],[109,4,83,2,"isLoaded"],[109,12,83,10],[109,14,83,12,"isLoadedNative"],[109,28,83,26],[110,4,84,2,"loadFontAsync"],[111,2,85,0],[111,3,85,1],[112,0,85,2],[112,3]],"functionMap":{"names":["<global>","loadFontAsync","LoadFont","<anonymous>","getLocalFontUrl","isLoadedNative","loadedNativeFonts.forEach$argument_0"],"mappings":"AAA;sBCa;6BCO;8BCE;ODY;GDoB;CDE;wBIC;CJU;uBKE;4BCO;GDE;CLE"},"hasCjsExports":false},"type":"js/module"}]}