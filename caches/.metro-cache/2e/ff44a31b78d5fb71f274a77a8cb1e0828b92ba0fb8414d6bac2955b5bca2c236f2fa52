{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@tanstack/react-query","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":49,"index":49}}],"key":"Pzwu/0TIyhnZOrC9PAkpZx92hFo=","exportNames":["*"],"imports":1}},{"name":"../supabase","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":50},"end":{"line":2,"column":39,"index":89}}],"key":"zx/dTdJp0d3TJEOaa003L7FI5PE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.useUserSearchQuery = useUserSearchQuery;\n  exports.useUserByIdQuery = useUserByIdQuery;\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _tanstackReactQuery = require(_dependencyMap[1], \"@tanstack/react-query\");\n  var _supabase = require(_dependencyMap[2], \"../supabase\");\n  /**\n   * Helper to check if a string is a valid UUID\n   */\n  function isUUID(str) {\n    var uuidRegex = /^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n    return uuidRegex.test(str);\n  }\n\n  /**\n   * Search users by username or user ID\n   * - Username: partial match, case-insensitive (min 2 chars)\n   * - User ID: exact UUID match\n   */\n  function useUserSearchQuery(searchTerm, currentUserId) {\n    _s();\n    return (0, _tanstackReactQuery.useQuery)({\n      queryKey: [\"user-search\", searchTerm, currentUserId],\n      queryFn: function () {\n        var _ref = (0, _asyncToGenerator.default)(function* () {\n          if (!searchTerm || searchTerm.trim().length < 2) {\n            return [];\n          }\n          var trimmedTerm = searchTerm.trim();\n\n          // Search by exact user ID if it's a UUID\n          if (isUUID(trimmedTerm)) {\n            var _yield$supabase$from$ = yield _supabase.supabase.from(\"users\").select(\"id, username, nickname, bio, is_anonymous, school_name\").eq(\"id\", trimmedTerm).neq(\"id\", currentUserId).single(),\n              _data = _yield$supabase$from$.data,\n              _error = _yield$supabase$from$.error;\n            if (_error && _error.code !== \"PGRST116\") throw _error; // PGRST116 = no rows\n            return _data ? [_data] : [];\n          }\n\n          // Search by username (partial match, case-insensitive)\n          var _yield$supabase$from$2 = yield _supabase.supabase.from(\"users\").select(\"id, username, nickname, bio, is_anonymous, school_name\").ilike(\"username\", `%${trimmedTerm}%`).neq(\"id\", currentUserId).limit(20),\n            data = _yield$supabase$from$2.data,\n            error = _yield$supabase$from$2.error;\n          if (error) throw error;\n          return data || [];\n        });\n        return function queryFn() {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      enabled: !!searchTerm && searchTerm.trim().length >= 2 && !!currentUserId,\n      staleTime: 5 * 60 * 1000 // Cache for 5 minutes\n    });\n  }\n\n  /**\n   * Get a single user by ID\n   */\n  _s(useUserSearchQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n    return [_tanstackReactQuery.useQuery];\n  });\n  function useUserByIdQuery(userId) {\n    _s2();\n    return (0, _tanstackReactQuery.useQuery)({\n      queryKey: [\"user-by-id\", userId],\n      queryFn: function () {\n        var _ref2 = (0, _asyncToGenerator.default)(function* () {\n          if (!userId) throw new Error(\"User ID required\");\n          var _yield$supabase$from$3 = yield _supabase.supabase.from(\"users\").select(\"id, username, nickname, bio, is_anonymous, school_name\").eq(\"id\", userId).single(),\n            data = _yield$supabase$from$3.data,\n            error = _yield$supabase$from$3.error;\n          if (error) throw error;\n          return data;\n        });\n        return function queryFn() {\n          return _ref2.apply(this, arguments);\n        };\n      }(),\n      enabled: !!userId\n    });\n  }\n  _s2(useUserByIdQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n    return [_tanstackReactQuery.useQuery];\n  });\n});","lineCount":98,"map":[[14,2,17,0,"exports"],[14,9,17,0],[14,10,17,0,"useUserSearchQuery"],[14,28,17,0],[14,31,17,0,"useUserSearchQuery"],[14,49,17,0],[15,2,59,0,"exports"],[15,9,59,0],[15,10,59,0,"useUserByIdQuery"],[15,26,59,0],[15,29,59,0,"useUserByIdQuery"],[15,45,59,0],[16,2,76,1],[16,6,76,1,"_babelRuntimeHelpersAsyncToGenerator"],[16,42,76,1],[16,45,76,1,"require"],[16,52,76,1],[16,53,76,1,"_dependencyMap"],[16,67,76,1],[17,2,76,1],[17,6,76,1,"_asyncToGenerator"],[17,23,76,1],[17,26,76,1,"_interopDefault"],[17,41,76,1],[17,42,76,1,"_babelRuntimeHelpersAsyncToGenerator"],[17,78,76,1],[18,2,1,0],[18,6,1,0,"_tanstackReactQuery"],[18,25,1,0],[18,28,1,0,"require"],[18,35,1,0],[18,36,1,0,"_dependencyMap"],[18,50,1,0],[19,2,2,0],[19,6,2,0,"_supabase"],[19,15,2,0],[19,18,2,0,"require"],[19,25,2,0],[19,26,2,0,"_dependencyMap"],[19,40,2,0],[20,2,4,0],[21,0,5,0],[22,0,6,0],[23,2,7,0],[23,11,7,9,"isUUID"],[23,17,7,15,"isUUID"],[23,18,7,16,"str"],[23,21,7,19],[23,23,7,21],[24,4,8,2],[24,8,8,8,"uuidRegex"],[24,17,8,17],[24,20,8,20],[24,85,8,85],[25,4,9,2],[25,11,9,9,"uuidRegex"],[25,20,9,18],[25,21,9,19,"test"],[25,25,9,23],[25,26,9,24,"str"],[25,29,9,27],[25,30,9,28],[26,2,10,0],[28,2,12,0],[29,0,13,0],[30,0,14,0],[31,0,15,0],[32,0,16,0],[33,2,17,7],[33,11,17,16,"useUserSearchQuery"],[33,29,17,34,"useUserSearchQuery"],[33,30,17,35,"searchTerm"],[33,40,17,45],[33,42,17,47,"currentUserId"],[33,55,17,60],[33,57,17,62],[34,4,17,62,"_s"],[34,6,17,62],[35,4,18,2],[35,11,18,9],[35,15,18,9,"useQuery"],[35,34,18,17],[35,35,18,17,"useQuery"],[35,43,18,17],[35,45,18,18],[36,6,19,4,"queryKey"],[36,14,19,12],[36,16,19,14],[36,17,19,15],[36,30,19,28],[36,32,19,30,"searchTerm"],[36,42,19,40],[36,44,19,42,"currentUserId"],[36,57,19,55],[36,58,19,56],[37,6,20,4,"queryFn"],[37,13,20,11],[38,8,20,11],[38,12,20,11,"_ref"],[38,16,20,11],[38,23,20,11,"_asyncToGenerator"],[38,40,20,11],[38,41,20,11,"default"],[38,48,20,11],[38,50,20,13],[38,63,20,25],[39,10,21,6],[39,14,21,10],[39,15,21,11,"searchTerm"],[39,25,21,21],[39,29,21,25,"searchTerm"],[39,39,21,35],[39,40,21,36,"trim"],[39,44,21,40],[39,45,21,41],[39,46,21,42],[39,47,21,43,"length"],[39,53,21,49],[39,56,21,52],[39,57,21,53],[39,59,21,55],[40,12,22,8],[40,19,22,15],[40,21,22,17],[41,10,23,6],[42,10,25,6],[42,14,25,12,"trimmedTerm"],[42,25,25,23],[42,28,25,26,"searchTerm"],[42,38,25,36],[42,39,25,37,"trim"],[42,43,25,41],[42,44,25,42],[42,45,25,43],[44,10,27,6],[45,10,28,6],[45,14,28,10,"isUUID"],[45,20,28,16],[45,21,28,17,"trimmedTerm"],[45,32,28,28],[45,33,28,29],[45,35,28,31],[46,12,29,8],[46,16,29,8,"_yield$supabase$from$"],[46,37,29,8],[46,46,29,38,"supabase"],[46,55,29,46],[46,56,29,46,"supabase"],[46,64,29,46],[46,65,30,11,"from"],[46,69,30,15],[46,70,30,16],[46,77,30,23],[46,78,30,24],[46,79,31,11,"select"],[46,85,31,17],[46,86,31,18],[46,142,31,74],[46,143,31,75],[46,144,32,11,"eq"],[46,146,32,13],[46,147,32,14],[46,151,32,18],[46,153,32,20,"trimmedTerm"],[46,164,32,31],[46,165,32,32],[46,166,33,11,"neq"],[46,169,33,14],[46,170,33,15],[46,174,33,19],[46,176,33,21,"currentUserId"],[46,189,33,34],[46,190,33,35],[46,191,34,11,"single"],[46,197,34,17],[46,198,34,18],[46,199,34,19],[47,14,29,16,"data"],[47,19,29,20],[47,22,29,20,"_yield$supabase$from$"],[47,43,29,20],[47,44,29,16,"data"],[47,48,29,20],[48,14,29,22,"error"],[48,20,29,27],[48,23,29,27,"_yield$supabase$from$"],[48,44,29,27],[48,45,29,22,"error"],[48,50,29,27],[49,12,36,8],[49,16,36,12,"error"],[49,22,36,17],[49,26,36,21,"error"],[49,32,36,26],[49,33,36,27,"code"],[49,37,36,31],[49,42,36,36],[49,52,36,46],[49,54,36,48],[49,60,36,54,"error"],[49,66,36,59],[49,67,36,60],[49,68,36,61],[50,12,37,8],[50,19,37,15,"data"],[50,24,37,19],[50,27,37,22],[50,28,37,23,"data"],[50,33,37,27],[50,34,37,28],[50,37,37,31],[50,39,37,33],[51,10,38,6],[53,10,40,6],[54,10,41,6],[54,14,41,6,"_yield$supabase$from$2"],[54,36,41,6],[54,45,41,36,"supabase"],[54,54,41,44],[54,55,41,44,"supabase"],[54,63,41,44],[54,64,42,9,"from"],[54,68,42,13],[54,69,42,14],[54,76,42,21],[54,77,42,22],[54,78,43,9,"select"],[54,84,43,15],[54,85,43,16],[54,141,43,72],[54,142,43,73],[54,143,44,9,"ilike"],[54,148,44,14],[54,149,44,15],[54,159,44,25],[54,161,44,27],[54,165,44,31,"trimmedTerm"],[54,176,44,42],[54,179,44,45],[54,180,44,46],[54,181,45,9,"neq"],[54,184,45,12],[54,185,45,13],[54,189,45,17],[54,191,45,19,"currentUserId"],[54,204,45,32],[54,205,45,33],[54,206,46,9,"limit"],[54,211,46,14],[54,212,46,15],[54,214,46,17],[54,215,46,18],[55,12,41,14,"data"],[55,16,41,18],[55,19,41,18,"_yield$supabase$from$2"],[55,41,41,18],[55,42,41,14,"data"],[55,46,41,18],[56,12,41,20,"error"],[56,17,41,25],[56,20,41,25,"_yield$supabase$from$2"],[56,42,41,25],[56,43,41,20,"error"],[56,48,41,25],[57,10,48,6],[57,14,48,10,"error"],[57,19,48,15],[57,21,48,17],[57,27,48,23,"error"],[57,32,48,28],[58,10,49,6],[58,17,49,13,"data"],[58,21,49,17],[58,25,49,21],[58,27,49,23],[59,8,50,4],[59,9,50,5],[60,8,50,5],[60,24,20,4,"queryFn"],[60,31,20,11,"queryFn"],[60,32,20,11],[61,10,20,11],[61,17,20,11,"_ref"],[61,21,20,11],[61,22,20,11,"apply"],[61,27,20,11],[61,34,20,11,"arguments"],[61,43,20,11],[62,8,20,11],[63,6,20,11],[63,9,50,5],[64,6,51,4,"enabled"],[64,13,51,11],[64,15,51,13],[64,16,51,14],[64,17,51,15,"searchTerm"],[64,27,51,25],[64,31,51,29,"searchTerm"],[64,41,51,39],[64,42,51,40,"trim"],[64,46,51,44],[64,47,51,45],[64,48,51,46],[64,49,51,47,"length"],[64,55,51,53],[64,59,51,57],[64,60,51,58],[64,64,51,62],[64,65,51,63],[64,66,51,64,"currentUserId"],[64,79,51,77],[65,6,52,4,"staleTime"],[65,15,52,13],[65,17,52,15],[65,18,52,16],[65,21,52,19],[65,23,52,21],[65,26,52,24],[65,30,52,28],[65,31,52,30],[66,4,53,2],[66,5,53,3],[66,6,53,4],[67,2,54,0],[69,2,56,0],[70,0,57,0],[71,0,58,0],[72,2,56,0,"_s"],[72,4,56,0],[72,5,17,16,"useUserSearchQuery"],[72,23,17,34],[73,4,17,34],[73,12,18,9,"useQuery"],[73,31,18,17],[73,32,18,17,"useQuery"],[73,40,18,17],[74,2,18,17],[75,2,59,7],[75,11,59,16,"useUserByIdQuery"],[75,27,59,32,"useUserByIdQuery"],[75,28,59,33,"userId"],[75,34,59,39],[75,36,59,41],[76,4,59,41,"_s2"],[76,7,59,41],[77,4,60,2],[77,11,60,9],[77,15,60,9,"useQuery"],[77,34,60,17],[77,35,60,17,"useQuery"],[77,43,60,17],[77,45,60,18],[78,6,61,4,"queryKey"],[78,14,61,12],[78,16,61,14],[78,17,61,15],[78,29,61,27],[78,31,61,29,"userId"],[78,37,61,35],[78,38,61,36],[79,6,62,4,"queryFn"],[79,13,62,11],[80,8,62,11],[80,12,62,11,"_ref2"],[80,17,62,11],[80,24,62,11,"_asyncToGenerator"],[80,41,62,11],[80,42,62,11,"default"],[80,49,62,11],[80,51,62,13],[80,64,62,25],[81,10,63,6],[81,14,63,10],[81,15,63,11,"userId"],[81,21,63,17],[81,23,63,19],[81,29,63,25],[81,33,63,29,"Error"],[81,38,63,34],[81,39,63,35],[81,57,63,53],[81,58,63,54],[82,10,65,6],[82,14,65,6,"_yield$supabase$from$3"],[82,36,65,6],[82,45,65,36,"supabase"],[82,54,65,44],[82,55,65,44,"supabase"],[82,63,65,44],[82,64,66,9,"from"],[82,68,66,13],[82,69,66,14],[82,76,66,21],[82,77,66,22],[82,78,67,9,"select"],[82,84,67,15],[82,85,67,16],[82,141,67,72],[82,142,67,73],[82,143,68,9,"eq"],[82,145,68,11],[82,146,68,12],[82,150,68,16],[82,152,68,18,"userId"],[82,158,68,24],[82,159,68,25],[82,160,69,9,"single"],[82,166,69,15],[82,167,69,16],[82,168,69,17],[83,12,65,14,"data"],[83,16,65,18],[83,19,65,18,"_yield$supabase$from$3"],[83,41,65,18],[83,42,65,14,"data"],[83,46,65,18],[84,12,65,20,"error"],[84,17,65,25],[84,20,65,25,"_yield$supabase$from$3"],[84,42,65,25],[84,43,65,20,"error"],[84,48,65,25],[85,10,71,6],[85,14,71,10,"error"],[85,19,71,15],[85,21,71,17],[85,27,71,23,"error"],[85,32,71,28],[86,10,72,6],[86,17,72,13,"data"],[86,21,72,17],[87,8,73,4],[87,9,73,5],[88,8,73,5],[88,24,62,4,"queryFn"],[88,31,62,11,"queryFn"],[88,32,62,11],[89,10,62,11],[89,17,62,11,"_ref2"],[89,22,62,11],[89,23,62,11,"apply"],[89,28,62,11],[89,35,62,11,"arguments"],[89,44,62,11],[90,8,62,11],[91,6,62,11],[91,9,73,5],[92,6,74,4,"enabled"],[92,13,74,11],[92,15,74,13],[92,16,74,14],[92,17,74,15,"userId"],[93,4,75,2],[93,5,75,3],[93,6,75,4],[94,2,76,0],[95,2,76,1,"_s2"],[95,5,76,1],[95,6,59,16,"useUserByIdQuery"],[95,22,59,32],[96,4,59,32],[96,12,60,9,"useQuery"],[96,31,60,17],[96,32,60,17,"useQuery"],[96,40,60,17],[97,2,60,17],[98,0,60,17],[98,3]],"functionMap":{"names":["<global>","isUUID","useUserSearchQuery","useQuery$argument_0.queryFn","useUserByIdQuery"],"mappings":"AAA;ACM;CDG;OEO;aCG;KD8B;CFI;OIK;aDG;KCW;CJG"},"hasCjsExports":false},"type":"js/module"}]}