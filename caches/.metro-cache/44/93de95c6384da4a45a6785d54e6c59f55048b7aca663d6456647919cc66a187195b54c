{"dependencies":[],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  Object.defineProperty(exports, \"SCHOOLS\", {\n    enumerable: true,\n    get: function () {\n      return SCHOOLS;\n    }\n  });\n  Object.defineProperty(exports, \"GUEST_OPTION\", {\n    enumerable: true,\n    get: function () {\n      return GUEST_OPTION;\n    }\n  });\n  exports.validateEmail = validateEmail;\n  exports.getSchoolByDomain = getSchoolByDomain;\n  exports.getSchoolById = getSchoolById;\n  // School configuration and validation utilities\n\n  var SCHOOLS = [{\n    id: \"waseda\",\n    name: \"Waseda University\",\n    domain: \"waseda.jp\",\n    displayName: \"早稲田大学 / Waseda University\",\n    description: \"Tokyo, Japan\"\n  }\n  // Future schools will be added here\n  ];\n\n  // Guest option for testing/non-school users\n  var GUEST_OPTION = {\n    id: \"guest\",\n    name: \"Guest\",\n    domain: null,\n    // No domain restriction\n    displayName: \"Guest User\",\n    description: \"Sign up without school email\",\n    isGuest: true\n  };\n\n  /**\n   * Validates if an email matches the required domain\n   * @param {string} email - Email address to validate\n   * @param {string} requiredDomain - Required email domain (e.g., 'waseda.jp'), or null for guest\n   * @returns {Object} { valid: boolean, error: string|null }\n   */\n  function validateEmail(email, requiredDomain) {\n    // Check basic email format\n    var emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n    if (!email || !email.trim()) {\n      return {\n        valid: false,\n        error: \"Email is required\"\n      };\n    }\n    if (!emailRegex.test(email)) {\n      return {\n        valid: false,\n        error: \"Invalid email format\"\n      };\n    }\n\n    // Skip domain validation for guest users (when requiredDomain is null)\n    if (requiredDomain === null || requiredDomain === undefined) {\n      return {\n        valid: true,\n        error: null\n      };\n    }\n\n    // Extract domain and validate\n    // Support subdomains: accept emails ending with the required domain\n    // e.g., for 'waseda.jp', accept both 'user@waseda.jp' and 'user@fuji.waseda.jp'\n    var domain = email.split(\"@\")[1]?.toLowerCase();\n    var normalizedRequired = requiredDomain.toLowerCase();\n    if (!domain.endsWith(normalizedRequired)) {\n      return {\n        valid: false,\n        error: `Please use your @${requiredDomain} email address`\n      };\n    }\n    return {\n      valid: true,\n      error: null\n    };\n  }\n\n  /**\n   * Get school by domain from email address\n   * @param {string} email - Email address\n   * @returns {Object|null} School object or null if not found\n   */\n  function getSchoolByDomain(email) {\n    if (!email || !email.includes(\"@\")) return null;\n    var domain = email.split(\"@\")[1]?.toLowerCase();\n    return SCHOOLS.find(school => school.domain.toLowerCase() === domain) || null;\n  }\n\n  /**\n   * Get school by ID\n   * @param {string} schoolId - School ID\n   * @returns {Object|null} School object or null if not found\n   */\n  function getSchoolById(schoolId) {\n    return SCHOOLS.find(school => school.id === schoolId) || null;\n  }\n});","lineCount":111,"map":[[7,2,3,0,"Object"],[7,8,3,0],[7,9,3,0,"defineProperty"],[7,23,3,0],[7,24,3,0,"exports"],[7,31,3,0],[8,4,3,0,"enumerable"],[8,14,3,0],[9,4,3,0,"get"],[9,7,3,0],[9,18,3,0,"get"],[9,19,3,0],[10,6,3,0],[10,13,3,0,"SCHOOLS"],[10,20,3,0],[11,4,3,0],[12,2,3,0],[13,2,15,0,"Object"],[13,8,15,0],[13,9,15,0,"defineProperty"],[13,23,15,0],[13,24,15,0,"exports"],[13,31,15,0],[14,4,15,0,"enumerable"],[14,14,15,0],[15,4,15,0,"get"],[15,7,15,0],[15,18,15,0,"get"],[15,19,15,0],[16,6,15,0],[16,13,15,0,"GUEST_OPTION"],[16,25,15,0],[17,4,15,0],[18,2,15,0],[19,2,30,0,"exports"],[19,9,30,0],[19,10,30,0,"validateEmail"],[19,23,30,0],[19,26,30,0,"validateEmail"],[19,39,30,0],[20,2,67,0,"exports"],[20,9,67,0],[20,10,67,0,"getSchoolByDomain"],[20,27,67,0],[20,30,67,0,"getSchoolByDomain"],[20,47,67,0],[21,2,81,0,"exports"],[21,9,81,0],[21,10,81,0,"getSchoolById"],[21,23,81,0],[21,26,81,0,"getSchoolById"],[21,39,81,0],[22,2,1,0],[24,2,3,7],[24,6,3,13,"SCHOOLS"],[24,13,3,20],[24,16,3,23],[24,17,4,2],[25,4,5,4,"id"],[25,6,5,6],[25,8,5,8],[25,16,5,16],[26,4,6,4,"name"],[26,8,6,8],[26,10,6,10],[26,29,6,29],[27,4,7,4,"domain"],[27,10,7,10],[27,12,7,12],[27,23,7,23],[28,4,8,4,"displayName"],[28,15,8,15],[28,17,8,17],[28,44,8,44],[29,4,9,4,"description"],[29,15,9,15],[29,17,9,17],[30,2,10,2],[31,2,11,2],[32,2,11,2],[32,3,12,1],[34,2,14,0],[35,2,15,7],[35,6,15,13,"GUEST_OPTION"],[35,18,15,25],[35,21,15,28],[36,4,16,2,"id"],[36,6,16,4],[36,8,16,6],[36,15,16,13],[37,4,17,2,"name"],[37,8,17,6],[37,10,17,8],[37,17,17,15],[38,4,18,2,"domain"],[38,10,18,8],[38,12,18,10],[38,16,18,14],[39,4,18,16],[40,4,19,2,"displayName"],[40,15,19,13],[40,17,19,15],[40,29,19,27],[41,4,20,2,"description"],[41,15,20,13],[41,17,20,15],[41,47,20,45],[42,4,21,2,"isGuest"],[42,11,21,9],[42,13,21,11],[43,2,22,0],[43,3,22,1],[45,2,24,0],[46,0,25,0],[47,0,26,0],[48,0,27,0],[49,0,28,0],[50,0,29,0],[51,2,30,7],[51,11,30,16,"validateEmail"],[51,24,30,29,"validateEmail"],[51,25,30,30,"email"],[51,30,30,35],[51,32,30,37,"requiredDomain"],[51,46,30,51],[51,48,30,53],[52,4,31,2],[53,4,32,2],[53,8,32,8,"emailRegex"],[53,18,32,18],[53,21,32,21],[53,49,32,49],[54,4,33,2],[54,8,33,6],[54,9,33,7,"email"],[54,14,33,12],[54,18,33,16],[54,19,33,17,"email"],[54,24,33,22],[54,25,33,23,"trim"],[54,29,33,27],[54,30,33,28],[54,31,33,29],[54,33,33,31],[55,6,34,4],[55,13,34,11],[56,8,34,13,"valid"],[56,13,34,18],[56,15,34,20],[56,20,34,25],[57,8,34,27,"error"],[57,13,34,32],[57,15,34,34],[58,6,34,54],[58,7,34,55],[59,4,35,2],[60,4,37,2],[60,8,37,6],[60,9,37,7,"emailRegex"],[60,19,37,17],[60,20,37,18,"test"],[60,24,37,22],[60,25,37,23,"email"],[60,30,37,28],[60,31,37,29],[60,33,37,31],[61,6,38,4],[61,13,38,11],[62,8,38,13,"valid"],[62,13,38,18],[62,15,38,20],[62,20,38,25],[63,8,38,27,"error"],[63,13,38,32],[63,15,38,34],[64,6,38,57],[64,7,38,58],[65,4,39,2],[67,4,41,2],[68,4,42,2],[68,8,42,6,"requiredDomain"],[68,22,42,20],[68,27,42,25],[68,31,42,29],[68,35,42,33,"requiredDomain"],[68,49,42,47],[68,54,42,52,"undefined"],[68,63,42,61],[68,65,42,63],[69,6,43,4],[69,13,43,11],[70,8,43,13,"valid"],[70,13,43,18],[70,15,43,20],[70,19,43,24],[71,8,43,26,"error"],[71,13,43,31],[71,15,43,33],[72,6,43,38],[72,7,43,39],[73,4,44,2],[75,4,46,2],[76,4,47,2],[77,4,48,2],[78,4,49,2],[78,8,49,8,"domain"],[78,14,49,14],[78,17,49,17,"email"],[78,22,49,22],[78,23,49,23,"split"],[78,28,49,28],[78,29,49,29],[78,32,49,32],[78,33,49,33],[78,34,49,34],[78,35,49,35],[78,36,49,36],[78,38,49,38,"toLowerCase"],[78,49,49,49],[78,50,49,50],[78,51,49,51],[79,4,50,2],[79,8,50,8,"normalizedRequired"],[79,26,50,26],[79,29,50,29,"requiredDomain"],[79,43,50,43],[79,44,50,44,"toLowerCase"],[79,55,50,55],[79,56,50,56],[79,57,50,57],[80,4,52,2],[80,8,52,6],[80,9,52,7,"domain"],[80,15,52,13],[80,16,52,14,"endsWith"],[80,24,52,22],[80,25,52,23,"normalizedRequired"],[80,43,52,41],[80,44,52,42],[80,46,52,44],[81,6,53,4],[81,13,53,11],[82,8,54,6,"valid"],[82,13,54,11],[82,15,54,13],[82,20,54,18],[83,8,55,6,"error"],[83,13,55,11],[83,15,55,13],[83,35,55,33,"requiredDomain"],[83,49,55,47],[84,6,56,4],[84,7,56,5],[85,4,57,2],[86,4,59,2],[86,11,59,9],[87,6,59,11,"valid"],[87,11,59,16],[87,13,59,18],[87,17,59,22],[88,6,59,24,"error"],[88,11,59,29],[88,13,59,31],[89,4,59,36],[89,5,59,37],[90,2,60,0],[92,2,62,0],[93,0,63,0],[94,0,64,0],[95,0,65,0],[96,0,66,0],[97,2,67,7],[97,11,67,16,"getSchoolByDomain"],[97,28,67,33,"getSchoolByDomain"],[97,29,67,34,"email"],[97,34,67,39],[97,36,67,41],[98,4,68,2],[98,8,68,6],[98,9,68,7,"email"],[98,14,68,12],[98,18,68,16],[98,19,68,17,"email"],[98,24,68,22],[98,25,68,23,"includes"],[98,33,68,31],[98,34,68,32],[98,37,68,35],[98,38,68,36],[98,40,68,38],[98,47,68,45],[98,51,68,49],[99,4,70,2],[99,8,70,8,"domain"],[99,14,70,14],[99,17,70,17,"email"],[99,22,70,22],[99,23,70,23,"split"],[99,28,70,28],[99,29,70,29],[99,32,70,32],[99,33,70,33],[99,34,70,34],[99,35,70,35],[99,36,70,36],[99,38,70,38,"toLowerCase"],[99,49,70,49],[99,50,70,50],[99,51,70,51],[100,4,71,2],[100,11,72,4,"SCHOOLS"],[100,18,72,11],[100,19,72,12,"find"],[100,23,72,16],[100,24,72,18,"school"],[100,30,72,24],[100,34,72,29,"school"],[100,40,72,35],[100,41,72,36,"domain"],[100,47,72,42],[100,48,72,43,"toLowerCase"],[100,59,72,54],[100,60,72,55],[100,61,72,56],[100,66,72,61,"domain"],[100,72,72,67],[100,73,72,68],[100,77,72,72],[100,81,72,76],[101,2,74,0],[103,2,76,0],[104,0,77,0],[105,0,78,0],[106,0,79,0],[107,0,80,0],[108,2,81,7],[108,11,81,16,"getSchoolById"],[108,24,81,29,"getSchoolById"],[108,25,81,30,"schoolId"],[108,33,81,38],[108,35,81,40],[109,4,82,2],[109,11,82,9,"SCHOOLS"],[109,18,82,16],[109,19,82,17,"find"],[109,23,82,21],[109,24,82,23,"school"],[109,30,82,29],[109,34,82,34,"school"],[109,40,82,40],[109,41,82,41,"id"],[109,43,82,43],[109,48,82,48,"schoolId"],[109,56,82,56],[109,57,82,57],[109,61,82,61],[109,65,82,65],[110,2,83,0],[111,0,83,1],[111,3]],"functionMap":{"names":["<global>","validateEmail","getSchoolByDomain","SCHOOLS.find$argument_0","getSchoolById"],"mappings":"AAA;OC6B;CD8B;OEO;iBCK,kDD;CFE;OIO;sBDC,kCC;CJC"},"hasCjsExports":false},"type":"js/module"}]}