{"dependencies":[{"name":"@babel/runtime/helpers/superPropGet","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"b4Lel0pEiTM8mvZZX/d05uR+OmU=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"yg7e6laZwmpbIvId5jovq9ugXp8=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/createClass","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"Z6pzkVZ2fvxBLkFTgVVOy4UDj30=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/callSuper","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"378KbBHdmndC3iMXZ2Ix8oB3LeE=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/inherits","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"y0uNg4LxF1CLscQChxzgo5dfjvA=","exportNames":["*"],"imports":1}},{"name":"tslib","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":4,"column":16,"index":187},"end":{"line":4,"column":32,"index":203}}],"key":"vm88vOsSPZItrLOmMEyUuGkd1y4=","exportNames":["*"],"imports":1}},{"name":"./VectorIndexApi","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":5,"column":49,"index":254},"end":{"line":5,"column":76,"index":281}}],"key":"NO9YDRFikYnwzaUe86U+498tJPo=","exportNames":["*"],"imports":1}},{"name":"./VectorDataApi","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":6,"column":48,"index":332},"end":{"line":6,"column":74,"index":358}}],"key":"vfbKy24bYW1o5siixIbRiXbiKKU=","exportNames":["*"],"imports":1}},{"name":"./VectorBucketApi","data":{"asyncType":null,"isESMImport":false,"locs":[{"start":{"line":7,"column":50,"index":411},"end":{"line":7,"column":78,"index":439}}],"key":"tHqFXvsY68SjBQ7NLDfv6dqR+ys=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _superPropGet = require(_dependencyMap[0], \"@babel/runtime/helpers/superPropGet\").default;\n  var _classCallCheck = require(_dependencyMap[1], \"@babel/runtime/helpers/classCallCheck\").default;\n  var _createClass = require(_dependencyMap[2], \"@babel/runtime/helpers/createClass\").default;\n  var _callSuper = require(_dependencyMap[3], \"@babel/runtime/helpers/callSuper\").default;\n  var _inherits = require(_dependencyMap[4], \"@babel/runtime/helpers/inherits\").default;\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.VectorIndexScope = exports.VectorBucketScope = exports.StorageVectorsClient = void 0;\n  var tslib_1 = require(_dependencyMap[5], \"tslib\");\n  var VectorIndexApi_1 = tslib_1.__importDefault(require(_dependencyMap[6], \"./VectorIndexApi\"));\n  var VectorDataApi_1 = tslib_1.__importDefault(require(_dependencyMap[7], \"./VectorDataApi\"));\n  var VectorBucketApi_1 = tslib_1.__importDefault(require(_dependencyMap[8], \"./VectorBucketApi\"));\n  /**\n   * Main client for interacting with S3 Vectors API\n   * Provides access to bucket, index, and vector data operations\n   *\n   * **Usage Patterns:**\n   *\n   * 1. **Via StorageClient (recommended for most use cases):**\n   * ```typescript\n   * import { StorageClient } from '@supabase/storage-js'\n   *\n   * const storageClient = new StorageClient(url, headers)\n   * const vectors = storageClient.vectors\n   *\n   * // Use vector operations\n   * await vectors.createBucket('embeddings-prod')\n   * const bucket = vectors.from('embeddings-prod')\n   * await bucket.createIndex({ ... })\n   * ```\n   *\n   * 2. **Standalone (for vector-only applications):**\n   * ```typescript\n   * import { StorageVectorsClient } from '@supabase/storage-js'\n   *\n   * const vectorsClient = new StorageVectorsClient('https://api.example.com', {\n   *   headers: { 'Authorization': 'Bearer token' }\n   * })\n   *\n   * // Access bucket operations\n   * await vectorsClient.createBucket('embeddings-prod')\n   *\n   * // Access index operations via buckets\n   * const bucket = vectorsClient.from('embeddings-prod')\n   * await bucket.createIndex({\n   *   indexName: 'documents',\n   *   dataType: 'float32',\n   *   dimension: 1536,\n   *   distanceMetric: 'cosine'\n   * })\n   *\n   * // Access vector operations via index\n   * const index = bucket.index('documents')\n   * await index.putVectors({\n   *   vectors: [\n   *     { key: 'doc-1', data: { float32: [...] }, metadata: { title: 'Intro' } }\n   *   ]\n   * })\n   *\n   * // Query similar vectors\n   * const { data } = await index.queryVectors({\n   *   queryVector: { float32: [...] },\n   *   topK: 5,\n   *   returnDistance: true\n   * })\n   * ```\n   */\n  var StorageVectorsClient = /*#__PURE__*/function (_VectorBucketApi_1$de) {\n    function StorageVectorsClient(url) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      _classCallCheck(this, StorageVectorsClient);\n      return _callSuper(this, StorageVectorsClient, [url, options.headers || {}, options.fetch]);\n    }\n    /**\n     * Access operations for a specific vector bucket\n     * Returns a scoped client for index and vector operations within the bucket\n     *\n     * @param vectorBucketName - Name of the vector bucket\n     * @returns Bucket-scoped client with index and vector operations\n     *\n     * @example\n     * ```typescript\n     * const bucket = client.bucket('embeddings-prod')\n     *\n     * // Create an index in this bucket\n     * await bucket.createIndex({\n     *   indexName: 'documents-openai',\n     *   dataType: 'float32',\n     *   dimension: 1536,\n     *   distanceMetric: 'cosine'\n     * })\n     *\n     * // List indexes in this bucket\n     * const { data } = await bucket.listIndexes()\n     * ```\n     */\n    _inherits(StorageVectorsClient, _VectorBucketApi_1$de);\n    return _createClass(StorageVectorsClient, [{\n      key: \"from\",\n      value: function from(vectorBucketName) {\n        return new VectorBucketScope(this.url, this.headers, vectorBucketName, this.fetch);\n      }\n    }]);\n  }(VectorBucketApi_1.default);\n  exports.StorageVectorsClient = StorageVectorsClient;\n  /**\n   * Scoped client for operations within a specific vector bucket\n   * Provides index management and access to vector operations\n   */\n  var VectorBucketScope = /*#__PURE__*/function (_VectorIndexApi_1$def) {\n    function VectorBucketScope(url, headers, vectorBucketName, fetch) {\n      var _this;\n      _classCallCheck(this, VectorBucketScope);\n      _this = _callSuper(this, VectorBucketScope, [url, headers, fetch]);\n      _this.vectorBucketName = vectorBucketName;\n      return _this;\n    }\n    /**\n     * Creates a new vector index in this bucket\n     * Convenience method that automatically includes the bucket name\n     *\n     * @param options - Index configuration (vectorBucketName is automatically set)\n     * @returns Promise with empty response on success or error\n     *\n     * @example\n     * ```typescript\n     * const bucket = client.bucket('embeddings-prod')\n     * await bucket.createIndex({\n     *   indexName: 'documents-openai',\n     *   dataType: 'float32',\n     *   dimension: 1536,\n     *   distanceMetric: 'cosine',\n     *   metadataConfiguration: {\n     *     nonFilterableMetadataKeys: ['raw_text']\n     *   }\n     * })\n     * ```\n     */\n    _inherits(VectorBucketScope, _VectorIndexApi_1$def);\n    return _createClass(VectorBucketScope, [{\n      key: \"createIndex\",\n      value: function createIndex(options) {\n        var _super = Object.create(null, {\n          createIndex: {\n            get: () => _superPropGet(VectorBucketScope, \"createIndex\", this, 1)\n          }\n        });\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          return _super.createIndex.call(this, Object.assign(Object.assign({}, options), {\n            vectorBucketName: this.vectorBucketName\n          }));\n        });\n      }\n      /**\n       * Lists indexes in this bucket\n       * Convenience method that automatically includes the bucket name\n       *\n       * @param options - Listing options (vectorBucketName is automatically set)\n       * @returns Promise with list of indexes or error\n       *\n       * @example\n       * ```typescript\n       * const bucket = client.bucket('embeddings-prod')\n       * const { data } = await bucket.listIndexes({ prefix: 'documents-' })\n       * ```\n       */\n    }, {\n      key: \"listIndexes\",\n      value: function listIndexes() {\n        var _super = Object.create(null, {\n          listIndexes: {\n            get: () => _superPropGet(VectorBucketScope, \"listIndexes\", this, 1)\n          }\n        });\n        return tslib_1.__awaiter(this, arguments, void 0, function () {\n          var _this2 = this;\n          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          return function* () {\n            return _super.listIndexes.call(_this2, Object.assign(Object.assign({}, options), {\n              vectorBucketName: _this2.vectorBucketName\n            }));\n          }();\n        });\n      }\n      /**\n       * Retrieves metadata for a specific index in this bucket\n       * Convenience method that automatically includes the bucket name\n       *\n       * @param indexName - Name of the index to retrieve\n       * @returns Promise with index metadata or error\n       *\n       * @example\n       * ```typescript\n       * const bucket = client.bucket('embeddings-prod')\n       * const { data } = await bucket.getIndex('documents-openai')\n       * console.log('Dimension:', data?.index.dimension)\n       * ```\n       */\n    }, {\n      key: \"getIndex\",\n      value: function getIndex(indexName) {\n        var _super = Object.create(null, {\n          getIndex: {\n            get: () => _superPropGet(VectorBucketScope, \"getIndex\", this, 1)\n          }\n        });\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          return _super.getIndex.call(this, this.vectorBucketName, indexName);\n        });\n      }\n      /**\n       * Deletes an index from this bucket\n       * Convenience method that automatically includes the bucket name\n       *\n       * @param indexName - Name of the index to delete\n       * @returns Promise with empty response on success or error\n       *\n       * @example\n       * ```typescript\n       * const bucket = client.bucket('embeddings-prod')\n       * await bucket.deleteIndex('old-index')\n       * ```\n       */\n    }, {\n      key: \"deleteIndex\",\n      value: function deleteIndex(indexName) {\n        var _super = Object.create(null, {\n          deleteIndex: {\n            get: () => _superPropGet(VectorBucketScope, \"deleteIndex\", this, 1)\n          }\n        });\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          return _super.deleteIndex.call(this, this.vectorBucketName, indexName);\n        });\n      }\n      /**\n       * Access operations for a specific index within this bucket\n       * Returns a scoped client for vector data operations\n       *\n       * @param indexName - Name of the index\n       * @returns Index-scoped client with vector data operations\n       *\n       * @example\n       * ```typescript\n       * const index = client.bucket('embeddings-prod').index('documents-openai')\n       *\n       * // Insert vectors\n       * await index.putVectors({\n       *   vectors: [\n       *     { key: 'doc-1', data: { float32: [...] }, metadata: { title: 'Intro' } }\n       *   ]\n       * })\n       *\n       * // Query similar vectors\n       * const { data } = await index.queryVectors({\n       *   queryVector: { float32: [...] },\n       *   topK: 5\n       * })\n       * ```\n       */\n    }, {\n      key: \"index\",\n      value: function index(indexName) {\n        return new VectorIndexScope(this.url, this.headers, this.vectorBucketName, indexName, this.fetch);\n      }\n    }]);\n  }(VectorIndexApi_1.default);\n  exports.VectorBucketScope = VectorBucketScope;\n  /**\n   * Scoped client for operations within a specific vector index\n   * Provides vector data operations (put, get, list, query, delete)\n   */\n  var VectorIndexScope = /*#__PURE__*/function (_VectorDataApi_1$defa) {\n    function VectorIndexScope(url, headers, vectorBucketName, indexName, fetch) {\n      var _this3;\n      _classCallCheck(this, VectorIndexScope);\n      _this3 = _callSuper(this, VectorIndexScope, [url, headers, fetch]);\n      _this3.vectorBucketName = vectorBucketName;\n      _this3.indexName = indexName;\n      return _this3;\n    }\n    /**\n     * Inserts or updates vectors in this index\n     * Convenience method that automatically includes bucket and index names\n     *\n     * @param options - Vector insertion options (bucket and index names automatically set)\n     * @returns Promise with empty response on success or error\n     *\n     * @example\n     * ```typescript\n     * const index = client.bucket('embeddings-prod').index('documents-openai')\n     * await index.putVectors({\n     *   vectors: [\n     *     {\n     *       key: 'doc-1',\n     *       data: { float32: [0.1, 0.2, ...] },\n     *       metadata: { title: 'Introduction', page: 1 }\n     *     }\n     *   ]\n     * })\n     * ```\n     */\n    _inherits(VectorIndexScope, _VectorDataApi_1$defa);\n    return _createClass(VectorIndexScope, [{\n      key: \"putVectors\",\n      value: function putVectors(options) {\n        var _super = Object.create(null, {\n          putVectors: {\n            get: () => _superPropGet(VectorIndexScope, \"putVectors\", this, 1)\n          }\n        });\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          return _super.putVectors.call(this, Object.assign(Object.assign({}, options), {\n            vectorBucketName: this.vectorBucketName,\n            indexName: this.indexName\n          }));\n        });\n      }\n      /**\n       * Retrieves vectors by keys from this index\n       * Convenience method that automatically includes bucket and index names\n       *\n       * @param options - Vector retrieval options (bucket and index names automatically set)\n       * @returns Promise with array of vectors or error\n       *\n       * @example\n       * ```typescript\n       * const index = client.bucket('embeddings-prod').index('documents-openai')\n       * const { data } = await index.getVectors({\n       *   keys: ['doc-1', 'doc-2'],\n       *   returnMetadata: true\n       * })\n       * ```\n       */\n    }, {\n      key: \"getVectors\",\n      value: function getVectors(options) {\n        var _super = Object.create(null, {\n          getVectors: {\n            get: () => _superPropGet(VectorIndexScope, \"getVectors\", this, 1)\n          }\n        });\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          return _super.getVectors.call(this, Object.assign(Object.assign({}, options), {\n            vectorBucketName: this.vectorBucketName,\n            indexName: this.indexName\n          }));\n        });\n      }\n      /**\n       * Lists vectors in this index with pagination\n       * Convenience method that automatically includes bucket and index names\n       *\n       * @param options - Listing options (bucket and index names automatically set)\n       * @returns Promise with array of vectors and pagination token\n       *\n       * @example\n       * ```typescript\n       * const index = client.bucket('embeddings-prod').index('documents-openai')\n       * const { data } = await index.listVectors({\n       *   maxResults: 500,\n       *   returnMetadata: true\n       * })\n       * ```\n       */\n    }, {\n      key: \"listVectors\",\n      value: function listVectors() {\n        var _super = Object.create(null, {\n          listVectors: {\n            get: () => _superPropGet(VectorIndexScope, \"listVectors\", this, 1)\n          }\n        });\n        return tslib_1.__awaiter(this, arguments, void 0, function () {\n          var _this4 = this;\n          var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n          return function* () {\n            return _super.listVectors.call(_this4, Object.assign(Object.assign({}, options), {\n              vectorBucketName: _this4.vectorBucketName,\n              indexName: _this4.indexName\n            }));\n          }();\n        });\n      }\n      /**\n       * Queries for similar vectors in this index\n       * Convenience method that automatically includes bucket and index names\n       *\n       * @param options - Query options (bucket and index names automatically set)\n       * @returns Promise with array of similar vectors ordered by distance\n       *\n       * @example\n       * ```typescript\n       * const index = client.bucket('embeddings-prod').index('documents-openai')\n       * const { data } = await index.queryVectors({\n       *   queryVector: { float32: [0.1, 0.2, ...] },\n       *   topK: 5,\n       *   filter: { category: 'technical' },\n       *   returnDistance: true,\n       *   returnMetadata: true\n       * })\n       * ```\n       */\n    }, {\n      key: \"queryVectors\",\n      value: function queryVectors(options) {\n        var _super = Object.create(null, {\n          queryVectors: {\n            get: () => _superPropGet(VectorIndexScope, \"queryVectors\", this, 1)\n          }\n        });\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          return _super.queryVectors.call(this, Object.assign(Object.assign({}, options), {\n            vectorBucketName: this.vectorBucketName,\n            indexName: this.indexName\n          }));\n        });\n      }\n      /**\n       * Deletes vectors by keys from this index\n       * Convenience method that automatically includes bucket and index names\n       *\n       * @param options - Deletion options (bucket and index names automatically set)\n       * @returns Promise with empty response on success or error\n       *\n       * @example\n       * ```typescript\n       * const index = client.bucket('embeddings-prod').index('documents-openai')\n       * await index.deleteVectors({\n       *   keys: ['doc-1', 'doc-2', 'doc-3']\n       * })\n       * ```\n       */\n    }, {\n      key: \"deleteVectors\",\n      value: function deleteVectors(options) {\n        var _super = Object.create(null, {\n          deleteVectors: {\n            get: () => _superPropGet(VectorIndexScope, \"deleteVectors\", this, 1)\n          }\n        });\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n          return _super.deleteVectors.call(this, Object.assign(Object.assign({}, options), {\n            vectorBucketName: this.vectorBucketName,\n            indexName: this.indexName\n          }));\n        });\n      }\n    }]);\n  }(VectorDataApi_1.default);\n  exports.VectorIndexScope = VectorIndexScope;\n});","lineCount":456,"map":[[2,2,1,0],[2,14,1,12],[4,2,1,13],[4,6,1,13,"_superPropGet"],[4,19,1,13],[4,22,1,13,"require"],[4,29,1,13],[4,30,1,13,"_dependencyMap"],[4,44,1,13],[4,88,1,13,"default"],[4,95,1,13],[5,2,1,13],[5,6,1,13,"_classCallCheck"],[5,21,1,13],[5,24,1,13,"require"],[5,31,1,13],[5,32,1,13,"_dependencyMap"],[5,46,1,13],[5,92,1,13,"default"],[5,99,1,13],[6,2,1,13],[6,6,1,13,"_createClass"],[6,18,1,13],[6,21,1,13,"require"],[6,28,1,13],[6,29,1,13,"_dependencyMap"],[6,43,1,13],[6,86,1,13,"default"],[6,93,1,13],[7,2,1,13],[7,6,1,13,"_callSuper"],[7,16,1,13],[7,19,1,13,"require"],[7,26,1,13],[7,27,1,13,"_dependencyMap"],[7,41,1,13],[7,82,1,13,"default"],[7,89,1,13],[8,2,1,13],[8,6,1,13,"_inherits"],[8,15,1,13],[8,18,1,13,"require"],[8,25,1,13],[8,26,1,13,"_dependencyMap"],[8,40,1,13],[8,80,1,13,"default"],[8,87,1,13],[9,2,2,0,"Object"],[9,8,2,6],[9,9,2,7,"defineProperty"],[9,23,2,21],[9,24,2,22,"exports"],[9,31,2,29],[9,33,2,31],[9,45,2,43],[9,47,2,45],[10,4,2,47,"value"],[10,9,2,52],[10,11,2,54],[11,2,2,59],[11,3,2,60],[11,4,2,61],[12,2,3,0,"exports"],[12,9,3,7],[12,10,3,8,"VectorIndexScope"],[12,26,3,24],[12,29,3,27,"exports"],[12,36,3,34],[12,37,3,35,"VectorBucketScope"],[12,54,3,52],[12,57,3,55,"exports"],[12,64,3,62],[12,65,3,63,"StorageVectorsClient"],[12,85,3,83],[12,88,3,86],[12,93,3,91],[12,94,3,92],[13,2,4,0],[13,6,4,6,"tslib_1"],[13,13,4,13],[13,16,4,16,"require"],[13,23,4,23],[13,24,4,23,"_dependencyMap"],[13,38,4,23],[13,50,4,31],[13,51,4,32],[14,2,5,0],[14,6,5,6,"VectorIndexApi_1"],[14,22,5,22],[14,25,5,25,"tslib_1"],[14,32,5,32],[14,33,5,33,"__importDefault"],[14,48,5,48],[14,49,5,49,"require"],[14,56,5,56],[14,57,5,56,"_dependencyMap"],[14,71,5,56],[14,94,5,75],[14,95,5,76],[14,96,5,77],[15,2,6,0],[15,6,6,6,"VectorDataApi_1"],[15,21,6,21],[15,24,6,24,"tslib_1"],[15,31,6,31],[15,32,6,32,"__importDefault"],[15,47,6,47],[15,48,6,48,"require"],[15,55,6,55],[15,56,6,55,"_dependencyMap"],[15,70,6,55],[15,92,6,73],[15,93,6,74],[15,94,6,75],[16,2,7,0],[16,6,7,6,"VectorBucketApi_1"],[16,23,7,23],[16,26,7,26,"tslib_1"],[16,33,7,33],[16,34,7,34,"__importDefault"],[16,49,7,49],[16,50,7,50,"require"],[16,57,7,57],[16,58,7,57,"_dependencyMap"],[16,72,7,57],[16,96,7,77],[16,97,7,78],[16,98,7,79],[17,2,8,0],[18,0,9,0],[19,0,10,0],[20,0,11,0],[21,0,12,0],[22,0,13,0],[23,0,14,0],[24,0,15,0],[25,0,16,0],[26,0,17,0],[27,0,18,0],[28,0,19,0],[29,0,20,0],[30,0,21,0],[31,0,22,0],[32,0,23,0],[33,0,24,0],[34,0,25,0],[35,0,26,0],[36,0,27,0],[37,0,28,0],[38,0,29,0],[39,0,30,0],[40,0,31,0],[41,0,32,0],[42,0,33,0],[43,0,34,0],[44,0,35,0],[45,0,36,0],[46,0,37,0],[47,0,38,0],[48,0,39,0],[49,0,40,0],[50,0,41,0],[51,0,42,0],[52,0,43,0],[53,0,44,0],[54,0,45,0],[55,0,46,0],[56,0,47,0],[57,0,48,0],[58,0,49,0],[59,0,50,0],[60,0,51,0],[61,0,52,0],[62,0,53,0],[63,0,54,0],[64,0,55,0],[65,0,56,0],[66,0,57,0],[67,0,58,0],[68,0,59,0],[69,0,60,0],[70,0,61,0],[71,0,62,0],[72,2,8,0],[72,6,63,6,"StorageVectorsClient"],[72,26,63,26],[72,52,63,26,"_VectorBucketApi_1$de"],[72,73,63,26],[73,4,64,4],[73,13,64,4,"StorageVectorsClient"],[73,34,64,16,"url"],[73,37,64,19],[73,39,64,35],[74,6,64,35],[74,10,64,21,"options"],[74,17,64,28],[74,20,64,28,"arguments"],[74,29,64,28],[74,30,64,28,"length"],[74,36,64,28],[74,44,64,28,"arguments"],[74,53,64,28],[74,61,64,28,"undefined"],[74,70,64,28],[74,73,64,28,"arguments"],[74,82,64,28],[74,88,64,31],[74,89,64,32],[74,90,64,33],[75,6,64,33,"_classCallCheck"],[75,21,64,33],[75,28,64,33,"StorageVectorsClient"],[75,48,64,33],[76,6,64,33],[76,13,64,33,"_callSuper"],[76,23,64,33],[76,30,64,33,"StorageVectorsClient"],[76,50,64,33],[76,53,65,14,"url"],[76,56,65,17],[76,58,65,19,"options"],[76,65,65,26],[76,66,65,27,"headers"],[76,73,65,34],[76,77,65,38],[76,78,65,39],[76,79,65,40],[76,81,65,42,"options"],[76,88,65,49],[76,89,65,50,"fetch"],[76,94,65,55],[77,4,66,4],[78,4,67,4],[79,0,68,0],[80,0,69,0],[81,0,70,0],[82,0,71,0],[83,0,72,0],[84,0,73,0],[85,0,74,0],[86,0,75,0],[87,0,76,0],[88,0,77,0],[89,0,78,0],[90,0,79,0],[91,0,80,0],[92,0,81,0],[93,0,82,0],[94,0,83,0],[95,0,84,0],[96,0,85,0],[97,0,86,0],[98,0,87,0],[99,0,88,0],[100,0,89,0],[101,4,67,4,"_inherits"],[101,13,67,4],[101,14,67,4,"StorageVectorsClient"],[101,34,67,4],[101,36,67,4,"_VectorBucketApi_1$de"],[101,57,67,4],[102,4,67,4],[102,11,67,4,"_createClass"],[102,23,67,4],[102,24,67,4,"StorageVectorsClient"],[102,44,67,4],[103,6,67,4,"key"],[103,9,67,4],[104,6,67,4,"value"],[104,11,67,4],[104,13,90,4],[104,22,90,4,"from"],[104,26,90,8,"from"],[104,27,90,9,"vectorBucketName"],[104,43,90,25],[104,45,90,27],[105,8,91,8],[105,15,91,15],[105,19,91,19,"VectorBucketScope"],[105,36,91,36],[105,37,91,37],[105,41,91,41],[105,42,91,42,"url"],[105,45,91,45],[105,47,91,47],[105,51,91,51],[105,52,91,52,"headers"],[105,59,91,59],[105,61,91,61,"vectorBucketName"],[105,77,91,77],[105,79,91,79],[105,83,91,83],[105,84,91,84,"fetch"],[105,89,91,89],[105,90,91,90],[106,6,92,4],[107,4,92,5],[108,2,92,5],[108,4,63,35,"VectorBucketApi_1"],[108,21,63,52],[108,22,63,53,"default"],[108,29,63,60],[109,2,94,0,"exports"],[109,9,94,7],[109,10,94,8,"StorageVectorsClient"],[109,30,94,28],[109,33,94,31,"StorageVectorsClient"],[109,53,94,51],[110,2,95,0],[111,0,96,0],[112,0,97,0],[113,0,98,0],[114,2,95,0],[114,6,99,6,"VectorBucketScope"],[114,23,99,23],[114,49,99,23,"_VectorIndexApi_1$def"],[114,70,99,23],[115,4,100,4],[115,13,100,4,"VectorBucketScope"],[115,31,100,16,"url"],[115,34,100,19],[115,36,100,21,"headers"],[115,43,100,28],[115,45,100,30,"vectorBucketName"],[115,61,100,46],[115,63,100,48,"fetch"],[115,68,100,53],[115,70,100,55],[116,6,100,55],[116,10,100,55,"_this"],[116,15,100,55],[117,6,100,55,"_classCallCheck"],[117,21,100,55],[117,28,100,55,"VectorBucketScope"],[117,45,100,55],[118,6,101,8,"_this"],[118,11,101,8],[118,14,101,8,"_callSuper"],[118,24,101,8],[118,31,101,8,"VectorBucketScope"],[118,48,101,8],[118,51,101,14,"url"],[118,54,101,17],[118,56,101,19,"headers"],[118,63,101,26],[118,65,101,28,"fetch"],[118,70,101,33],[119,6,102,8,"_this"],[119,11,102,8],[119,12,102,13,"vectorBucketName"],[119,28,102,29],[119,31,102,32,"vectorBucketName"],[119,47,102,48],[120,6,102,49],[120,13,102,49,"_this"],[120,18,102,49],[121,4,103,4],[122,4,104,4],[123,0,105,0],[124,0,106,0],[125,0,107,0],[126,0,108,0],[127,0,109,0],[128,0,110,0],[129,0,111,0],[130,0,112,0],[131,0,113,0],[132,0,114,0],[133,0,115,0],[134,0,116,0],[135,0,117,0],[136,0,118,0],[137,0,119,0],[138,0,120,0],[139,0,121,0],[140,0,122,0],[141,0,123,0],[142,0,124,0],[143,4,104,4,"_inherits"],[143,13,104,4],[143,14,104,4,"VectorBucketScope"],[143,31,104,4],[143,33,104,4,"_VectorIndexApi_1$def"],[143,54,104,4],[144,4,104,4],[144,11,104,4,"_createClass"],[144,23,104,4],[144,24,104,4,"VectorBucketScope"],[144,41,104,4],[145,6,104,4,"key"],[145,9,104,4],[146,6,104,4,"value"],[146,11,104,4],[146,13,125,4],[146,22,125,4,"createIndex"],[146,33,125,15,"createIndex"],[146,34,125,16,"options"],[146,41,125,23],[146,43,125,25],[147,8,126,8],[147,12,126,14,"_super"],[147,18,126,20],[147,21,126,23,"Object"],[147,27,126,29],[147,28,126,30,"create"],[147,34,126,36],[147,35,126,37],[147,39,126,41],[147,41,126,43],[148,10,127,12,"createIndex"],[148,21,127,23],[148,23,127,25],[149,12,127,27,"get"],[149,15,127,30],[149,17,127,32,"get"],[149,18,127,32],[149,23,127,32,"_superPropGet"],[149,36,127,32],[149,37,127,32,"VectorBucketScope"],[149,54,127,32],[150,10,127,56],[151,8,128,8],[151,9,128,9],[151,10,128,10],[152,8,129,8],[152,15,129,15,"tslib_1"],[152,22,129,22],[152,23,129,23,"__awaiter"],[152,32,129,32],[152,33,129,33],[152,37,129,37],[152,39,129,39],[152,44,129,44],[152,45,129,45],[152,47,129,47],[152,52,129,52],[152,53,129,53],[152,55,129,55],[152,68,129,68],[153,10,130,12],[153,17,130,19,"_super"],[153,23,130,25],[153,24,130,26,"createIndex"],[153,35,130,37],[153,36,130,38,"call"],[153,40,130,42],[153,41,130,43],[153,45,130,47],[153,47,130,49,"Object"],[153,53,130,55],[153,54,130,56,"assign"],[153,60,130,62],[153,61,130,63,"Object"],[153,67,130,69],[153,68,130,70,"assign"],[153,74,130,76],[153,75,130,77],[153,76,130,78],[153,77,130,79],[153,79,130,81,"options"],[153,86,130,88],[153,87,130,89],[153,89,130,91],[154,12,130,93,"vectorBucketName"],[154,28,130,109],[154,30,130,111],[154,34,130,115],[154,35,130,116,"vectorBucketName"],[155,10,130,133],[155,11,130,134],[155,12,130,135],[155,13,130,136],[156,8,131,8],[156,9,131,9],[156,10,131,10],[157,6,132,4],[158,6,133,4],[159,0,134,0],[160,0,135,0],[161,0,136,0],[162,0,137,0],[163,0,138,0],[164,0,139,0],[165,0,140,0],[166,0,141,0],[167,0,142,0],[168,0,143,0],[169,0,144,0],[170,0,145,0],[171,4,133,4],[172,6,133,4,"key"],[172,9,133,4],[173,6,133,4,"value"],[173,11,133,4],[173,13,146,4],[173,22,146,4,"listIndexes"],[173,33,146,15,"listIndexes"],[173,34,146,15],[173,36,146,18],[174,8,147,8],[174,12,147,14,"_super"],[174,18,147,20],[174,21,147,23,"Object"],[174,27,147,29],[174,28,147,30,"create"],[174,34,147,36],[174,35,147,37],[174,39,147,41],[174,41,147,43],[175,10,148,12,"listIndexes"],[175,21,148,23],[175,23,148,25],[176,12,148,27,"get"],[176,15,148,30],[176,17,148,32,"get"],[176,18,148,32],[176,23,148,32,"_superPropGet"],[176,36,148,32],[176,37,148,32,"VectorBucketScope"],[176,54,148,32],[177,10,148,56],[178,8,149,8],[178,9,149,9],[178,10,149,10],[179,8,150,8],[179,15,150,15,"tslib_1"],[179,22,150,22],[179,23,150,23,"__awaiter"],[179,32,150,32],[179,33,150,33],[179,37,150,37],[179,39,150,39,"arguments"],[179,48,150,48],[179,50,150,50],[179,55,150,55],[179,56,150,56],[179,58,150,58],[180,10,150,58],[180,14,150,58,"_this2"],[180,20,150,58],[181,10,150,58],[181,14,150,69,"options"],[181,21,150,76],[181,24,150,76,"arguments"],[181,33,150,76],[181,34,150,76,"length"],[181,40,150,76],[181,48,150,76,"arguments"],[181,57,150,76],[181,65,150,76,"undefined"],[181,74,150,76],[181,77,150,76,"arguments"],[181,86,150,76],[181,92,150,79],[181,93,150,80],[181,94,150,81],[182,10,150,81],[182,30,150,83],[183,12,151,12],[183,19,151,19,"_super"],[183,25,151,25],[183,26,151,26,"listIndexes"],[183,37,151,37],[183,38,151,38,"call"],[183,42,151,42],[183,43,151,43,"_this2"],[183,49,151,47],[183,51,151,49,"Object"],[183,57,151,55],[183,58,151,56,"assign"],[183,64,151,62],[183,65,151,63,"Object"],[183,71,151,69],[183,72,151,70,"assign"],[183,78,151,76],[183,79,151,77],[183,80,151,78],[183,81,151,79],[183,83,151,81,"options"],[183,90,151,88],[183,91,151,89],[183,93,151,91],[184,14,151,93,"vectorBucketName"],[184,30,151,109],[184,32,151,111,"_this2"],[184,38,151,115],[184,39,151,116,"vectorBucketName"],[185,12,151,133],[185,13,151,134],[185,14,151,135],[185,15,151,136],[186,10,152,8],[186,11,152,9],[187,8,152,9],[187,10,152,10],[188,6,153,4],[189,6,154,4],[190,0,155,0],[191,0,156,0],[192,0,157,0],[193,0,158,0],[194,0,159,0],[195,0,160,0],[196,0,161,0],[197,0,162,0],[198,0,163,0],[199,0,164,0],[200,0,165,0],[201,0,166,0],[202,0,167,0],[203,4,154,4],[204,6,154,4,"key"],[204,9,154,4],[205,6,154,4,"value"],[205,11,154,4],[205,13,168,4],[205,22,168,4,"getIndex"],[205,30,168,12,"getIndex"],[205,31,168,13,"indexName"],[205,40,168,22],[205,42,168,24],[206,8,169,8],[206,12,169,14,"_super"],[206,18,169,20],[206,21,169,23,"Object"],[206,27,169,29],[206,28,169,30,"create"],[206,34,169,36],[206,35,169,37],[206,39,169,41],[206,41,169,43],[207,10,170,12,"getIndex"],[207,18,170,20],[207,20,170,22],[208,12,170,24,"get"],[208,15,170,27],[208,17,170,29,"get"],[208,18,170,29],[208,23,170,29,"_superPropGet"],[208,36,170,29],[208,37,170,29,"VectorBucketScope"],[208,54,170,29],[209,10,170,50],[210,8,171,8],[210,9,171,9],[210,10,171,10],[211,8,172,8],[211,15,172,15,"tslib_1"],[211,22,172,22],[211,23,172,23,"__awaiter"],[211,32,172,32],[211,33,172,33],[211,37,172,37],[211,39,172,39],[211,44,172,44],[211,45,172,45],[211,47,172,47],[211,52,172,52],[211,53,172,53],[211,55,172,55],[211,68,172,68],[212,10,173,12],[212,17,173,19,"_super"],[212,23,173,25],[212,24,173,26,"getIndex"],[212,32,173,34],[212,33,173,35,"call"],[212,37,173,39],[212,38,173,40],[212,42,173,44],[212,44,173,46],[212,48,173,50],[212,49,173,51,"vectorBucketName"],[212,65,173,67],[212,67,173,69,"indexName"],[212,76,173,78],[212,77,173,79],[213,8,174,8],[213,9,174,9],[213,10,174,10],[214,6,175,4],[215,6,176,4],[216,0,177,0],[217,0,178,0],[218,0,179,0],[219,0,180,0],[220,0,181,0],[221,0,182,0],[222,0,183,0],[223,0,184,0],[224,0,185,0],[225,0,186,0],[226,0,187,0],[227,0,188,0],[228,4,176,4],[229,6,176,4,"key"],[229,9,176,4],[230,6,176,4,"value"],[230,11,176,4],[230,13,189,4],[230,22,189,4,"deleteIndex"],[230,33,189,15,"deleteIndex"],[230,34,189,16,"indexName"],[230,43,189,25],[230,45,189,27],[231,8,190,8],[231,12,190,14,"_super"],[231,18,190,20],[231,21,190,23,"Object"],[231,27,190,29],[231,28,190,30,"create"],[231,34,190,36],[231,35,190,37],[231,39,190,41],[231,41,190,43],[232,10,191,12,"deleteIndex"],[232,21,191,23],[232,23,191,25],[233,12,191,27,"get"],[233,15,191,30],[233,17,191,32,"get"],[233,18,191,32],[233,23,191,32,"_superPropGet"],[233,36,191,32],[233,37,191,32,"VectorBucketScope"],[233,54,191,32],[234,10,191,56],[235,8,192,8],[235,9,192,9],[235,10,192,10],[236,8,193,8],[236,15,193,15,"tslib_1"],[236,22,193,22],[236,23,193,23,"__awaiter"],[236,32,193,32],[236,33,193,33],[236,37,193,37],[236,39,193,39],[236,44,193,44],[236,45,193,45],[236,47,193,47],[236,52,193,52],[236,53,193,53],[236,55,193,55],[236,68,193,68],[237,10,194,12],[237,17,194,19,"_super"],[237,23,194,25],[237,24,194,26,"deleteIndex"],[237,35,194,37],[237,36,194,38,"call"],[237,40,194,42],[237,41,194,43],[237,45,194,47],[237,47,194,49],[237,51,194,53],[237,52,194,54,"vectorBucketName"],[237,68,194,70],[237,70,194,72,"indexName"],[237,79,194,81],[237,80,194,82],[238,8,195,8],[238,9,195,9],[238,10,195,10],[239,6,196,4],[240,6,197,4],[241,0,198,0],[242,0,199,0],[243,0,200,0],[244,0,201,0],[245,0,202,0],[246,0,203,0],[247,0,204,0],[248,0,205,0],[249,0,206,0],[250,0,207,0],[251,0,208,0],[252,0,209,0],[253,0,210,0],[254,0,211,0],[255,0,212,0],[256,0,213,0],[257,0,214,0],[258,0,215,0],[259,0,216,0],[260,0,217,0],[261,0,218,0],[262,0,219,0],[263,0,220,0],[264,0,221,0],[265,4,197,4],[266,6,197,4,"key"],[266,9,197,4],[267,6,197,4,"value"],[267,11,197,4],[267,13,222,4],[267,22,222,4,"index"],[267,27,222,9,"index"],[267,28,222,10,"indexName"],[267,37,222,19],[267,39,222,21],[268,8,223,8],[268,15,223,15],[268,19,223,19,"VectorIndexScope"],[268,35,223,35],[268,36,223,36],[268,40,223,40],[268,41,223,41,"url"],[268,44,223,44],[268,46,223,46],[268,50,223,50],[268,51,223,51,"headers"],[268,58,223,58],[268,60,223,60],[268,64,223,64],[268,65,223,65,"vectorBucketName"],[268,81,223,81],[268,83,223,83,"indexName"],[268,92,223,92],[268,94,223,94],[268,98,223,98],[268,99,223,99,"fetch"],[268,104,223,104],[268,105,223,105],[269,6,224,4],[270,4,224,5],[271,2,224,5],[271,4,99,32,"VectorIndexApi_1"],[271,20,99,48],[271,21,99,49,"default"],[271,28,99,56],[272,2,226,0,"exports"],[272,9,226,7],[272,10,226,8,"VectorBucketScope"],[272,27,226,25],[272,30,226,28,"VectorBucketScope"],[272,47,226,45],[273,2,227,0],[274,0,228,0],[275,0,229,0],[276,0,230,0],[277,2,227,0],[277,6,231,6,"VectorIndexScope"],[277,22,231,22],[277,48,231,22,"_VectorDataApi_1$defa"],[277,69,231,22],[278,4,232,4],[278,13,232,4,"VectorIndexScope"],[278,30,232,16,"url"],[278,33,232,19],[278,35,232,21,"headers"],[278,42,232,28],[278,44,232,30,"vectorBucketName"],[278,60,232,46],[278,62,232,48,"indexName"],[278,71,232,57],[278,73,232,59,"fetch"],[278,78,232,64],[278,80,232,66],[279,6,232,66],[279,10,232,66,"_this3"],[279,16,232,66],[280,6,232,66,"_classCallCheck"],[280,21,232,66],[280,28,232,66,"VectorIndexScope"],[280,44,232,66],[281,6,233,8,"_this3"],[281,12,233,8],[281,15,233,8,"_callSuper"],[281,25,233,8],[281,32,233,8,"VectorIndexScope"],[281,48,233,8],[281,51,233,14,"url"],[281,54,233,17],[281,56,233,19,"headers"],[281,63,233,26],[281,65,233,28,"fetch"],[281,70,233,33],[282,6,234,8,"_this3"],[282,12,234,8],[282,13,234,13,"vectorBucketName"],[282,29,234,29],[282,32,234,32,"vectorBucketName"],[282,48,234,48],[283,6,235,8,"_this3"],[283,12,235,8],[283,13,235,13,"indexName"],[283,22,235,22],[283,25,235,25,"indexName"],[283,34,235,34],[284,6,235,35],[284,13,235,35,"_this3"],[284,19,235,35],[285,4,236,4],[286,4,237,4],[287,0,238,0],[288,0,239,0],[289,0,240,0],[290,0,241,0],[291,0,242,0],[292,0,243,0],[293,0,244,0],[294,0,245,0],[295,0,246,0],[296,0,247,0],[297,0,248,0],[298,0,249,0],[299,0,250,0],[300,0,251,0],[301,0,252,0],[302,0,253,0],[303,0,254,0],[304,0,255,0],[305,0,256,0],[306,0,257,0],[307,4,237,4,"_inherits"],[307,13,237,4],[307,14,237,4,"VectorIndexScope"],[307,30,237,4],[307,32,237,4,"_VectorDataApi_1$defa"],[307,53,237,4],[308,4,237,4],[308,11,237,4,"_createClass"],[308,23,237,4],[308,24,237,4,"VectorIndexScope"],[308,40,237,4],[309,6,237,4,"key"],[309,9,237,4],[310,6,237,4,"value"],[310,11,237,4],[310,13,258,4],[310,22,258,4,"putVectors"],[310,32,258,14,"putVectors"],[310,33,258,15,"options"],[310,40,258,22],[310,42,258,24],[311,8,259,8],[311,12,259,14,"_super"],[311,18,259,20],[311,21,259,23,"Object"],[311,27,259,29],[311,28,259,30,"create"],[311,34,259,36],[311,35,259,37],[311,39,259,41],[311,41,259,43],[312,10,260,12,"putVectors"],[312,20,260,22],[312,22,260,24],[313,12,260,26,"get"],[313,15,260,29],[313,17,260,31,"get"],[313,18,260,31],[313,23,260,31,"_superPropGet"],[313,36,260,31],[313,37,260,31,"VectorIndexScope"],[313,53,260,31],[314,10,260,54],[315,8,261,8],[315,9,261,9],[315,10,261,10],[316,8,262,8],[316,15,262,15,"tslib_1"],[316,22,262,22],[316,23,262,23,"__awaiter"],[316,32,262,32],[316,33,262,33],[316,37,262,37],[316,39,262,39],[316,44,262,44],[316,45,262,45],[316,47,262,47],[316,52,262,52],[316,53,262,53],[316,55,262,55],[316,68,262,68],[317,10,263,12],[317,17,263,19,"_super"],[317,23,263,25],[317,24,263,26,"putVectors"],[317,34,263,36],[317,35,263,37,"call"],[317,39,263,41],[317,40,263,42],[317,44,263,46],[317,46,263,48,"Object"],[317,52,263,54],[317,53,263,55,"assign"],[317,59,263,61],[317,60,263,62,"Object"],[317,66,263,68],[317,67,263,69,"assign"],[317,73,263,75],[317,74,263,76],[317,75,263,77],[317,76,263,78],[317,78,263,80,"options"],[317,85,263,87],[317,86,263,88],[317,88,263,90],[318,12,263,92,"vectorBucketName"],[318,28,263,108],[318,30,263,110],[318,34,263,114],[318,35,263,115,"vectorBucketName"],[318,51,263,131],[319,12,263,133,"indexName"],[319,21,263,142],[319,23,263,144],[319,27,263,148],[319,28,263,149,"indexName"],[320,10,263,159],[320,11,263,160],[320,12,263,161],[320,13,263,162],[321,8,264,8],[321,9,264,9],[321,10,264,10],[322,6,265,4],[323,6,266,4],[324,0,267,0],[325,0,268,0],[326,0,269,0],[327,0,270,0],[328,0,271,0],[329,0,272,0],[330,0,273,0],[331,0,274,0],[332,0,275,0],[333,0,276,0],[334,0,277,0],[335,0,278,0],[336,0,279,0],[337,0,280,0],[338,0,281,0],[339,4,266,4],[340,6,266,4,"key"],[340,9,266,4],[341,6,266,4,"value"],[341,11,266,4],[341,13,282,4],[341,22,282,4,"getVectors"],[341,32,282,14,"getVectors"],[341,33,282,15,"options"],[341,40,282,22],[341,42,282,24],[342,8,283,8],[342,12,283,14,"_super"],[342,18,283,20],[342,21,283,23,"Object"],[342,27,283,29],[342,28,283,30,"create"],[342,34,283,36],[342,35,283,37],[342,39,283,41],[342,41,283,43],[343,10,284,12,"getVectors"],[343,20,284,22],[343,22,284,24],[344,12,284,26,"get"],[344,15,284,29],[344,17,284,31,"get"],[344,18,284,31],[344,23,284,31,"_superPropGet"],[344,36,284,31],[344,37,284,31,"VectorIndexScope"],[344,53,284,31],[345,10,284,54],[346,8,285,8],[346,9,285,9],[346,10,285,10],[347,8,286,8],[347,15,286,15,"tslib_1"],[347,22,286,22],[347,23,286,23,"__awaiter"],[347,32,286,32],[347,33,286,33],[347,37,286,37],[347,39,286,39],[347,44,286,44],[347,45,286,45],[347,47,286,47],[347,52,286,52],[347,53,286,53],[347,55,286,55],[347,68,286,68],[348,10,287,12],[348,17,287,19,"_super"],[348,23,287,25],[348,24,287,26,"getVectors"],[348,34,287,36],[348,35,287,37,"call"],[348,39,287,41],[348,40,287,42],[348,44,287,46],[348,46,287,48,"Object"],[348,52,287,54],[348,53,287,55,"assign"],[348,59,287,61],[348,60,287,62,"Object"],[348,66,287,68],[348,67,287,69,"assign"],[348,73,287,75],[348,74,287,76],[348,75,287,77],[348,76,287,78],[348,78,287,80,"options"],[348,85,287,87],[348,86,287,88],[348,88,287,90],[349,12,287,92,"vectorBucketName"],[349,28,287,108],[349,30,287,110],[349,34,287,114],[349,35,287,115,"vectorBucketName"],[349,51,287,131],[350,12,287,133,"indexName"],[350,21,287,142],[350,23,287,144],[350,27,287,148],[350,28,287,149,"indexName"],[351,10,287,159],[351,11,287,160],[351,12,287,161],[351,13,287,162],[352,8,288,8],[352,9,288,9],[352,10,288,10],[353,6,289,4],[354,6,290,4],[355,0,291,0],[356,0,292,0],[357,0,293,0],[358,0,294,0],[359,0,295,0],[360,0,296,0],[361,0,297,0],[362,0,298,0],[363,0,299,0],[364,0,300,0],[365,0,301,0],[366,0,302,0],[367,0,303,0],[368,0,304,0],[369,0,305,0],[370,4,290,4],[371,6,290,4,"key"],[371,9,290,4],[372,6,290,4,"value"],[372,11,290,4],[372,13,306,4],[372,22,306,4,"listVectors"],[372,33,306,15,"listVectors"],[372,34,306,15],[372,36,306,18],[373,8,307,8],[373,12,307,14,"_super"],[373,18,307,20],[373,21,307,23,"Object"],[373,27,307,29],[373,28,307,30,"create"],[373,34,307,36],[373,35,307,37],[373,39,307,41],[373,41,307,43],[374,10,308,12,"listVectors"],[374,21,308,23],[374,23,308,25],[375,12,308,27,"get"],[375,15,308,30],[375,17,308,32,"get"],[375,18,308,32],[375,23,308,32,"_superPropGet"],[375,36,308,32],[375,37,308,32,"VectorIndexScope"],[375,53,308,32],[376,10,308,56],[377,8,309,8],[377,9,309,9],[377,10,309,10],[378,8,310,8],[378,15,310,15,"tslib_1"],[378,22,310,22],[378,23,310,23,"__awaiter"],[378,32,310,32],[378,33,310,33],[378,37,310,37],[378,39,310,39,"arguments"],[378,48,310,48],[378,50,310,50],[378,55,310,55],[378,56,310,56],[378,58,310,58],[379,10,310,58],[379,14,310,58,"_this4"],[379,20,310,58],[380,10,310,58],[380,14,310,69,"options"],[380,21,310,76],[380,24,310,76,"arguments"],[380,33,310,76],[380,34,310,76,"length"],[380,40,310,76],[380,48,310,76,"arguments"],[380,57,310,76],[380,65,310,76,"undefined"],[380,74,310,76],[380,77,310,76,"arguments"],[380,86,310,76],[380,92,310,79],[380,93,310,80],[380,94,310,81],[381,10,310,81],[381,30,310,83],[382,12,311,12],[382,19,311,19,"_super"],[382,25,311,25],[382,26,311,26,"listVectors"],[382,37,311,37],[382,38,311,38,"call"],[382,42,311,42],[382,43,311,43,"_this4"],[382,49,311,47],[382,51,311,49,"Object"],[382,57,311,55],[382,58,311,56,"assign"],[382,64,311,62],[382,65,311,63,"Object"],[382,71,311,69],[382,72,311,70,"assign"],[382,78,311,76],[382,79,311,77],[382,80,311,78],[382,81,311,79],[382,83,311,81,"options"],[382,90,311,88],[382,91,311,89],[382,93,311,91],[383,14,311,93,"vectorBucketName"],[383,30,311,109],[383,32,311,111,"_this4"],[383,38,311,115],[383,39,311,116,"vectorBucketName"],[383,55,311,132],[384,14,311,134,"indexName"],[384,23,311,143],[384,25,311,145,"_this4"],[384,31,311,149],[384,32,311,150,"indexName"],[385,12,311,160],[385,13,311,161],[385,14,311,162],[385,15,311,163],[386,10,312,8],[386,11,312,9],[387,8,312,9],[387,10,312,10],[388,6,313,4],[389,6,314,4],[390,0,315,0],[391,0,316,0],[392,0,317,0],[393,0,318,0],[394,0,319,0],[395,0,320,0],[396,0,321,0],[397,0,322,0],[398,0,323,0],[399,0,324,0],[400,0,325,0],[401,0,326,0],[402,0,327,0],[403,0,328,0],[404,0,329,0],[405,0,330,0],[406,0,331,0],[407,0,332,0],[408,4,314,4],[409,6,314,4,"key"],[409,9,314,4],[410,6,314,4,"value"],[410,11,314,4],[410,13,333,4],[410,22,333,4,"queryVectors"],[410,34,333,16,"queryVectors"],[410,35,333,17,"options"],[410,42,333,24],[410,44,333,26],[411,8,334,8],[411,12,334,14,"_super"],[411,18,334,20],[411,21,334,23,"Object"],[411,27,334,29],[411,28,334,30,"create"],[411,34,334,36],[411,35,334,37],[411,39,334,41],[411,41,334,43],[412,10,335,12,"queryVectors"],[412,22,335,24],[412,24,335,26],[413,12,335,28,"get"],[413,15,335,31],[413,17,335,33,"get"],[413,18,335,33],[413,23,335,33,"_superPropGet"],[413,36,335,33],[413,37,335,33,"VectorIndexScope"],[413,53,335,33],[414,10,335,58],[415,8,336,8],[415,9,336,9],[415,10,336,10],[416,8,337,8],[416,15,337,15,"tslib_1"],[416,22,337,22],[416,23,337,23,"__awaiter"],[416,32,337,32],[416,33,337,33],[416,37,337,37],[416,39,337,39],[416,44,337,44],[416,45,337,45],[416,47,337,47],[416,52,337,52],[416,53,337,53],[416,55,337,55],[416,68,337,68],[417,10,338,12],[417,17,338,19,"_super"],[417,23,338,25],[417,24,338,26,"queryVectors"],[417,36,338,38],[417,37,338,39,"call"],[417,41,338,43],[417,42,338,44],[417,46,338,48],[417,48,338,50,"Object"],[417,54,338,56],[417,55,338,57,"assign"],[417,61,338,63],[417,62,338,64,"Object"],[417,68,338,70],[417,69,338,71,"assign"],[417,75,338,77],[417,76,338,78],[417,77,338,79],[417,78,338,80],[417,80,338,82,"options"],[417,87,338,89],[417,88,338,90],[417,90,338,92],[418,12,338,94,"vectorBucketName"],[418,28,338,110],[418,30,338,112],[418,34,338,116],[418,35,338,117,"vectorBucketName"],[418,51,338,133],[419,12,338,135,"indexName"],[419,21,338,144],[419,23,338,146],[419,27,338,150],[419,28,338,151,"indexName"],[420,10,338,161],[420,11,338,162],[420,12,338,163],[420,13,338,164],[421,8,339,8],[421,9,339,9],[421,10,339,10],[422,6,340,4],[423,6,341,4],[424,0,342,0],[425,0,343,0],[426,0,344,0],[427,0,345,0],[428,0,346,0],[429,0,347,0],[430,0,348,0],[431,0,349,0],[432,0,350,0],[433,0,351,0],[434,0,352,0],[435,0,353,0],[436,0,354,0],[437,0,355,0],[438,4,341,4],[439,6,341,4,"key"],[439,9,341,4],[440,6,341,4,"value"],[440,11,341,4],[440,13,356,4],[440,22,356,4,"deleteVectors"],[440,35,356,17,"deleteVectors"],[440,36,356,18,"options"],[440,43,356,25],[440,45,356,27],[441,8,357,8],[441,12,357,14,"_super"],[441,18,357,20],[441,21,357,23,"Object"],[441,27,357,29],[441,28,357,30,"create"],[441,34,357,36],[441,35,357,37],[441,39,357,41],[441,41,357,43],[442,10,358,12,"deleteVectors"],[442,23,358,25],[442,25,358,27],[443,12,358,29,"get"],[443,15,358,32],[443,17,358,34,"get"],[443,18,358,34],[443,23,358,34,"_superPropGet"],[443,36,358,34],[443,37,358,34,"VectorIndexScope"],[443,53,358,34],[444,10,358,60],[445,8,359,8],[445,9,359,9],[445,10,359,10],[446,8,360,8],[446,15,360,15,"tslib_1"],[446,22,360,22],[446,23,360,23,"__awaiter"],[446,32,360,32],[446,33,360,33],[446,37,360,37],[446,39,360,39],[446,44,360,44],[446,45,360,45],[446,47,360,47],[446,52,360,52],[446,53,360,53],[446,55,360,55],[446,68,360,68],[447,10,361,12],[447,17,361,19,"_super"],[447,23,361,25],[447,24,361,26,"deleteVectors"],[447,37,361,39],[447,38,361,40,"call"],[447,42,361,44],[447,43,361,45],[447,47,361,49],[447,49,361,51,"Object"],[447,55,361,57],[447,56,361,58,"assign"],[447,62,361,64],[447,63,361,65,"Object"],[447,69,361,71],[447,70,361,72,"assign"],[447,76,361,78],[447,77,361,79],[447,78,361,80],[447,79,361,81],[447,81,361,83,"options"],[447,88,361,90],[447,89,361,91],[447,91,361,93],[448,12,361,95,"vectorBucketName"],[448,28,361,111],[448,30,361,113],[448,34,361,117],[448,35,361,118,"vectorBucketName"],[448,51,361,134],[449,12,361,136,"indexName"],[449,21,361,145],[449,23,361,147],[449,27,361,151],[449,28,361,152,"indexName"],[450,10,361,162],[450,11,361,163],[450,12,361,164],[450,13,361,165],[451,8,362,8],[451,9,362,9],[451,10,362,10],[452,6,363,4],[453,4,363,5],[454,2,363,5],[454,4,231,31,"VectorDataApi_1"],[454,19,231,46],[454,20,231,47,"default"],[454,27,231,54],[455,2,365,0,"exports"],[455,9,365,7],[455,10,365,8,"VectorIndexScope"],[455,26,365,24],[455,29,365,27,"VectorIndexScope"],[455,45,365,43],[456,0,365,44],[456,3]],"functionMap":{"names":["<global>","StorageVectorsClient","constructor","from","VectorBucketScope","VectorBucketScope#constructor","VectorBucketScope#createIndex","Object.create$argument_1.createIndex.get","tslib_1.__awaiter$argument_3","VectorBucketScope#listIndexes","Object.create$argument_1.listIndexes.get","VectorBucketScope#getIndex","Object.create$argument_1.getIndex.get","VectorBucketScope#deleteIndex","Object.create$argument_1.deleteIndex.get","VectorBucketScope#index","VectorIndexScope","VectorIndexScope#constructor","VectorIndexScope#putVectors","Object.create$argument_1.putVectors.get","VectorIndexScope#getVectors","Object.create$argument_1.getVectors.get","VectorIndexScope#listVectors","Object.create$argument_1.listVectors.get","VectorIndexScope#queryVectors","Object.create$argument_1.queryVectors.get","VectorIndexScope#deleteVectors","Object.create$argument_1.deleteVectors.get"],"mappings":"AAA;AC8D;ICC;KDE;IEwB;KFE;CDC;AIM;ICC;KDG;IEsB;gCCE,uBD;uDEE;SFE;KFC;IKc;gCCE,uBD;0DDE;SCE;KLC;IOe;6BCE,oBD;uDHE;SGE;KPC;ISc;gCCE,uBD;uDLE;SKE;KTC;IW0B;KXE;CJC;AgBM;ICC;KDI;IEsB;+BCE,sBD;uDVE;SUE;KFC;IIiB;+BCE,sBD;uDZE;SYE;KJC;IMiB;gCCE,uBD;0DdE;ScE;KNC;IQoB;iCCE,wBD;uDhBE;SgBE;KRC;IUgB;kCCE,yBD;uDlBE;SkBE;KVC;ChBC"},"hasCjsExports":true},"type":"js/module"}]}