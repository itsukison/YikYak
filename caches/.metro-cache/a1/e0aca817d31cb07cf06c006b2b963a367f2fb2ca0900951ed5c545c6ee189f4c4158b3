{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@tanstack/react-query","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":78,"index":78}}],"key":"Pzwu/0TIyhnZOrC9PAkpZx92hFo=","exportNames":["*"],"imports":1}},{"name":"../supabase","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":79},"end":{"line":2,"column":39,"index":118}}],"key":"zx/dTdJp0d3TJEOaa003L7FI5PE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.useChatsQuery = useChatsQuery;\n  exports.useChatMessagesQuery = useChatMessagesQuery;\n  exports.useSendMessageMutation = useSendMessageMutation;\n  exports.useCreateChatMutation = useCreateChatMutation;\n  exports.useMarkMessagesReadMutation = useMarkMessagesReadMutation;\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _tanstackReactQuery = require(_dependencyMap[1], \"@tanstack/react-query\");\n  var _supabase = require(_dependencyMap[2], \"../supabase\");\n  /**\n   * Fetch all chats for the current user\n   */\n  function useChatsQuery(userId) {\n    _s();\n    return (0, _tanstackReactQuery.useQuery)({\n      queryKey: [\"chats\", userId],\n      queryFn: function () {\n        var _ref = (0, _asyncToGenerator.default)(function* () {\n          if (!userId) throw new Error(\"User ID required\");\n          var _yield$supabase$from$ = yield _supabase.supabase.from(\"chats\").select(`\n          *,\n          user1:users!chats_user1_id_fkey(id, nickname, is_anonymous),\n          user2:users!chats_user2_id_fkey(id, nickname, is_anonymous),\n          messages(content, created_at, is_read, sender_id)\n        `).or(`user1_id.eq.${userId},user2_id.eq.${userId}`).order(\"updated_at\", {\n              ascending: false\n            }),\n            data = _yield$supabase$from$.data,\n            error = _yield$supabase$from$.error;\n          if (error) throw error;\n\n          // Transform data to include other user and last message\n          return data.map(chat => {\n            var otherUser = chat.user1.id === userId ? chat.user2 : chat.user1;\n            var messages = chat.messages || [];\n            var lastMessage = messages.length > 0 ? messages[messages.length - 1] : null;\n            var unreadCount = messages.filter(msg => !msg.is_read && msg.sender_id !== userId).length;\n            return {\n              ...chat,\n              otherUser,\n              lastMessage,\n              unreadCount\n            };\n          });\n        });\n        return function queryFn() {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      enabled: !!userId\n    });\n  }\n\n  /**\n   * Fetch messages for a specific chat\n   */\n  _s(useChatsQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n    return [_tanstackReactQuery.useQuery];\n  });\n  function useChatMessagesQuery(chatId) {\n    _s2();\n    return (0, _tanstackReactQuery.useQuery)({\n      queryKey: [\"messages\", chatId],\n      queryFn: function () {\n        var _ref2 = (0, _asyncToGenerator.default)(function* () {\n          if (!chatId) throw new Error(\"Chat ID required\");\n          var _yield$supabase$from$2 = yield _supabase.supabase.from(\"messages\").select(`\n          *,\n          sender:users!messages_sender_id_fkey(id, nickname, is_anonymous)\n        `).eq(\"chat_id\", chatId).order(\"created_at\", {\n              ascending: true\n            }),\n            data = _yield$supabase$from$2.data,\n            error = _yield$supabase$from$2.error;\n          if (error) throw error;\n          return data;\n        });\n        return function queryFn() {\n          return _ref2.apply(this, arguments);\n        };\n      }(),\n      enabled: !!chatId\n    });\n  }\n\n  /**\n   * Send a new message\n   */\n  _s2(useChatMessagesQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n    return [_tanstackReactQuery.useQuery];\n  });\n  function useSendMessageMutation() {\n    _s3();\n    var queryClient = (0, _tanstackReactQuery.useQueryClient)();\n    return (0, _tanstackReactQuery.useMutation)({\n      mutationFn: function () {\n        var _ref4 = (0, _asyncToGenerator.default)(function* (_ref3) {\n          var chatId = _ref3.chatId,\n            senderId = _ref3.senderId,\n            content = _ref3.content;\n          var _yield$supabase$from$3 = yield _supabase.supabase.from(\"messages\").insert({\n              chat_id: chatId,\n              sender_id: senderId,\n              content: content.trim()\n            }).select().single(),\n            data = _yield$supabase$from$3.data,\n            error = _yield$supabase$from$3.error;\n          if (error) throw error;\n\n          // Update chat's updated_at timestamp\n          yield _supabase.supabase.from(\"chats\").update({\n            updated_at: new Date().toISOString()\n          }).eq(\"id\", chatId);\n          return data;\n        });\n        return function mutationFn(_x) {\n          return _ref4.apply(this, arguments);\n        };\n      }(),\n      onSuccess: (data, variables) => {\n        // Invalidate messages query to refetch\n        queryClient.invalidateQueries([\"messages\", variables.chatId]);\n        // Invalidate chats query to update last message\n        queryClient.invalidateQueries([\"chats\"]);\n      }\n    });\n  }\n\n  /**\n   * Create a new chat with another user\n   */\n  _s3(useSendMessageMutation, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n    return [_tanstackReactQuery.useQueryClient, _tanstackReactQuery.useMutation];\n  });\n  function useCreateChatMutation() {\n    _s4();\n    var queryClient = (0, _tanstackReactQuery.useQueryClient)();\n    return (0, _tanstackReactQuery.useMutation)({\n      mutationFn: function () {\n        var _ref6 = (0, _asyncToGenerator.default)(function* (_ref5) {\n          var user1Id = _ref5.user1Id,\n            user2Id = _ref5.user2Id;\n          // Check if chat already exists\n          var _yield$supabase$from$4 = yield _supabase.supabase.from(\"chats\").select(\"*\").or(`and(user1_id.eq.${user1Id},user2_id.eq.${user2Id}),and(user1_id.eq.${user2Id},user2_id.eq.${user1Id})`).single(),\n            existingChat = _yield$supabase$from$4.data;\n          if (existingChat) {\n            return existingChat;\n          }\n\n          // Create new chat\n          var _yield$supabase$from$5 = yield _supabase.supabase.from(\"chats\").insert({\n              user1_id: user1Id,\n              user2_id: user2Id\n            }).select().single(),\n            data = _yield$supabase$from$5.data,\n            error = _yield$supabase$from$5.error;\n          if (error) throw error;\n          return data;\n        });\n        return function mutationFn(_x2) {\n          return _ref6.apply(this, arguments);\n        };\n      }(),\n      onSuccess: () => {\n        queryClient.invalidateQueries([\"chats\"]);\n      }\n    });\n  }\n\n  /**\n   * Mark messages as read\n   */\n  _s4(useCreateChatMutation, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n    return [_tanstackReactQuery.useQueryClient, _tanstackReactQuery.useMutation];\n  });\n  function useMarkMessagesReadMutation() {\n    _s5();\n    var queryClient = (0, _tanstackReactQuery.useQueryClient)();\n    return (0, _tanstackReactQuery.useMutation)({\n      mutationFn: function () {\n        var _ref8 = (0, _asyncToGenerator.default)(function* (_ref7) {\n          var chatId = _ref7.chatId,\n            userId = _ref7.userId;\n          var _yield$supabase$from$6 = yield _supabase.supabase.from(\"messages\").update({\n              is_read: true\n            }).eq(\"chat_id\", chatId).neq(\"sender_id\", userId).eq(\"is_read\", false),\n            error = _yield$supabase$from$6.error;\n          if (error) throw error;\n        });\n        return function mutationFn(_x3) {\n          return _ref8.apply(this, arguments);\n        };\n      }(),\n      onSuccess: (_, variables) => {\n        queryClient.invalidateQueries([\"messages\", variables.chatId]);\n        queryClient.invalidateQueries([\"chats\"]);\n      }\n    });\n  }\n  _s5(useMarkMessagesReadMutation, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n    return [_tanstackReactQuery.useQueryClient, _tanstackReactQuery.useMutation];\n  });\n});","lineCount":219,"map":[[17,2,7,0,"exports"],[17,9,7,0],[17,10,7,0,"useChatsQuery"],[17,23,7,0],[17,26,7,0,"useChatsQuery"],[17,39,7,0],[18,2,50,0,"exports"],[18,9,50,0],[18,10,50,0,"useChatMessagesQuery"],[18,30,50,0],[18,33,50,0,"useChatMessagesQuery"],[18,53,50,0],[19,2,75,0,"exports"],[19,9,75,0],[19,10,75,0,"useSendMessageMutation"],[19,32,75,0],[19,35,75,0,"useSendMessageMutation"],[19,57,75,0],[20,2,112,0,"exports"],[20,9,112,0],[20,10,112,0,"useCreateChatMutation"],[20,31,112,0],[20,34,112,0,"useCreateChatMutation"],[20,55,112,0],[21,2,152,0,"exports"],[21,9,152,0],[21,10,152,0,"useMarkMessagesReadMutation"],[21,37,152,0],[21,40,152,0,"useMarkMessagesReadMutation"],[21,67,152,0],[22,2,171,1],[22,6,171,1,"_babelRuntimeHelpersAsyncToGenerator"],[22,42,171,1],[22,45,171,1,"require"],[22,52,171,1],[22,53,171,1,"_dependencyMap"],[22,67,171,1],[23,2,171,1],[23,6,171,1,"_asyncToGenerator"],[23,23,171,1],[23,26,171,1,"_interopDefault"],[23,41,171,1],[23,42,171,1,"_babelRuntimeHelpersAsyncToGenerator"],[23,78,171,1],[24,2,1,0],[24,6,1,0,"_tanstackReactQuery"],[24,25,1,0],[24,28,1,0,"require"],[24,35,1,0],[24,36,1,0,"_dependencyMap"],[24,50,1,0],[25,2,2,0],[25,6,2,0,"_supabase"],[25,15,2,0],[25,18,2,0,"require"],[25,25,2,0],[25,26,2,0,"_dependencyMap"],[25,40,2,0],[26,2,4,0],[27,0,5,0],[28,0,6,0],[29,2,7,7],[29,11,7,16,"useChatsQuery"],[29,24,7,29,"useChatsQuery"],[29,25,7,30,"userId"],[29,31,7,36],[29,33,7,38],[30,4,7,38,"_s"],[30,6,7,38],[31,4,8,2],[31,11,8,9],[31,15,8,9,"useQuery"],[31,34,8,17],[31,35,8,17,"useQuery"],[31,43,8,17],[31,45,8,18],[32,6,9,4,"queryKey"],[32,14,9,12],[32,16,9,14],[32,17,9,15],[32,24,9,22],[32,26,9,24,"userId"],[32,32,9,30],[32,33,9,31],[33,6,10,4,"queryFn"],[33,13,10,11],[34,8,10,11],[34,12,10,11,"_ref"],[34,16,10,11],[34,23,10,11,"_asyncToGenerator"],[34,40,10,11],[34,41,10,11,"default"],[34,48,10,11],[34,50,10,13],[34,63,10,25],[35,10,11,6],[35,14,11,10],[35,15,11,11,"userId"],[35,21,11,17],[35,23,11,19],[35,29,11,25],[35,33,11,29,"Error"],[35,38,11,34],[35,39,11,35],[35,57,11,53],[35,58,11,54],[36,10,13,6],[36,14,13,6,"_yield$supabase$from$"],[36,35,13,6],[36,44,13,36,"supabase"],[36,53,13,44],[36,54,13,44,"supabase"],[36,62,13,44],[36,63,14,9,"from"],[36,67,14,13],[36,68,14,14],[36,75,14,21],[36,76,14,22],[36,77,15,9,"select"],[36,83,15,15],[36,84,15,16],[37,0,16,0],[38,0,17,0],[39,0,18,0],[40,0,19,0],[41,0,20,0],[41,9,20,9],[41,10,20,10],[41,11,21,9,"or"],[41,13,21,11],[41,14,21,12],[41,29,21,27,"userId"],[41,35,21,33],[41,51,21,49,"userId"],[41,57,21,55],[41,59,21,57],[41,60,21,58],[41,61,22,9,"order"],[41,66,22,14],[41,67,22,15],[41,79,22,27],[41,81,22,29],[42,14,22,31,"ascending"],[42,23,22,40],[42,25,22,42],[43,12,22,48],[43,13,22,49],[43,14,22,50],[44,12,13,14,"data"],[44,16,13,18],[44,19,13,18,"_yield$supabase$from$"],[44,40,13,18],[44,41,13,14,"data"],[44,45,13,18],[45,12,13,20,"error"],[45,17,13,25],[45,20,13,25,"_yield$supabase$from$"],[45,41,13,25],[45,42,13,20,"error"],[45,47,13,25],[46,10,24,6],[46,14,24,10,"error"],[46,19,24,15],[46,21,24,17],[46,27,24,23,"error"],[46,32,24,28],[48,10,26,6],[49,10,27,6],[49,17,27,13,"data"],[49,21,27,17],[49,22,27,18,"map"],[49,25,27,21],[49,26,27,23,"chat"],[49,30,27,27],[49,34,27,32],[50,12,28,8],[50,16,28,14,"otherUser"],[50,25,28,23],[50,28,28,26,"chat"],[50,32,28,30],[50,33,28,31,"user1"],[50,38,28,36],[50,39,28,37,"id"],[50,41,28,39],[50,46,28,44,"userId"],[50,52,28,50],[50,55,28,53,"chat"],[50,59,28,57],[50,60,28,58,"user2"],[50,65,28,63],[50,68,28,66,"chat"],[50,72,28,70],[50,73,28,71,"user1"],[50,78,28,76],[51,12,29,8],[51,16,29,14,"messages"],[51,24,29,22],[51,27,29,25,"chat"],[51,31,29,29],[51,32,29,30,"messages"],[51,40,29,38],[51,44,29,42],[51,46,29,44],[52,12,30,8],[52,16,30,14,"lastMessage"],[52,27,30,25],[52,30,30,28,"messages"],[52,38,30,36],[52,39,30,37,"length"],[52,45,30,43],[52,48,30,46],[52,49,30,47],[52,52,30,50,"messages"],[52,60,30,58],[52,61,30,59,"messages"],[52,69,30,67],[52,70,30,68,"length"],[52,76,30,74],[52,79,30,77],[52,80,30,78],[52,81,30,79],[52,84,30,82],[52,88,30,86],[53,12,31,8],[53,16,31,14,"unreadCount"],[53,27,31,25],[53,30,31,28,"messages"],[53,38,31,36],[53,39,31,37,"filter"],[53,45,31,43],[53,46,32,11,"msg"],[53,49,32,14],[53,53,32,19],[53,54,32,20,"msg"],[53,57,32,23],[53,58,32,24,"is_read"],[53,65,32,31],[53,69,32,35,"msg"],[53,72,32,38],[53,73,32,39,"sender_id"],[53,82,32,48],[53,87,32,53,"userId"],[53,93,33,8],[53,94,33,9],[53,95,33,10,"length"],[53,101,33,16],[54,12,35,8],[54,19,35,15],[55,14,36,10],[55,17,36,13,"chat"],[55,21,36,17],[56,14,37,10,"otherUser"],[56,23,37,19],[57,14,38,10,"lastMessage"],[57,25,38,21],[58,14,39,10,"unreadCount"],[59,12,40,8],[59,13,40,9],[60,10,41,6],[60,11,41,7],[60,12,41,8],[61,8,42,4],[61,9,42,5],[62,8,42,5],[62,24,10,4,"queryFn"],[62,31,10,11,"queryFn"],[62,32,10,11],[63,10,10,11],[63,17,10,11,"_ref"],[63,21,10,11],[63,22,10,11,"apply"],[63,27,10,11],[63,34,10,11,"arguments"],[63,43,10,11],[64,8,10,11],[65,6,10,11],[65,9,42,5],[66,6,43,4,"enabled"],[66,13,43,11],[66,15,43,13],[66,16,43,14],[66,17,43,15,"userId"],[67,4,44,2],[67,5,44,3],[67,6,44,4],[68,2,45,0],[70,2,47,0],[71,0,48,0],[72,0,49,0],[73,2,47,0,"_s"],[73,4,47,0],[73,5,7,16,"useChatsQuery"],[73,18,7,29],[74,4,7,29],[74,12,8,9,"useQuery"],[74,31,8,17],[74,32,8,17,"useQuery"],[74,40,8,17],[75,2,8,17],[76,2,50,7],[76,11,50,16,"useChatMessagesQuery"],[76,31,50,36,"useChatMessagesQuery"],[76,32,50,37,"chatId"],[76,38,50,43],[76,40,50,45],[77,4,50,45,"_s2"],[77,7,50,45],[78,4,51,2],[78,11,51,9],[78,15,51,9,"useQuery"],[78,34,51,17],[78,35,51,17,"useQuery"],[78,43,51,17],[78,45,51,18],[79,6,52,4,"queryKey"],[79,14,52,12],[79,16,52,14],[79,17,52,15],[79,27,52,25],[79,29,52,27,"chatId"],[79,35,52,33],[79,36,52,34],[80,6,53,4,"queryFn"],[80,13,53,11],[81,8,53,11],[81,12,53,11,"_ref2"],[81,17,53,11],[81,24,53,11,"_asyncToGenerator"],[81,41,53,11],[81,42,53,11,"default"],[81,49,53,11],[81,51,53,13],[81,64,53,25],[82,10,54,6],[82,14,54,10],[82,15,54,11,"chatId"],[82,21,54,17],[82,23,54,19],[82,29,54,25],[82,33,54,29,"Error"],[82,38,54,34],[82,39,54,35],[82,57,54,53],[82,58,54,54],[83,10,56,6],[83,14,56,6,"_yield$supabase$from$2"],[83,36,56,6],[83,45,56,36,"supabase"],[83,54,56,44],[83,55,56,44,"supabase"],[83,63,56,44],[83,64,57,9,"from"],[83,68,57,13],[83,69,57,14],[83,79,57,24],[83,80,57,25],[83,81,58,9,"select"],[83,87,58,15],[83,88,58,16],[84,0,59,0],[85,0,60,0],[86,0,61,0],[86,9,61,9],[86,10,61,10],[86,11,62,9,"eq"],[86,13,62,11],[86,14,62,12],[86,23,62,21],[86,25,62,23,"chatId"],[86,31,62,29],[86,32,62,30],[86,33,63,9,"order"],[86,38,63,14],[86,39,63,15],[86,51,63,27],[86,53,63,29],[87,14,63,31,"ascending"],[87,23,63,40],[87,25,63,42],[88,12,63,47],[88,13,63,48],[88,14,63,49],[89,12,56,14,"data"],[89,16,56,18],[89,19,56,18,"_yield$supabase$from$2"],[89,41,56,18],[89,42,56,14,"data"],[89,46,56,18],[90,12,56,20,"error"],[90,17,56,25],[90,20,56,25,"_yield$supabase$from$2"],[90,42,56,25],[90,43,56,20,"error"],[90,48,56,25],[91,10,65,6],[91,14,65,10,"error"],[91,19,65,15],[91,21,65,17],[91,27,65,23,"error"],[91,32,65,28],[92,10,66,6],[92,17,66,13,"data"],[92,21,66,17],[93,8,67,4],[93,9,67,5],[94,8,67,5],[94,24,53,4,"queryFn"],[94,31,53,11,"queryFn"],[94,32,53,11],[95,10,53,11],[95,17,53,11,"_ref2"],[95,22,53,11],[95,23,53,11,"apply"],[95,28,53,11],[95,35,53,11,"arguments"],[95,44,53,11],[96,8,53,11],[97,6,53,11],[97,9,67,5],[98,6,68,4,"enabled"],[98,13,68,11],[98,15,68,13],[98,16,68,14],[98,17,68,15,"chatId"],[99,4,69,2],[99,5,69,3],[99,6,69,4],[100,2,70,0],[102,2,72,0],[103,0,73,0],[104,0,74,0],[105,2,72,0,"_s2"],[105,5,72,0],[105,6,50,16,"useChatMessagesQuery"],[105,26,50,36],[106,4,50,36],[106,12,51,9,"useQuery"],[106,31,51,17],[106,32,51,17,"useQuery"],[106,40,51,17],[107,2,51,17],[108,2,75,7],[108,11,75,16,"useSendMessageMutation"],[108,33,75,38,"useSendMessageMutation"],[108,34,75,38],[108,36,75,41],[109,4,75,41,"_s3"],[109,7,75,41],[110,4,76,2],[110,8,76,8,"queryClient"],[110,19,76,19],[110,22,76,22],[110,26,76,22,"useQueryClient"],[110,45,76,36],[110,46,76,36,"useQueryClient"],[110,60,76,36],[110,62,76,37],[110,63,76,38],[111,4,78,2],[111,11,78,9],[111,15,78,9,"useMutation"],[111,34,78,20],[111,35,78,20,"useMutation"],[111,46,78,20],[111,48,78,21],[112,6,79,4,"mutationFn"],[112,16,79,14],[113,8,79,14],[113,12,79,14,"_ref4"],[113,17,79,14],[113,24,79,14,"_asyncToGenerator"],[113,41,79,14],[113,42,79,14,"default"],[113,49,79,14],[113,51,79,16],[113,62,79,16,"_ref3"],[113,67,79,16],[113,69,79,57],[114,10,79,57],[114,14,79,25,"chatId"],[114,20,79,31],[114,23,79,31,"_ref3"],[114,28,79,31],[114,29,79,25,"chatId"],[114,35,79,31],[115,12,79,33,"senderId"],[115,20,79,41],[115,23,79,41,"_ref3"],[115,28,79,41],[115,29,79,33,"senderId"],[115,37,79,41],[116,12,79,43,"content"],[116,19,79,50],[116,22,79,50,"_ref3"],[116,27,79,50],[116,28,79,43,"content"],[116,35,79,50],[117,10,80,6],[117,14,80,6,"_yield$supabase$from$3"],[117,36,80,6],[117,45,80,36,"supabase"],[117,54,80,44],[117,55,80,44,"supabase"],[117,63,80,44],[117,64,81,9,"from"],[117,68,81,13],[117,69,81,14],[117,79,81,24],[117,80,81,25],[117,81,82,9,"insert"],[117,87,82,15],[117,88,82,16],[118,14,83,10,"chat_id"],[118,21,83,17],[118,23,83,19,"chatId"],[118,29,83,25],[119,14,84,10,"sender_id"],[119,23,84,19],[119,25,84,21,"senderId"],[119,33,84,29],[120,14,85,10,"content"],[120,21,85,17],[120,23,85,19,"content"],[120,30,85,26],[120,31,85,27,"trim"],[120,35,85,31],[120,36,85,32],[121,12,86,8],[121,13,86,9],[121,14,86,10],[121,15,87,9,"select"],[121,21,87,15],[121,22,87,16],[121,23,87,17],[121,24,88,9,"single"],[121,30,88,15],[121,31,88,16],[121,32,88,17],[122,12,80,14,"data"],[122,16,80,18],[122,19,80,18,"_yield$supabase$from$3"],[122,41,80,18],[122,42,80,14,"data"],[122,46,80,18],[123,12,80,20,"error"],[123,17,80,25],[123,20,80,25,"_yield$supabase$from$3"],[123,42,80,25],[123,43,80,20,"error"],[123,48,80,25],[124,10,90,6],[124,14,90,10,"error"],[124,19,90,15],[124,21,90,17],[124,27,90,23,"error"],[124,32,90,28],[126,10,92,6],[127,10,93,6],[127,16,93,12,"supabase"],[127,25,93,20],[127,26,93,20,"supabase"],[127,34,93,20],[127,35,94,9,"from"],[127,39,94,13],[127,40,94,14],[127,47,94,21],[127,48,94,22],[127,49,95,9,"update"],[127,55,95,15],[127,56,95,16],[128,12,95,18,"updated_at"],[128,22,95,28],[128,24,95,30],[128,28,95,34,"Date"],[128,32,95,38],[128,33,95,39],[128,34,95,40],[128,35,95,41,"toISOString"],[128,46,95,52],[128,47,95,53],[129,10,95,55],[129,11,95,56],[129,12,95,57],[129,13,96,9,"eq"],[129,15,96,11],[129,16,96,12],[129,20,96,16],[129,22,96,18,"chatId"],[129,28,96,24],[129,29,96,25],[130,10,98,6],[130,17,98,13,"data"],[130,21,98,17],[131,8,99,4],[131,9,99,5],[132,8,99,5],[132,24,79,4,"mutationFn"],[132,34,79,14,"mutationFn"],[132,35,79,14,"_x"],[132,37,79,14],[133,10,79,14],[133,17,79,14,"_ref4"],[133,22,79,14],[133,23,79,14,"apply"],[133,28,79,14],[133,35,79,14,"arguments"],[133,44,79,14],[134,8,79,14],[135,6,79,14],[135,9,99,5],[136,6,100,4,"onSuccess"],[136,15,100,13],[136,17,100,15,"onSuccess"],[136,18,100,16,"data"],[136,22,100,20],[136,24,100,22,"variables"],[136,33,100,31],[136,38,100,36],[137,8,101,6],[138,8,102,6,"queryClient"],[138,19,102,17],[138,20,102,18,"invalidateQueries"],[138,37,102,35],[138,38,102,36],[138,39,102,37],[138,49,102,47],[138,51,102,49,"variables"],[138,60,102,58],[138,61,102,59,"chatId"],[138,67,102,65],[138,68,102,66],[138,69,102,67],[139,8,103,6],[140,8,104,6,"queryClient"],[140,19,104,17],[140,20,104,18,"invalidateQueries"],[140,37,104,35],[140,38,104,36],[140,39,104,37],[140,46,104,44],[140,47,104,45],[140,48,104,46],[141,6,105,4],[142,4,106,2],[142,5,106,3],[142,6,106,4],[143,2,107,0],[145,2,109,0],[146,0,110,0],[147,0,111,0],[148,2,109,0,"_s3"],[148,5,109,0],[148,6,75,16,"useSendMessageMutation"],[148,28,75,38],[149,4,75,38],[149,12,76,22,"useQueryClient"],[149,31,76,36],[149,32,76,36,"useQueryClient"],[149,46,76,36],[149,48,78,9,"useMutation"],[149,67,78,20],[149,68,78,20,"useMutation"],[149,79,78,20],[150,2,78,20],[151,2,112,7],[151,11,112,16,"useCreateChatMutation"],[151,32,112,37,"useCreateChatMutation"],[151,33,112,37],[151,35,112,40],[152,4,112,40,"_s4"],[152,7,112,40],[153,4,113,2],[153,8,113,8,"queryClient"],[153,19,113,19],[153,22,113,22],[153,26,113,22,"useQueryClient"],[153,45,113,36],[153,46,113,36,"useQueryClient"],[153,60,113,36],[153,62,113,37],[153,63,113,38],[154,4,115,2],[154,11,115,9],[154,15,115,9,"useMutation"],[154,34,115,20],[154,35,115,20,"useMutation"],[154,46,115,20],[154,48,115,21],[155,6,116,4,"mutationFn"],[155,16,116,14],[156,8,116,14],[156,12,116,14,"_ref6"],[156,17,116,14],[156,24,116,14,"_asyncToGenerator"],[156,41,116,14],[156,42,116,14,"default"],[156,49,116,14],[156,51,116,16],[156,62,116,16,"_ref5"],[156,67,116,16],[156,69,116,48],[157,10,116,48],[157,14,116,25,"user1Id"],[157,21,116,32],[157,24,116,32,"_ref5"],[157,29,116,32],[157,30,116,25,"user1Id"],[157,37,116,32],[158,12,116,34,"user2Id"],[158,19,116,41],[158,22,116,41,"_ref5"],[158,27,116,41],[158,28,116,34,"user2Id"],[158,35,116,41],[159,10,117,6],[160,10,118,6],[160,14,118,6,"_yield$supabase$from$4"],[160,36,118,6],[160,45,118,43,"supabase"],[160,54,118,51],[160,55,118,51,"supabase"],[160,63,118,51],[160,64,119,9,"from"],[160,68,119,13],[160,69,119,14],[160,76,119,21],[160,77,119,22],[160,78,120,9,"select"],[160,84,120,15],[160,85,120,16],[160,88,120,19],[160,89,120,20],[160,90,121,9,"or"],[160,92,121,11],[160,93,122,10],[160,112,122,29,"user1Id"],[160,119,122,36],[160,135,122,52,"user2Id"],[160,142,122,59],[160,163,122,80,"user2Id"],[160,170,122,87],[160,186,122,103,"user1Id"],[160,193,122,110],[160,196,123,8],[160,197,123,9],[160,198,124,9,"single"],[160,204,124,15],[160,205,124,16],[160,206,124,17],[161,12,118,20,"existingChat"],[161,24,118,32],[161,27,118,32,"_yield$supabase$from$4"],[161,49,118,32],[161,50,118,14,"data"],[161,54,118,18],[162,10,126,6],[162,14,126,10,"existingChat"],[162,26,126,22],[162,28,126,24],[163,12,127,8],[163,19,127,15,"existingChat"],[163,31,127,27],[164,10,128,6],[166,10,130,6],[167,10,131,6],[167,14,131,6,"_yield$supabase$from$5"],[167,36,131,6],[167,45,131,36,"supabase"],[167,54,131,44],[167,55,131,44,"supabase"],[167,63,131,44],[167,64,132,9,"from"],[167,68,132,13],[167,69,132,14],[167,76,132,21],[167,77,132,22],[167,78,133,9,"insert"],[167,84,133,15],[167,85,133,16],[168,14,134,10,"user1_id"],[168,22,134,18],[168,24,134,20,"user1Id"],[168,31,134,27],[169,14,135,10,"user2_id"],[169,22,135,18],[169,24,135,20,"user2Id"],[170,12,136,8],[170,13,136,9],[170,14,136,10],[170,15,137,9,"select"],[170,21,137,15],[170,22,137,16],[170,23,137,17],[170,24,138,9,"single"],[170,30,138,15],[170,31,138,16],[170,32,138,17],[171,12,131,14,"data"],[171,16,131,18],[171,19,131,18,"_yield$supabase$from$5"],[171,41,131,18],[171,42,131,14,"data"],[171,46,131,18],[172,12,131,20,"error"],[172,17,131,25],[172,20,131,25,"_yield$supabase$from$5"],[172,42,131,25],[172,43,131,20,"error"],[172,48,131,25],[173,10,140,6],[173,14,140,10,"error"],[173,19,140,15],[173,21,140,17],[173,27,140,23,"error"],[173,32,140,28],[174,10,141,6],[174,17,141,13,"data"],[174,21,141,17],[175,8,142,4],[175,9,142,5],[176,8,142,5],[176,24,116,4,"mutationFn"],[176,34,116,14,"mutationFn"],[176,35,116,14,"_x2"],[176,38,116,14],[177,10,116,14],[177,17,116,14,"_ref6"],[177,22,116,14],[177,23,116,14,"apply"],[177,28,116,14],[177,35,116,14,"arguments"],[177,44,116,14],[178,8,116,14],[179,6,116,14],[179,9,142,5],[180,6,143,4,"onSuccess"],[180,15,143,13],[180,17,143,15,"onSuccess"],[180,18,143,15],[180,23,143,21],[181,8,144,6,"queryClient"],[181,19,144,17],[181,20,144,18,"invalidateQueries"],[181,37,144,35],[181,38,144,36],[181,39,144,37],[181,46,144,44],[181,47,144,45],[181,48,144,46],[182,6,145,4],[183,4,146,2],[183,5,146,3],[183,6,146,4],[184,2,147,0],[186,2,149,0],[187,0,150,0],[188,0,151,0],[189,2,149,0,"_s4"],[189,5,149,0],[189,6,112,16,"useCreateChatMutation"],[189,27,112,37],[190,4,112,37],[190,12,113,22,"useQueryClient"],[190,31,113,36],[190,32,113,36,"useQueryClient"],[190,46,113,36],[190,48,115,9,"useMutation"],[190,67,115,20],[190,68,115,20,"useMutation"],[190,79,115,20],[191,2,115,20],[192,2,152,7],[192,11,152,16,"useMarkMessagesReadMutation"],[192,38,152,43,"useMarkMessagesReadMutation"],[192,39,152,43],[192,41,152,46],[193,4,152,46,"_s5"],[193,7,152,46],[194,4,153,2],[194,8,153,8,"queryClient"],[194,19,153,19],[194,22,153,22],[194,26,153,22,"useQueryClient"],[194,45,153,36],[194,46,153,36,"useQueryClient"],[194,60,153,36],[194,62,153,37],[194,63,153,38],[195,4,155,2],[195,11,155,9],[195,15,155,9,"useMutation"],[195,34,155,20],[195,35,155,20,"useMutation"],[195,46,155,20],[195,48,155,21],[196,6,156,4,"mutationFn"],[196,16,156,14],[197,8,156,14],[197,12,156,14,"_ref8"],[197,17,156,14],[197,24,156,14,"_asyncToGenerator"],[197,41,156,14],[197,42,156,14,"default"],[197,49,156,14],[197,51,156,16],[197,62,156,16,"_ref7"],[197,67,156,16],[197,69,156,46],[198,10,156,46],[198,14,156,25,"chatId"],[198,20,156,31],[198,23,156,31,"_ref7"],[198,28,156,31],[198,29,156,25,"chatId"],[198,35,156,31],[199,12,156,33,"userId"],[199,18,156,39],[199,21,156,39,"_ref7"],[199,26,156,39],[199,27,156,33,"userId"],[199,33,156,39],[200,10,157,6],[200,14,157,6,"_yield$supabase$from$6"],[200,36,157,6],[200,45,157,30,"supabase"],[200,54,157,38],[200,55,157,38,"supabase"],[200,63,157,38],[200,64,158,9,"from"],[200,68,158,13],[200,69,158,14],[200,79,158,24],[200,80,158,25],[200,81,159,9,"update"],[200,87,159,15],[200,88,159,16],[201,14,159,18,"is_read"],[201,21,159,25],[201,23,159,27],[202,12,159,32],[202,13,159,33],[202,14,159,34],[202,15,160,9,"eq"],[202,17,160,11],[202,18,160,12],[202,27,160,21],[202,29,160,23,"chatId"],[202,35,160,29],[202,36,160,30],[202,37,161,9,"neq"],[202,40,161,12],[202,41,161,13],[202,52,161,24],[202,54,161,26,"userId"],[202,60,161,32],[202,61,161,33],[202,62,162,9,"eq"],[202,64,162,11],[202,65,162,12],[202,74,162,21],[202,76,162,23],[202,81,162,28],[202,82,162,29],[203,12,157,14,"error"],[203,17,157,19],[203,20,157,19,"_yield$supabase$from$6"],[203,42,157,19],[203,43,157,14,"error"],[203,48,157,19],[204,10,164,6],[204,14,164,10,"error"],[204,19,164,15],[204,21,164,17],[204,27,164,23,"error"],[204,32,164,28],[205,8,165,4],[205,9,165,5],[206,8,165,5],[206,24,156,4,"mutationFn"],[206,34,156,14,"mutationFn"],[206,35,156,14,"_x3"],[206,38,156,14],[207,10,156,14],[207,17,156,14,"_ref8"],[207,22,156,14],[207,23,156,14,"apply"],[207,28,156,14],[207,35,156,14,"arguments"],[207,44,156,14],[208,8,156,14],[209,6,156,14],[209,9,165,5],[210,6,166,4,"onSuccess"],[210,15,166,13],[210,17,166,15,"onSuccess"],[210,18,166,16,"_"],[210,19,166,17],[210,21,166,19,"variables"],[210,30,166,28],[210,35,166,33],[211,8,167,6,"queryClient"],[211,19,167,17],[211,20,167,18,"invalidateQueries"],[211,37,167,35],[211,38,167,36],[211,39,167,37],[211,49,167,47],[211,51,167,49,"variables"],[211,60,167,58],[211,61,167,59,"chatId"],[211,67,167,65],[211,68,167,66],[211,69,167,67],[212,8,168,6,"queryClient"],[212,19,168,17],[212,20,168,18,"invalidateQueries"],[212,37,168,35],[212,38,168,36],[212,39,168,37],[212,46,168,44],[212,47,168,45],[212,48,168,46],[213,6,169,4],[214,4,170,2],[214,5,170,3],[214,6,170,4],[215,2,171,0],[216,2,171,1,"_s5"],[216,5,171,1],[216,6,152,16,"useMarkMessagesReadMutation"],[216,33,152,43],[217,4,152,43],[217,12,153,22,"useQueryClient"],[217,31,153,36],[217,32,153,36,"useQueryClient"],[217,46,153,36],[217,48,155,9,"useMutation"],[217,67,155,20],[217,68,155,20,"useMutation"],[217,79,155,20],[218,2,155,20],[219,0,155,20],[219,3]],"functionMap":{"names":["<global>","useChatsQuery","useQuery$argument_0.queryFn","data.map$argument_0","messages.filter$argument_0","useChatMessagesQuery","useSendMessageMutation","useMutation$argument_0.mutationFn","useMutation$argument_0.onSuccess","useCreateChatMutation","useMarkMessagesReadMutation"],"mappings":"AAA;OCM;aCG;sBCiB;UCK,iDD;ODS;KDC;CDG;OKK;aHG;KGc;CLG;OMK;gBCI;KDoB;eEC;KFK;CNE;OSK;gBFI;KE0B;eDC;KCE;CTE;OUK;gBHI;KGS;eFC;KEG;CVE"},"hasCjsExports":false},"type":"js/module"}]}