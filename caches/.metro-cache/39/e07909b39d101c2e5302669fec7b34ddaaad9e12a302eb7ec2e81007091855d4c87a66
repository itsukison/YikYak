{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@tanstack/react-query","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":78,"index":78}}],"key":"Pzwu/0TIyhnZOrC9PAkpZx92hFo=","exportNames":["*"],"imports":1}},{"name":"../supabase","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":79},"end":{"line":2,"column":39,"index":118}}],"key":"zx/dTdJp0d3TJEOaa003L7FI5PE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.useCommentsQuery = useCommentsQuery;\n  exports.useCommentVotesQuery = useCommentVotesQuery;\n  exports.useCreateCommentMutation = useCreateCommentMutation;\n  exports.useVoteCommentMutation = useVoteCommentMutation;\n  exports.useDeleteCommentMutation = useDeleteCommentMutation;\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _tanstackReactQuery = require(_dependencyMap[1], \"@tanstack/react-query\");\n  var _supabase = require(_dependencyMap[2], \"../supabase\");\n  /**\n   * Fetch comments for a specific post\n   */\n  function useCommentsQuery(postId) {\n    _s();\n    return (0, _tanstackReactQuery.useQuery)({\n      queryKey: [\"comments\", postId],\n      queryFn: function () {\n        var _ref = (0, _asyncToGenerator.default)(function* () {\n          if (!postId) throw new Error(\"Post ID required\");\n          var _yield$supabase$from$ = yield _supabase.supabase.from(\"comments\").select(`\n          *,\n          author:users!comments_user_id_fkey(id, nickname, is_anonymous)\n        `).eq(\"post_id\", postId).order(\"created_at\", {\n              ascending: true\n            }),\n            data = _yield$supabase$from$.data,\n            error = _yield$supabase$from$.error;\n          if (error) throw error;\n\n          // Transform to include display name\n          return data.map(comment => ({\n            ...comment,\n            author_nickname: comment.author.is_anonymous ? \"Anonymous\" : comment.author.nickname || \"User\"\n          }));\n        });\n        return function queryFn() {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      enabled: !!postId\n    });\n  }\n\n  /**\n   * Fetch user's votes on comments for a post\n   */\n  _s(useCommentsQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n    return [_tanstackReactQuery.useQuery];\n  });\n  function useCommentVotesQuery(postId, userId) {\n    _s2();\n    return (0, _tanstackReactQuery.useQuery)({\n      queryKey: [\"comment-votes\", postId, userId],\n      queryFn: function () {\n        var _ref2 = (0, _asyncToGenerator.default)(function* () {\n          if (!postId || !userId) return {};\n          var _yield$supabase$from$2 = yield _supabase.supabase.from(\"votes_comments\").select(\"comment_id, vote_type\").eq(\"user_id\", userId).in(\"comment_id\",\n            // Get all comment IDs for this post first\n            (yield _supabase.supabase.from(\"comments\").select(\"id\").eq(\"post_id\", postId)).data?.map(c => c.id) || []),\n            data = _yield$supabase$from$2.data,\n            error = _yield$supabase$from$2.error;\n          if (error) throw error;\n\n          // Convert to map for easy lookup\n          return data.reduce((acc, vote) => {\n            acc[vote.comment_id] = vote.vote_type;\n            return acc;\n          }, {});\n        });\n        return function queryFn() {\n          return _ref2.apply(this, arguments);\n        };\n      }(),\n      enabled: !!postId && !!userId\n    });\n  }\n\n  /**\n   * Create a new comment\n   */\n  _s2(useCommentVotesQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n    return [_tanstackReactQuery.useQuery];\n  });\n  function useCreateCommentMutation() {\n    _s3();\n    var queryClient = (0, _tanstackReactQuery.useQueryClient)();\n    return (0, _tanstackReactQuery.useMutation)({\n      mutationFn: function () {\n        var _ref4 = (0, _asyncToGenerator.default)(function* (_ref3) {\n          var postId = _ref3.postId,\n            userId = _ref3.userId,\n            content = _ref3.content;\n          var _yield$supabase$from$3 = yield _supabase.supabase.from(\"comments\").insert({\n              post_id: postId,\n              user_id: userId,\n              content: content.trim()\n            }).select(`\n          *,\n          author:users!comments_user_id_fkey(id, nickname, is_anonymous)\n        `).single(),\n            data = _yield$supabase$from$3.data,\n            error = _yield$supabase$from$3.error;\n          if (error) throw error;\n\n          // Transform to include display name\n          return {\n            ...data,\n            author_nickname: data.author.is_anonymous ? \"Anonymous\" : data.author.nickname || \"User\"\n          };\n        });\n        return function mutationFn(_x) {\n          return _ref4.apply(this, arguments);\n        };\n      }(),\n      onSuccess: (data, variables) => {\n        // Invalidate comments query to refetch\n        queryClient.invalidateQueries([\"comments\", variables.postId]);\n        // Invalidate posts query to update comment count\n        queryClient.invalidateQueries([\"posts\"]);\n      }\n    });\n  }\n\n  /**\n   * Vote on a comment (upvote/downvote)\n   */\n  _s3(useCreateCommentMutation, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n    return [_tanstackReactQuery.useQueryClient, _tanstackReactQuery.useMutation];\n  });\n  function useVoteCommentMutation() {\n    _s4();\n    var queryClient = (0, _tanstackReactQuery.useQueryClient)();\n    return (0, _tanstackReactQuery.useMutation)({\n      mutationFn: function () {\n        var _ref6 = (0, _asyncToGenerator.default)(function* (_ref5) {\n          var userId = _ref5.userId,\n            commentId = _ref5.commentId,\n            voteType = _ref5.voteType,\n            postId = _ref5.postId;\n          // If voteType is 0 or null, delete the vote\n          if (voteType === 0 || voteType === null) {\n            var _yield$supabase$from$4 = yield _supabase.supabase.from(\"votes_comments\").delete().eq(\"user_id\", userId).eq(\"comment_id\", commentId),\n              _error = _yield$supabase$from$4.error;\n            if (_error) throw _error;\n\n            // Recalculate comment score after deletion\n            var _yield$supabase$from$5 = yield _supabase.supabase.from(\"votes_comments\").select(\"vote_type\").eq(\"comment_id\", commentId),\n              _votes = _yield$supabase$from$5.data;\n            var _newScore = _votes?.reduce((sum, vote) => sum + vote.vote_type, 0) || 0;\n            yield _supabase.supabase.from(\"comments\").update({\n              score: _newScore\n            }).eq(\"id\", commentId);\n            return null;\n          }\n\n          // Otherwise, upsert the vote\n          var _yield$supabase$from$6 = yield _supabase.supabase.from(\"votes_comments\").upsert({\n              user_id: userId,\n              comment_id: commentId,\n              vote_type: voteType\n            }, {\n              onConflict: \"user_id,comment_id\"\n            }),\n            error = _yield$supabase$from$6.error;\n          if (error) throw error;\n\n          // Recalculate comment score after upsert\n          var _yield$supabase$from$7 = yield _supabase.supabase.from(\"votes_comments\").select(\"vote_type\").eq(\"comment_id\", commentId),\n            votes = _yield$supabase$from$7.data;\n          var newScore = votes?.reduce((sum, vote) => sum + vote.vote_type, 0) || 0;\n          yield _supabase.supabase.from(\"comments\").update({\n            score: newScore\n          }).eq(\"id\", commentId);\n          return voteType;\n        });\n        return function mutationFn(_x2) {\n          return _ref6.apply(this, arguments);\n        };\n      }(),\n      onSuccess: (_, variables) => {\n        queryClient.invalidateQueries([\"comments\", variables.postId]);\n        queryClient.invalidateQueries([\"comment-votes\", variables.postId]);\n      }\n    });\n  }\n\n  /**\n   * Delete a comment\n   */\n  _s4(useVoteCommentMutation, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n    return [_tanstackReactQuery.useQueryClient, _tanstackReactQuery.useMutation];\n  });\n  function useDeleteCommentMutation() {\n    _s5();\n    var queryClient = (0, _tanstackReactQuery.useQueryClient)();\n    return (0, _tanstackReactQuery.useMutation)({\n      mutationFn: function () {\n        var _ref8 = (0, _asyncToGenerator.default)(function* (_ref7) {\n          var commentId = _ref7.commentId,\n            postId = _ref7.postId;\n          var _yield$supabase$from$8 = yield _supabase.supabase.from(\"comments\").delete().eq(\"id\", commentId),\n            error = _yield$supabase$from$8.error;\n          if (error) throw error;\n        });\n        return function mutationFn(_x3) {\n          return _ref8.apply(this, arguments);\n        };\n      }(),\n      onSuccess: (_, variables) => {\n        queryClient.invalidateQueries([\"comments\", variables.postId]);\n        queryClient.invalidateQueries([\"posts\"]);\n      }\n    });\n  }\n  _s5(useDeleteCommentMutation, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n    return [_tanstackReactQuery.useQueryClient, _tanstackReactQuery.useMutation];\n  });\n});","lineCount":234,"map":[[17,2,7,0,"exports"],[17,9,7,0],[17,10,7,0,"useCommentsQuery"],[17,26,7,0],[17,29,7,0,"useCommentsQuery"],[17,45,7,0],[18,2,41,0,"exports"],[18,9,41,0],[18,10,41,0,"useCommentVotesQuery"],[18,30,41,0],[18,33,41,0,"useCommentVotesQuery"],[18,53,41,0],[19,2,74,0,"exports"],[19,9,74,0],[19,10,74,0,"useCreateCommentMutation"],[19,34,74,0],[19,37,74,0,"useCreateCommentMutation"],[19,61,74,0],[20,2,116,0,"exports"],[20,9,116,0],[20,10,116,0,"useVoteCommentMutation"],[20,32,116,0],[20,35,116,0,"useVoteCommentMutation"],[20,57,116,0],[21,2,188,0,"exports"],[21,9,188,0],[21,10,188,0,"useDeleteCommentMutation"],[21,34,188,0],[21,37,188,0,"useDeleteCommentMutation"],[21,61,188,0],[22,2,205,1],[22,6,205,1,"_babelRuntimeHelpersAsyncToGenerator"],[22,42,205,1],[22,45,205,1,"require"],[22,52,205,1],[22,53,205,1,"_dependencyMap"],[22,67,205,1],[23,2,205,1],[23,6,205,1,"_asyncToGenerator"],[23,23,205,1],[23,26,205,1,"_interopDefault"],[23,41,205,1],[23,42,205,1,"_babelRuntimeHelpersAsyncToGenerator"],[23,78,205,1],[24,2,1,0],[24,6,1,0,"_tanstackReactQuery"],[24,25,1,0],[24,28,1,0,"require"],[24,35,1,0],[24,36,1,0,"_dependencyMap"],[24,50,1,0],[25,2,2,0],[25,6,2,0,"_supabase"],[25,15,2,0],[25,18,2,0,"require"],[25,25,2,0],[25,26,2,0,"_dependencyMap"],[25,40,2,0],[26,2,4,0],[27,0,5,0],[28,0,6,0],[29,2,7,7],[29,11,7,16,"useCommentsQuery"],[29,27,7,32,"useCommentsQuery"],[29,28,7,33,"postId"],[29,34,7,39],[29,36,7,41],[30,4,7,41,"_s"],[30,6,7,41],[31,4,8,2],[31,11,8,9],[31,15,8,9,"useQuery"],[31,34,8,17],[31,35,8,17,"useQuery"],[31,43,8,17],[31,45,8,18],[32,6,9,4,"queryKey"],[32,14,9,12],[32,16,9,14],[32,17,9,15],[32,27,9,25],[32,29,9,27,"postId"],[32,35,9,33],[32,36,9,34],[33,6,10,4,"queryFn"],[33,13,10,11],[34,8,10,11],[34,12,10,11,"_ref"],[34,16,10,11],[34,23,10,11,"_asyncToGenerator"],[34,40,10,11],[34,41,10,11,"default"],[34,48,10,11],[34,50,10,13],[34,63,10,25],[35,10,11,6],[35,14,11,10],[35,15,11,11,"postId"],[35,21,11,17],[35,23,11,19],[35,29,11,25],[35,33,11,29,"Error"],[35,38,11,34],[35,39,11,35],[35,57,11,53],[35,58,11,54],[36,10,13,6],[36,14,13,6,"_yield$supabase$from$"],[36,35,13,6],[36,44,13,36,"supabase"],[36,53,13,44],[36,54,13,44,"supabase"],[36,62,13,44],[36,63,14,9,"from"],[36,67,14,13],[36,68,14,14],[36,78,14,24],[36,79,14,25],[36,80,15,9,"select"],[36,86,15,15],[36,87,16,10],[37,0,17,0],[38,0,18,0],[39,0,19,0],[39,9,20,8],[39,10,20,9],[39,11,21,9,"eq"],[39,13,21,11],[39,14,21,12],[39,23,21,21],[39,25,21,23,"postId"],[39,31,21,29],[39,32,21,30],[39,33,22,9,"order"],[39,38,22,14],[39,39,22,15],[39,51,22,27],[39,53,22,29],[40,14,22,31,"ascending"],[40,23,22,40],[40,25,22,42],[41,12,22,47],[41,13,22,48],[41,14,22,49],[42,12,13,14,"data"],[42,16,13,18],[42,19,13,18,"_yield$supabase$from$"],[42,40,13,18],[42,41,13,14,"data"],[42,45,13,18],[43,12,13,20,"error"],[43,17,13,25],[43,20,13,25,"_yield$supabase$from$"],[43,41,13,25],[43,42,13,20,"error"],[43,47,13,25],[44,10,24,6],[44,14,24,10,"error"],[44,19,24,15],[44,21,24,17],[44,27,24,23,"error"],[44,32,24,28],[46,10,26,6],[47,10,27,6],[47,17,27,13,"data"],[47,21,27,17],[47,22,27,18,"map"],[47,25,27,21],[47,26,27,23,"comment"],[47,33,27,30],[47,38,27,36],[48,12,28,8],[48,15,28,11,"comment"],[48,22,28,18],[49,12,29,8,"author_nickname"],[49,27,29,23],[49,29,29,25,"comment"],[49,36,29,32],[49,37,29,33,"author"],[49,43,29,39],[49,44,29,40,"is_anonymous"],[49,56,29,52],[49,59,30,12],[49,70,30,23],[49,73,31,12,"comment"],[49,80,31,19],[49,81,31,20,"author"],[49,87,31,26],[49,88,31,27,"nickname"],[49,96,31,35],[49,100,31,39],[50,10,32,6],[50,11,32,7],[50,12,32,8],[50,13,32,9],[51,8,33,4],[51,9,33,5],[52,8,33,5],[52,24,10,4,"queryFn"],[52,31,10,11,"queryFn"],[52,32,10,11],[53,10,10,11],[53,17,10,11,"_ref"],[53,21,10,11],[53,22,10,11,"apply"],[53,27,10,11],[53,34,10,11,"arguments"],[53,43,10,11],[54,8,10,11],[55,6,10,11],[55,9,33,5],[56,6,34,4,"enabled"],[56,13,34,11],[56,15,34,13],[56,16,34,14],[56,17,34,15,"postId"],[57,4,35,2],[57,5,35,3],[57,6,35,4],[58,2,36,0],[60,2,38,0],[61,0,39,0],[62,0,40,0],[63,2,38,0,"_s"],[63,4,38,0],[63,5,7,16,"useCommentsQuery"],[63,21,7,32],[64,4,7,32],[64,12,8,9,"useQuery"],[64,31,8,17],[64,32,8,17,"useQuery"],[64,40,8,17],[65,2,8,17],[66,2,41,7],[66,11,41,16,"useCommentVotesQuery"],[66,31,41,36,"useCommentVotesQuery"],[66,32,41,37,"postId"],[66,38,41,43],[66,40,41,45,"userId"],[66,46,41,51],[66,48,41,53],[67,4,41,53,"_s2"],[67,7,41,53],[68,4,42,2],[68,11,42,9],[68,15,42,9,"useQuery"],[68,34,42,17],[68,35,42,17,"useQuery"],[68,43,42,17],[68,45,42,18],[69,6,43,4,"queryKey"],[69,14,43,12],[69,16,43,14],[69,17,43,15],[69,32,43,30],[69,34,43,32,"postId"],[69,40,43,38],[69,42,43,40,"userId"],[69,48,43,46],[69,49,43,47],[70,6,44,4,"queryFn"],[70,13,44,11],[71,8,44,11],[71,12,44,11,"_ref2"],[71,17,44,11],[71,24,44,11,"_asyncToGenerator"],[71,41,44,11],[71,42,44,11,"default"],[71,49,44,11],[71,51,44,13],[71,64,44,25],[72,10,45,6],[72,14,45,10],[72,15,45,11,"postId"],[72,21,45,17],[72,25,45,21],[72,26,45,22,"userId"],[72,32,45,28],[72,34,45,30],[72,41,45,37],[72,42,45,38],[72,43,45,39],[73,10,47,6],[73,14,47,6,"_yield$supabase$from$2"],[73,36,47,6],[73,45,47,36,"supabase"],[73,54,47,44],[73,55,47,44,"supabase"],[73,63,47,44],[73,64,48,9,"from"],[73,68,48,13],[73,69,48,14],[73,85,48,30],[73,86,48,31],[73,87,49,9,"select"],[73,93,49,15],[73,94,49,16],[73,117,49,39],[73,118,49,40],[73,119,50,9,"eq"],[73,121,50,11],[73,122,50,12],[73,131,50,21],[73,133,50,23,"userId"],[73,139,50,29],[73,140,50,30],[73,141,51,9,"in"],[73,143,51,11],[73,144,52,10],[73,156,52,22],[74,12,53,10],[75,12,54,10],[75,19,55,18,"supabase"],[75,28,55,26],[75,29,55,26,"supabase"],[75,37,55,26],[75,38,55,27,"from"],[75,42,55,31],[75,43,55,32],[75,53,55,42],[75,54,55,43],[75,55,55,44,"select"],[75,61,55,50],[75,62,55,51],[75,66,55,55],[75,67,55,56],[75,68,55,57,"eq"],[75,70,55,59],[75,71,55,60],[75,80,55,69],[75,82,55,71,"postId"],[75,88,55,77],[75,89,55,78],[75,91,56,12,"data"],[75,95,56,16],[75,97,56,18,"map"],[75,100,56,21],[75,101,56,23,"c"],[75,102,56,24],[75,106,56,29,"c"],[75,107,56,30],[75,108,56,31,"id"],[75,110,56,33],[75,111,56,34],[75,115,56,38],[75,117,57,8],[75,118,57,9],[76,12,47,14,"data"],[76,16,47,18],[76,19,47,18,"_yield$supabase$from$2"],[76,41,47,18],[76,42,47,14,"data"],[76,46,47,18],[77,12,47,20,"error"],[77,17,47,25],[77,20,47,25,"_yield$supabase$from$2"],[77,42,47,25],[77,43,47,20,"error"],[77,48,47,25],[78,10,59,6],[78,14,59,10,"error"],[78,19,59,15],[78,21,59,17],[78,27,59,23,"error"],[78,32,59,28],[80,10,61,6],[81,10,62,6],[81,17,62,13,"data"],[81,21,62,17],[81,22,62,18,"reduce"],[81,28,62,24],[81,29,62,25],[81,30,62,26,"acc"],[81,33,62,29],[81,35,62,31,"vote"],[81,39,62,35],[81,44,62,40],[82,12,63,8,"acc"],[82,15,63,11],[82,16,63,12,"vote"],[82,20,63,16],[82,21,63,17,"comment_id"],[82,31,63,27],[82,32,63,28],[82,35,63,31,"vote"],[82,39,63,35],[82,40,63,36,"vote_type"],[82,49,63,45],[83,12,64,8],[83,19,64,15,"acc"],[83,22,64,18],[84,10,65,6],[84,11,65,7],[84,13,65,9],[84,14,65,10],[84,15,65,11],[84,16,65,12],[85,8,66,4],[85,9,66,5],[86,8,66,5],[86,24,44,4,"queryFn"],[86,31,44,11,"queryFn"],[86,32,44,11],[87,10,44,11],[87,17,44,11,"_ref2"],[87,22,44,11],[87,23,44,11,"apply"],[87,28,44,11],[87,35,44,11,"arguments"],[87,44,44,11],[88,8,44,11],[89,6,44,11],[89,9,66,5],[90,6,67,4,"enabled"],[90,13,67,11],[90,15,67,13],[90,16,67,14],[90,17,67,15,"postId"],[90,23,67,21],[90,27,67,25],[90,28,67,26],[90,29,67,27,"userId"],[91,4,68,2],[91,5,68,3],[91,6,68,4],[92,2,69,0],[94,2,71,0],[95,0,72,0],[96,0,73,0],[97,2,71,0,"_s2"],[97,5,71,0],[97,6,41,16,"useCommentVotesQuery"],[97,26,41,36],[98,4,41,36],[98,12,42,9,"useQuery"],[98,31,42,17],[98,32,42,17,"useQuery"],[98,40,42,17],[99,2,42,17],[100,2,74,7],[100,11,74,16,"useCreateCommentMutation"],[100,35,74,40,"useCreateCommentMutation"],[100,36,74,40],[100,38,74,43],[101,4,74,43,"_s3"],[101,7,74,43],[102,4,75,2],[102,8,75,8,"queryClient"],[102,19,75,19],[102,22,75,22],[102,26,75,22,"useQueryClient"],[102,45,75,36],[102,46,75,36,"useQueryClient"],[102,60,75,36],[102,62,75,37],[102,63,75,38],[103,4,77,2],[103,11,77,9],[103,15,77,9,"useMutation"],[103,34,77,20],[103,35,77,20,"useMutation"],[103,46,77,20],[103,48,77,21],[104,6,78,4,"mutationFn"],[104,16,78,14],[105,8,78,14],[105,12,78,14,"_ref4"],[105,17,78,14],[105,24,78,14,"_asyncToGenerator"],[105,41,78,14],[105,42,78,14,"default"],[105,49,78,14],[105,51,78,16],[105,62,78,16,"_ref3"],[105,67,78,16],[105,69,78,55],[106,10,78,55],[106,14,78,25,"postId"],[106,20,78,31],[106,23,78,31,"_ref3"],[106,28,78,31],[106,29,78,25,"postId"],[106,35,78,31],[107,12,78,33,"userId"],[107,18,78,39],[107,21,78,39,"_ref3"],[107,26,78,39],[107,27,78,33,"userId"],[107,33,78,39],[108,12,78,41,"content"],[108,19,78,48],[108,22,78,48,"_ref3"],[108,27,78,48],[108,28,78,41,"content"],[108,35,78,48],[109,10,79,6],[109,14,79,6,"_yield$supabase$from$3"],[109,36,79,6],[109,45,79,36,"supabase"],[109,54,79,44],[109,55,79,44,"supabase"],[109,63,79,44],[109,64,80,9,"from"],[109,68,80,13],[109,69,80,14],[109,79,80,24],[109,80,80,25],[109,81,81,9,"insert"],[109,87,81,15],[109,88,81,16],[110,14,82,10,"post_id"],[110,21,82,17],[110,23,82,19,"postId"],[110,29,82,25],[111,14,83,10,"user_id"],[111,21,83,17],[111,23,83,19,"userId"],[111,29,83,25],[112,14,84,10,"content"],[112,21,84,17],[112,23,84,19,"content"],[112,30,84,26],[112,31,84,27,"trim"],[112,35,84,31],[112,36,84,32],[113,12,85,8],[113,13,85,9],[113,14,85,10],[113,15,86,9,"select"],[113,21,86,15],[113,22,87,10],[114,0,88,0],[115,0,89,0],[116,0,90,0],[116,9,91,8],[116,10,91,9],[116,11,92,9,"single"],[116,17,92,15],[116,18,92,16],[116,19,92,17],[117,12,79,14,"data"],[117,16,79,18],[117,19,79,18,"_yield$supabase$from$3"],[117,41,79,18],[117,42,79,14,"data"],[117,46,79,18],[118,12,79,20,"error"],[118,17,79,25],[118,20,79,25,"_yield$supabase$from$3"],[118,42,79,25],[118,43,79,20,"error"],[118,48,79,25],[119,10,94,6],[119,14,94,10,"error"],[119,19,94,15],[119,21,94,17],[119,27,94,23,"error"],[119,32,94,28],[121,10,96,6],[122,10,97,6],[122,17,97,13],[123,12,98,8],[123,15,98,11,"data"],[123,19,98,15],[124,12,99,8,"author_nickname"],[124,27,99,23],[124,29,99,25,"data"],[124,33,99,29],[124,34,99,30,"author"],[124,40,99,36],[124,41,99,37,"is_anonymous"],[124,53,99,49],[124,56,100,12],[124,67,100,23],[124,70,101,12,"data"],[124,74,101,16],[124,75,101,17,"author"],[124,81,101,23],[124,82,101,24,"nickname"],[124,90,101,32],[124,94,101,36],[125,10,102,6],[125,11,102,7],[126,8,103,4],[126,9,103,5],[127,8,103,5],[127,24,78,4,"mutationFn"],[127,34,78,14,"mutationFn"],[127,35,78,14,"_x"],[127,37,78,14],[128,10,78,14],[128,17,78,14,"_ref4"],[128,22,78,14],[128,23,78,14,"apply"],[128,28,78,14],[128,35,78,14,"arguments"],[128,44,78,14],[129,8,78,14],[130,6,78,14],[130,9,103,5],[131,6,104,4,"onSuccess"],[131,15,104,13],[131,17,104,15,"onSuccess"],[131,18,104,16,"data"],[131,22,104,20],[131,24,104,22,"variables"],[131,33,104,31],[131,38,104,36],[132,8,105,6],[133,8,106,6,"queryClient"],[133,19,106,17],[133,20,106,18,"invalidateQueries"],[133,37,106,35],[133,38,106,36],[133,39,106,37],[133,49,106,47],[133,51,106,49,"variables"],[133,60,106,58],[133,61,106,59,"postId"],[133,67,106,65],[133,68,106,66],[133,69,106,67],[134,8,107,6],[135,8,108,6,"queryClient"],[135,19,108,17],[135,20,108,18,"invalidateQueries"],[135,37,108,35],[135,38,108,36],[135,39,108,37],[135,46,108,44],[135,47,108,45],[135,48,108,46],[136,6,109,4],[137,4,110,2],[137,5,110,3],[137,6,110,4],[138,2,111,0],[140,2,113,0],[141,0,114,0],[142,0,115,0],[143,2,113,0,"_s3"],[143,5,113,0],[143,6,74,16,"useCreateCommentMutation"],[143,30,74,40],[144,4,74,40],[144,12,75,22,"useQueryClient"],[144,31,75,36],[144,32,75,36,"useQueryClient"],[144,46,75,36],[144,48,77,9,"useMutation"],[144,67,77,20],[144,68,77,20,"useMutation"],[144,79,77,20],[145,2,77,20],[146,2,116,7],[146,11,116,16,"useVoteCommentMutation"],[146,33,116,38,"useVoteCommentMutation"],[146,34,116,38],[146,36,116,41],[147,4,116,41,"_s4"],[147,7,116,41],[148,4,117,2],[148,8,117,8,"queryClient"],[148,19,117,19],[148,22,117,22],[148,26,117,22,"useQueryClient"],[148,45,117,36],[148,46,117,36,"useQueryClient"],[148,60,117,36],[148,62,117,37],[148,63,117,38],[149,4,119,2],[149,11,119,9],[149,15,119,9,"useMutation"],[149,34,119,20],[149,35,119,20,"useMutation"],[149,46,119,20],[149,48,119,21],[150,6,120,4,"mutationFn"],[150,16,120,14],[151,8,120,14],[151,12,120,14,"_ref6"],[151,17,120,14],[151,24,120,14,"_asyncToGenerator"],[151,41,120,14],[151,42,120,14,"default"],[151,49,120,14],[151,51,120,16],[151,62,120,16,"_ref5"],[151,67,120,16],[151,69,120,67],[152,10,120,67],[152,14,120,25,"userId"],[152,20,120,31],[152,23,120,31,"_ref5"],[152,28,120,31],[152,29,120,25,"userId"],[152,35,120,31],[153,12,120,33,"commentId"],[153,21,120,42],[153,24,120,42,"_ref5"],[153,29,120,42],[153,30,120,33,"commentId"],[153,39,120,42],[154,12,120,44,"voteType"],[154,20,120,52],[154,23,120,52,"_ref5"],[154,28,120,52],[154,29,120,44,"voteType"],[154,37,120,52],[155,12,120,54,"postId"],[155,18,120,60],[155,21,120,60,"_ref5"],[155,26,120,60],[155,27,120,54,"postId"],[155,33,120,60],[156,10,121,6],[157,10,122,6],[157,14,122,10,"voteType"],[157,22,122,18],[157,27,122,23],[157,28,122,24],[157,32,122,28,"voteType"],[157,40,122,36],[157,45,122,41],[157,49,122,45],[157,51,122,47],[158,12,123,8],[158,16,123,8,"_yield$supabase$from$4"],[158,38,123,8],[158,47,123,32,"supabase"],[158,56,123,40],[158,57,123,40,"supabase"],[158,65,123,40],[158,66,124,11,"from"],[158,70,124,15],[158,71,124,16],[158,87,124,32],[158,88,124,33],[158,89,125,11,"delete"],[158,95,125,17],[158,96,125,18],[158,97,125,19],[158,98,126,11,"eq"],[158,100,126,13],[158,101,126,14],[158,110,126,23],[158,112,126,25,"userId"],[158,118,126,31],[158,119,126,32],[158,120,127,11,"eq"],[158,122,127,13],[158,123,127,14],[158,135,127,26],[158,137,127,28,"commentId"],[158,146,127,37],[158,147,127,38],[159,14,123,16,"error"],[159,20,123,21],[159,23,123,21,"_yield$supabase$from$4"],[159,45,123,21],[159,46,123,16,"error"],[159,51,123,21],[160,12,129,8],[160,16,129,12,"error"],[160,22,129,17],[160,24,129,19],[160,30,129,25,"error"],[160,36,129,30],[162,12,131,8],[163,12,132,8],[163,16,132,8,"_yield$supabase$from$5"],[163,38,132,8],[163,47,132,38,"supabase"],[163,56,132,46],[163,57,132,46,"supabase"],[163,65,132,46],[163,66,133,11,"from"],[163,70,133,15],[163,71,133,16],[163,87,133,32],[163,88,133,33],[163,89,134,11,"select"],[163,95,134,17],[163,96,134,18],[163,107,134,29],[163,108,134,30],[163,109,135,11,"eq"],[163,111,135,13],[163,112,135,14],[163,124,135,26],[163,126,135,28,"commentId"],[163,135,135,37],[163,136,135,38],[164,14,132,22,"votes"],[164,20,132,27],[164,23,132,27,"_yield$supabase$from$5"],[164,45,132,27],[164,46,132,16,"data"],[164,50,132,20],[165,12,137,8],[165,16,137,14,"newScore"],[165,25,137,22],[165,28,138,10,"votes"],[165,34,138,15],[165,36,138,17,"reduce"],[165,42,138,23],[165,43,138,24],[165,44,138,25,"sum"],[165,47,138,28],[165,49,138,30,"vote"],[165,53,138,34],[165,58,138,39,"sum"],[165,61,138,42],[165,64,138,45,"vote"],[165,68,138,49],[165,69,138,50,"vote_type"],[165,78,138,59],[165,80,138,61],[165,81,138,62],[165,82,138,63],[165,86,138,67],[165,87,138,68],[166,12,140,8],[166,18,140,14,"supabase"],[166,27,140,22],[166,28,140,22,"supabase"],[166,36,140,22],[166,37,141,11,"from"],[166,41,141,15],[166,42,141,16],[166,52,141,26],[166,53,141,27],[166,54,142,11,"update"],[166,60,142,17],[166,61,142,18],[167,14,142,20,"score"],[167,19,142,25],[167,21,142,27,"newScore"],[168,12,142,36],[168,13,142,37],[168,14,142,38],[168,15,143,11,"eq"],[168,17,143,13],[168,18,143,14],[168,22,143,18],[168,24,143,20,"commentId"],[168,33,143,29],[168,34,143,30],[169,12,145,8],[169,19,145,15],[169,23,145,19],[170,10,146,6],[172,10,148,6],[173,10,149,6],[173,14,149,6,"_yield$supabase$from$6"],[173,36,149,6],[173,45,149,30,"supabase"],[173,54,149,38],[173,55,149,38,"supabase"],[173,63,149,38],[173,64,149,39,"from"],[173,68,149,43],[173,69,149,44],[173,85,149,60],[173,86,149,61],[173,87,149,62,"upsert"],[173,93,149,68],[173,94,150,8],[174,14,151,10,"user_id"],[174,21,151,17],[174,23,151,19,"userId"],[174,29,151,25],[175,14,152,10,"comment_id"],[175,24,152,20],[175,26,152,22,"commentId"],[175,35,152,31],[176,14,153,10,"vote_type"],[176,23,153,19],[176,25,153,21,"voteType"],[177,12,154,8],[177,13,154,9],[177,15,155,8],[178,14,156,10,"onConflict"],[178,24,156,20],[178,26,156,22],[179,12,157,8],[179,13,158,6],[179,14,158,7],[180,12,149,14,"error"],[180,17,149,19],[180,20,149,19,"_yield$supabase$from$6"],[180,42,149,19],[180,43,149,14,"error"],[180,48,149,19],[181,10,160,6],[181,14,160,10,"error"],[181,19,160,15],[181,21,160,17],[181,27,160,23,"error"],[181,32,160,28],[183,10,162,6],[184,10,163,6],[184,14,163,6,"_yield$supabase$from$7"],[184,36,163,6],[184,45,163,36,"supabase"],[184,54,163,44],[184,55,163,44,"supabase"],[184,63,163,44],[184,64,164,9,"from"],[184,68,164,13],[184,69,164,14],[184,85,164,30],[184,86,164,31],[184,87,165,9,"select"],[184,93,165,15],[184,94,165,16],[184,105,165,27],[184,106,165,28],[184,107,166,9,"eq"],[184,109,166,11],[184,110,166,12],[184,122,166,24],[184,124,166,26,"commentId"],[184,133,166,35],[184,134,166,36],[185,12,163,20,"votes"],[185,17,163,25],[185,20,163,25,"_yield$supabase$from$7"],[185,42,163,25],[185,43,163,14,"data"],[185,47,163,18],[186,10,168,6],[186,14,168,12,"newScore"],[186,22,168,20],[186,25,169,8,"votes"],[186,30,169,13],[186,32,169,15,"reduce"],[186,38,169,21],[186,39,169,22],[186,40,169,23,"sum"],[186,43,169,26],[186,45,169,28,"vote"],[186,49,169,32],[186,54,169,37,"sum"],[186,57,169,40],[186,60,169,43,"vote"],[186,64,169,47],[186,65,169,48,"vote_type"],[186,74,169,57],[186,76,169,59],[186,77,169,60],[186,78,169,61],[186,82,169,65],[186,83,169,66],[187,10,171,6],[187,16,171,12,"supabase"],[187,25,171,20],[187,26,171,20,"supabase"],[187,34,171,20],[187,35,172,9,"from"],[187,39,172,13],[187,40,172,14],[187,50,172,24],[187,51,172,25],[187,52,173,9,"update"],[187,58,173,15],[187,59,173,16],[188,12,173,18,"score"],[188,17,173,23],[188,19,173,25,"newScore"],[189,10,173,34],[189,11,173,35],[189,12,173,36],[189,13,174,9,"eq"],[189,15,174,11],[189,16,174,12],[189,20,174,16],[189,22,174,18,"commentId"],[189,31,174,27],[189,32,174,28],[190,10,176,6],[190,17,176,13,"voteType"],[190,25,176,21],[191,8,177,4],[191,9,177,5],[192,8,177,5],[192,24,120,4,"mutationFn"],[192,34,120,14,"mutationFn"],[192,35,120,14,"_x2"],[192,38,120,14],[193,10,120,14],[193,17,120,14,"_ref6"],[193,22,120,14],[193,23,120,14,"apply"],[193,28,120,14],[193,35,120,14,"arguments"],[193,44,120,14],[194,8,120,14],[195,6,120,14],[195,9,177,5],[196,6,178,4,"onSuccess"],[196,15,178,13],[196,17,178,15,"onSuccess"],[196,18,178,16,"_"],[196,19,178,17],[196,21,178,19,"variables"],[196,30,178,28],[196,35,178,33],[197,8,179,6,"queryClient"],[197,19,179,17],[197,20,179,18,"invalidateQueries"],[197,37,179,35],[197,38,179,36],[197,39,179,37],[197,49,179,47],[197,51,179,49,"variables"],[197,60,179,58],[197,61,179,59,"postId"],[197,67,179,65],[197,68,179,66],[197,69,179,67],[198,8,180,6,"queryClient"],[198,19,180,17],[198,20,180,18,"invalidateQueries"],[198,37,180,35],[198,38,180,36],[198,39,180,37],[198,54,180,52],[198,56,180,54,"variables"],[198,65,180,63],[198,66,180,64,"postId"],[198,72,180,70],[198,73,180,71],[198,74,180,72],[199,6,181,4],[200,4,182,2],[200,5,182,3],[200,6,182,4],[201,2,183,0],[203,2,185,0],[204,0,186,0],[205,0,187,0],[206,2,185,0,"_s4"],[206,5,185,0],[206,6,116,16,"useVoteCommentMutation"],[206,28,116,38],[207,4,116,38],[207,12,117,22,"useQueryClient"],[207,31,117,36],[207,32,117,36,"useQueryClient"],[207,46,117,36],[207,48,119,9,"useMutation"],[207,67,119,20],[207,68,119,20,"useMutation"],[207,79,119,20],[208,2,119,20],[209,2,188,7],[209,11,188,16,"useDeleteCommentMutation"],[209,35,188,40,"useDeleteCommentMutation"],[209,36,188,40],[209,38,188,43],[210,4,188,43,"_s5"],[210,7,188,43],[211,4,189,2],[211,8,189,8,"queryClient"],[211,19,189,19],[211,22,189,22],[211,26,189,22,"useQueryClient"],[211,45,189,36],[211,46,189,36,"useQueryClient"],[211,60,189,36],[211,62,189,37],[211,63,189,38],[212,4,191,2],[212,11,191,9],[212,15,191,9,"useMutation"],[212,34,191,20],[212,35,191,20,"useMutation"],[212,46,191,20],[212,48,191,21],[213,6,192,4,"mutationFn"],[213,16,192,14],[214,8,192,14],[214,12,192,14,"_ref8"],[214,17,192,14],[214,24,192,14,"_asyncToGenerator"],[214,41,192,14],[214,42,192,14,"default"],[214,49,192,14],[214,51,192,16],[214,62,192,16,"_ref7"],[214,67,192,16],[214,69,192,49],[215,10,192,49],[215,14,192,25,"commentId"],[215,23,192,34],[215,26,192,34,"_ref7"],[215,31,192,34],[215,32,192,25,"commentId"],[215,41,192,34],[216,12,192,36,"postId"],[216,18,192,42],[216,21,192,42,"_ref7"],[216,26,192,42],[216,27,192,36,"postId"],[216,33,192,42],[217,10,193,6],[217,14,193,6,"_yield$supabase$from$8"],[217,36,193,6],[217,45,193,30,"supabase"],[217,54,193,38],[217,55,193,38,"supabase"],[217,63,193,38],[217,64,194,9,"from"],[217,68,194,13],[217,69,194,14],[217,79,194,24],[217,80,194,25],[217,81,195,9,"delete"],[217,87,195,15],[217,88,195,16],[217,89,195,17],[217,90,196,9,"eq"],[217,92,196,11],[217,93,196,12],[217,97,196,16],[217,99,196,18,"commentId"],[217,108,196,27],[217,109,196,28],[218,12,193,14,"error"],[218,17,193,19],[218,20,193,19,"_yield$supabase$from$8"],[218,42,193,19],[218,43,193,14,"error"],[218,48,193,19],[219,10,198,6],[219,14,198,10,"error"],[219,19,198,15],[219,21,198,17],[219,27,198,23,"error"],[219,32,198,28],[220,8,199,4],[220,9,199,5],[221,8,199,5],[221,24,192,4,"mutationFn"],[221,34,192,14,"mutationFn"],[221,35,192,14,"_x3"],[221,38,192,14],[222,10,192,14],[222,17,192,14,"_ref8"],[222,22,192,14],[222,23,192,14,"apply"],[222,28,192,14],[222,35,192,14,"arguments"],[222,44,192,14],[223,8,192,14],[224,6,192,14],[224,9,199,5],[225,6,200,4,"onSuccess"],[225,15,200,13],[225,17,200,15,"onSuccess"],[225,18,200,16,"_"],[225,19,200,17],[225,21,200,19,"variables"],[225,30,200,28],[225,35,200,33],[226,8,201,6,"queryClient"],[226,19,201,17],[226,20,201,18,"invalidateQueries"],[226,37,201,35],[226,38,201,36],[226,39,201,37],[226,49,201,47],[226,51,201,49,"variables"],[226,60,201,58],[226,61,201,59,"postId"],[226,67,201,65],[226,68,201,66],[226,69,201,67],[227,8,202,6,"queryClient"],[227,19,202,17],[227,20,202,18,"invalidateQueries"],[227,37,202,35],[227,38,202,36],[227,39,202,37],[227,46,202,44],[227,47,202,45],[227,48,202,46],[228,6,203,4],[229,4,204,2],[229,5,204,3],[229,6,204,4],[230,2,205,0],[231,2,205,1,"_s5"],[231,5,205,1],[231,6,188,16,"useDeleteCommentMutation"],[231,30,188,40],[232,4,188,40],[232,12,189,22,"useQueryClient"],[232,31,189,36],[232,32,189,36,"useQueryClient"],[232,46,189,36],[232,48,191,9,"useMutation"],[232,67,191,20],[232,68,191,20,"useMutation"],[232,79,191,20],[233,2,191,20],[234,0,191,20],[234,3]],"functionMap":{"names":["<global>","useCommentsQuery","useQuery$argument_0.queryFn","data.map$argument_0","useCommentVotesQuery","data.reduce$argument_0","useCreateCommentMutation","useMutation$argument_0.mutationFn","useMutation$argument_0.onSuccess","useVoteCommentMutation","votes.reduce$argument_0","useDeleteCommentMutation"],"mappings":"AAA;OCM;aCG;sBCiB;QDK;KDC;CDG;OIK;aFG;sBCY,WD;yBGM;OHG;KEC;CJG;OMK;gBCI;KDyB;eEC;KFK;CNE;OSK;gBFI;wBGkB,mCH;sBG+B,mCH;KEQ;eDC;KCG;CTE;OWK;gBJI;KIO;eHC;KGG;CXE"},"hasCjsExports":false},"type":"js/module"}]}