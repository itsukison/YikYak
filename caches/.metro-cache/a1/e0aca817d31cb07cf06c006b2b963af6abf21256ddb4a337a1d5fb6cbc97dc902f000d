{"dependencies":[{"name":"@babel/runtime/helpers/slicedToArray","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"5y7e5+zC7teYEEC6niD9f5zII1M=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@tanstack/react-query","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":78,"index":78}}],"key":"Pzwu/0TIyhnZOrC9PAkpZx92hFo=","exportNames":["*"],"imports":1}},{"name":"../supabase","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":79},"end":{"line":2,"column":39,"index":118}}],"key":"zx/dTdJp0d3TJEOaa003L7FI5PE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  exports.useChatsQuery = useChatsQuery;\n  exports.useChatMessagesQuery = useChatMessagesQuery;\n  exports.useSendMessageMutation = useSendMessageMutation;\n  exports.useCreateChatMutation = useCreateChatMutation;\n  exports.useMarkMessagesReadMutation = useMarkMessagesReadMutation;\n  var _babelRuntimeHelpersSlicedToArray = require(_dependencyMap[0], \"@babel/runtime/helpers/slicedToArray\");\n  var _slicedToArray = _interopDefault(_babelRuntimeHelpersSlicedToArray);\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[1], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _tanstackReactQuery = require(_dependencyMap[2], \"@tanstack/react-query\");\n  var _supabase = require(_dependencyMap[3], \"../supabase\");\n  /**\n   * Fetch all chats for the current user\n   */\n  function useChatsQuery(userId) {\n    _s();\n    return (0, _tanstackReactQuery.useQuery)({\n      queryKey: [\"chats\", userId],\n      queryFn: function () {\n        var _ref = (0, _asyncToGenerator.default)(function* () {\n          if (!userId) throw new Error(\"User ID required\");\n          var _yield$supabase$from$ = yield _supabase.supabase.from(\"chats\").select(`\n          *,\n          user1:users!chats_user1_id_fkey(id, nickname, is_anonymous),\n          user2:users!chats_user2_id_fkey(id, nickname, is_anonymous),\n          messages(content, created_at, is_read, sender_id)\n        `).or(`user1_id.eq.${userId},user2_id.eq.${userId}`).order(\"updated_at\", {\n              ascending: false\n            }),\n            data = _yield$supabase$from$.data,\n            error = _yield$supabase$from$.error;\n          if (error) throw error;\n\n          // Transform data to include other user and last message\n          return data.map(chat => {\n            var otherUser = chat.user1.id === userId ? chat.user2 : chat.user1;\n            var messages = chat.messages || [];\n            var lastMessage = messages.length > 0 ? messages[messages.length - 1] : null;\n            var unreadCount = messages.filter(msg => !msg.is_read && msg.sender_id !== userId).length;\n            return {\n              ...chat,\n              otherUser,\n              lastMessage,\n              unreadCount\n            };\n          });\n        });\n        return function queryFn() {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      enabled: !!userId\n    });\n  }\n\n  /**\n   * Fetch messages for a specific chat\n   */\n  _s(useChatsQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n    return [_tanstackReactQuery.useQuery];\n  });\n  function useChatMessagesQuery(chatId) {\n    _s2();\n    return (0, _tanstackReactQuery.useQuery)({\n      queryKey: [\"messages\", chatId],\n      queryFn: function () {\n        var _ref2 = (0, _asyncToGenerator.default)(function* () {\n          if (!chatId) throw new Error(\"Chat ID required\");\n          var _yield$supabase$from$2 = yield _supabase.supabase.from(\"messages\").select(`\n          *,\n          sender:users!messages_sender_id_fkey(id, nickname, is_anonymous)\n        `).eq(\"chat_id\", chatId).order(\"created_at\", {\n              ascending: true\n            }),\n            data = _yield$supabase$from$2.data,\n            error = _yield$supabase$from$2.error;\n          if (error) throw error;\n          return data;\n        });\n        return function queryFn() {\n          return _ref2.apply(this, arguments);\n        };\n      }(),\n      enabled: !!chatId\n    });\n  }\n\n  /**\n   * Send a new message\n   */\n  _s2(useChatMessagesQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n    return [_tanstackReactQuery.useQuery];\n  });\n  function useSendMessageMutation() {\n    _s3();\n    var queryClient = (0, _tanstackReactQuery.useQueryClient)();\n    return (0, _tanstackReactQuery.useMutation)({\n      mutationFn: function () {\n        var _ref4 = (0, _asyncToGenerator.default)(function* (_ref3) {\n          var chatId = _ref3.chatId,\n            senderId = _ref3.senderId,\n            content = _ref3.content;\n          var _yield$supabase$from$3 = yield _supabase.supabase.from(\"messages\").insert({\n              chat_id: chatId,\n              sender_id: senderId,\n              content: content.trim()\n            }).select().single(),\n            data = _yield$supabase$from$3.data,\n            error = _yield$supabase$from$3.error;\n          if (error) throw error;\n\n          // Update chat's updated_at timestamp\n          yield _supabase.supabase.from(\"chats\").update({\n            updated_at: new Date().toISOString()\n          }).eq(\"id\", chatId);\n          return data;\n        });\n        return function mutationFn(_x) {\n          return _ref4.apply(this, arguments);\n        };\n      }(),\n      onSuccess: (data, variables) => {\n        // Invalidate messages query to refetch\n        queryClient.invalidateQueries([\"messages\", variables.chatId]);\n        // Invalidate chats query to update last message\n        queryClient.invalidateQueries([\"chats\"]);\n      }\n    });\n  }\n\n  /**\n   * Create a new chat with another user\n   */\n  _s3(useSendMessageMutation, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n    return [_tanstackReactQuery.useQueryClient, _tanstackReactQuery.useMutation];\n  });\n  function useCreateChatMutation() {\n    _s4();\n    var queryClient = (0, _tanstackReactQuery.useQueryClient)();\n    return (0, _tanstackReactQuery.useMutation)({\n      mutationFn: function () {\n        var _ref6 = (0, _asyncToGenerator.default)(function* (_ref5) {\n          var user1Id = _ref5.user1Id,\n            user2Id = _ref5.user2Id;\n          // Check if chat already exists\n          var _yield$supabase$from$4 = yield _supabase.supabase.from(\"chats\").select(\"*\").or(`and(user1_id.eq.${user1Id},user2_id.eq.${user2Id}),and(user1_id.eq.${user2Id},user2_id.eq.${user1Id})`).maybeSingle(),\n            existingChat = _yield$supabase$from$4.data,\n            checkError = _yield$supabase$from$4.error;\n          if (checkError) throw checkError;\n          if (existingChat) {\n            return existingChat;\n          }\n\n          // Ensure user1_id < user2_id to satisfy CHECK constraint\n          var sortedIds = [user1Id, user2Id].sort();\n          var _sortedIds = (0, _slicedToArray.default)(sortedIds, 2),\n            smallerId = _sortedIds[0],\n            largerId = _sortedIds[1];\n\n          // Create new chat\n          var _yield$supabase$from$5 = yield _supabase.supabase.from(\"chats\").insert({\n              user1_id: smallerId,\n              user2_id: largerId\n            }).select().single(),\n            data = _yield$supabase$from$5.data,\n            error = _yield$supabase$from$5.error;\n          if (error) throw error;\n          return data;\n        });\n        return function mutationFn(_x2) {\n          return _ref6.apply(this, arguments);\n        };\n      }(),\n      onSuccess: () => {\n        queryClient.invalidateQueries([\"chats\"]);\n      }\n    });\n  }\n\n  /**\n   * Mark messages as read\n   */\n  _s4(useCreateChatMutation, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n    return [_tanstackReactQuery.useQueryClient, _tanstackReactQuery.useMutation];\n  });\n  function useMarkMessagesReadMutation() {\n    _s5();\n    var queryClient = (0, _tanstackReactQuery.useQueryClient)();\n    return (0, _tanstackReactQuery.useMutation)({\n      mutationFn: function () {\n        var _ref8 = (0, _asyncToGenerator.default)(function* (_ref7) {\n          var chatId = _ref7.chatId,\n            userId = _ref7.userId;\n          var _yield$supabase$from$6 = yield _supabase.supabase.from(\"messages\").update({\n              is_read: true\n            }).eq(\"chat_id\", chatId).neq(\"sender_id\", userId).eq(\"is_read\", false),\n            error = _yield$supabase$from$6.error;\n          if (error) throw error;\n        });\n        return function mutationFn(_x3) {\n          return _ref8.apply(this, arguments);\n        };\n      }(),\n      onSuccess: (_, variables) => {\n        queryClient.invalidateQueries([\"messages\", variables.chatId]);\n        queryClient.invalidateQueries([\"chats\"]);\n      }\n    });\n  }\n  _s5(useMarkMessagesReadMutation, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n    return [_tanstackReactQuery.useQueryClient, _tanstackReactQuery.useMutation];\n  });\n});","lineCount":229,"map":[[17,2,7,0,"exports"],[17,9,7,0],[17,10,7,0,"useChatsQuery"],[17,23,7,0],[17,26,7,0,"useChatsQuery"],[17,39,7,0],[18,2,53,0,"exports"],[18,9,53,0],[18,10,53,0,"useChatMessagesQuery"],[18,30,53,0],[18,33,53,0,"useChatMessagesQuery"],[18,53,53,0],[19,2,80,0,"exports"],[19,9,80,0],[19,10,80,0,"useSendMessageMutation"],[19,32,80,0],[19,35,80,0,"useSendMessageMutation"],[19,57,80,0],[20,2,117,0,"exports"],[20,9,117,0],[20,10,117,0,"useCreateChatMutation"],[20,31,117,0],[20,34,117,0,"useCreateChatMutation"],[20,55,117,0],[21,2,163,0,"exports"],[21,9,163,0],[21,10,163,0,"useMarkMessagesReadMutation"],[21,37,163,0],[21,40,163,0,"useMarkMessagesReadMutation"],[21,67,163,0],[22,2,182,1],[22,6,182,1,"_babelRuntimeHelpersSlicedToArray"],[22,39,182,1],[22,42,182,1,"require"],[22,49,182,1],[22,50,182,1,"_dependencyMap"],[22,64,182,1],[23,2,182,1],[23,6,182,1,"_slicedToArray"],[23,20,182,1],[23,23,182,1,"_interopDefault"],[23,38,182,1],[23,39,182,1,"_babelRuntimeHelpersSlicedToArray"],[23,72,182,1],[24,2,182,1],[24,6,182,1,"_babelRuntimeHelpersAsyncToGenerator"],[24,42,182,1],[24,45,182,1,"require"],[24,52,182,1],[24,53,182,1,"_dependencyMap"],[24,67,182,1],[25,2,182,1],[25,6,182,1,"_asyncToGenerator"],[25,23,182,1],[25,26,182,1,"_interopDefault"],[25,41,182,1],[25,42,182,1,"_babelRuntimeHelpersAsyncToGenerator"],[25,78,182,1],[26,2,1,0],[26,6,1,0,"_tanstackReactQuery"],[26,25,1,0],[26,28,1,0,"require"],[26,35,1,0],[26,36,1,0,"_dependencyMap"],[26,50,1,0],[27,2,2,0],[27,6,2,0,"_supabase"],[27,15,2,0],[27,18,2,0,"require"],[27,25,2,0],[27,26,2,0,"_dependencyMap"],[27,40,2,0],[28,2,4,0],[29,0,5,0],[30,0,6,0],[31,2,7,7],[31,11,7,16,"useChatsQuery"],[31,24,7,29,"useChatsQuery"],[31,25,7,30,"userId"],[31,31,7,36],[31,33,7,38],[32,4,7,38,"_s"],[32,6,7,38],[33,4,8,2],[33,11,8,9],[33,15,8,9,"useQuery"],[33,34,8,17],[33,35,8,17,"useQuery"],[33,43,8,17],[33,45,8,18],[34,6,9,4,"queryKey"],[34,14,9,12],[34,16,9,14],[34,17,9,15],[34,24,9,22],[34,26,9,24,"userId"],[34,32,9,30],[34,33,9,31],[35,6,10,4,"queryFn"],[35,13,10,11],[36,8,10,11],[36,12,10,11,"_ref"],[36,16,10,11],[36,23,10,11,"_asyncToGenerator"],[36,40,10,11],[36,41,10,11,"default"],[36,48,10,11],[36,50,10,13],[36,63,10,25],[37,10,11,6],[37,14,11,10],[37,15,11,11,"userId"],[37,21,11,17],[37,23,11,19],[37,29,11,25],[37,33,11,29,"Error"],[37,38,11,34],[37,39,11,35],[37,57,11,53],[37,58,11,54],[38,10,13,6],[38,14,13,6,"_yield$supabase$from$"],[38,35,13,6],[38,44,13,36,"supabase"],[38,53,13,44],[38,54,13,44,"supabase"],[38,62,13,44],[38,63,14,9,"from"],[38,67,14,13],[38,68,14,14],[38,75,14,21],[38,76,14,22],[38,77,15,9,"select"],[38,83,15,15],[38,84,16,10],[39,0,17,0],[40,0,18,0],[41,0,19,0],[42,0,20,0],[43,0,21,0],[43,9,22,8],[43,10,22,9],[43,11,23,9,"or"],[43,13,23,11],[43,14,23,12],[43,29,23,27,"userId"],[43,35,23,33],[43,51,23,49,"userId"],[43,57,23,55],[43,59,23,57],[43,60,23,58],[43,61,24,9,"order"],[43,66,24,14],[43,67,24,15],[43,79,24,27],[43,81,24,29],[44,14,24,31,"ascending"],[44,23,24,40],[44,25,24,42],[45,12,24,48],[45,13,24,49],[45,14,24,50],[46,12,13,14,"data"],[46,16,13,18],[46,19,13,18,"_yield$supabase$from$"],[46,40,13,18],[46,41,13,14,"data"],[46,45,13,18],[47,12,13,20,"error"],[47,17,13,25],[47,20,13,25,"_yield$supabase$from$"],[47,41,13,25],[47,42,13,20,"error"],[47,47,13,25],[48,10,26,6],[48,14,26,10,"error"],[48,19,26,15],[48,21,26,17],[48,27,26,23,"error"],[48,32,26,28],[50,10,28,6],[51,10,29,6],[51,17,29,13,"data"],[51,21,29,17],[51,22,29,18,"map"],[51,25,29,21],[51,26,29,23,"chat"],[51,30,29,27],[51,34,29,32],[52,12,30,8],[52,16,30,14,"otherUser"],[52,25,30,23],[52,28,30,26,"chat"],[52,32,30,30],[52,33,30,31,"user1"],[52,38,30,36],[52,39,30,37,"id"],[52,41,30,39],[52,46,30,44,"userId"],[52,52,30,50],[52,55,30,53,"chat"],[52,59,30,57],[52,60,30,58,"user2"],[52,65,30,63],[52,68,30,66,"chat"],[52,72,30,70],[52,73,30,71,"user1"],[52,78,30,76],[53,12,31,8],[53,16,31,14,"messages"],[53,24,31,22],[53,27,31,25,"chat"],[53,31,31,29],[53,32,31,30,"messages"],[53,40,31,38],[53,44,31,42],[53,46,31,44],[54,12,32,8],[54,16,32,14,"lastMessage"],[54,27,32,25],[54,30,33,10,"messages"],[54,38,33,18],[54,39,33,19,"length"],[54,45,33,25],[54,48,33,28],[54,49,33,29],[54,52,33,32,"messages"],[54,60,33,40],[54,61,33,41,"messages"],[54,69,33,49],[54,70,33,50,"length"],[54,76,33,56],[54,79,33,59],[54,80,33,60],[54,81,33,61],[54,84,33,64],[54,88,33,68],[55,12,34,8],[55,16,34,14,"unreadCount"],[55,27,34,25],[55,30,34,28,"messages"],[55,38,34,36],[55,39,34,37,"filter"],[55,45,34,43],[55,46,35,11,"msg"],[55,49,35,14],[55,53,35,19],[55,54,35,20,"msg"],[55,57,35,23],[55,58,35,24,"is_read"],[55,65,35,31],[55,69,35,35,"msg"],[55,72,35,38],[55,73,35,39,"sender_id"],[55,82,35,48],[55,87,35,53,"userId"],[55,93,36,8],[55,94,36,9],[55,95,36,10,"length"],[55,101,36,16],[56,12,38,8],[56,19,38,15],[57,14,39,10],[57,17,39,13,"chat"],[57,21,39,17],[58,14,40,10,"otherUser"],[58,23,40,19],[59,14,41,10,"lastMessage"],[59,25,41,21],[60,14,42,10,"unreadCount"],[61,12,43,8],[61,13,43,9],[62,10,44,6],[62,11,44,7],[62,12,44,8],[63,8,45,4],[63,9,45,5],[64,8,45,5],[64,24,10,4,"queryFn"],[64,31,10,11,"queryFn"],[64,32,10,11],[65,10,10,11],[65,17,10,11,"_ref"],[65,21,10,11],[65,22,10,11,"apply"],[65,27,10,11],[65,34,10,11,"arguments"],[65,43,10,11],[66,8,10,11],[67,6,10,11],[67,9,45,5],[68,6,46,4,"enabled"],[68,13,46,11],[68,15,46,13],[68,16,46,14],[68,17,46,15,"userId"],[69,4,47,2],[69,5,47,3],[69,6,47,4],[70,2,48,0],[72,2,50,0],[73,0,51,0],[74,0,52,0],[75,2,50,0,"_s"],[75,4,50,0],[75,5,7,16,"useChatsQuery"],[75,18,7,29],[76,4,7,29],[76,12,8,9,"useQuery"],[76,31,8,17],[76,32,8,17,"useQuery"],[76,40,8,17],[77,2,8,17],[78,2,53,7],[78,11,53,16,"useChatMessagesQuery"],[78,31,53,36,"useChatMessagesQuery"],[78,32,53,37,"chatId"],[78,38,53,43],[78,40,53,45],[79,4,53,45,"_s2"],[79,7,53,45],[80,4,54,2],[80,11,54,9],[80,15,54,9,"useQuery"],[80,34,54,17],[80,35,54,17,"useQuery"],[80,43,54,17],[80,45,54,18],[81,6,55,4,"queryKey"],[81,14,55,12],[81,16,55,14],[81,17,55,15],[81,27,55,25],[81,29,55,27,"chatId"],[81,35,55,33],[81,36,55,34],[82,6,56,4,"queryFn"],[82,13,56,11],[83,8,56,11],[83,12,56,11,"_ref2"],[83,17,56,11],[83,24,56,11,"_asyncToGenerator"],[83,41,56,11],[83,42,56,11,"default"],[83,49,56,11],[83,51,56,13],[83,64,56,25],[84,10,57,6],[84,14,57,10],[84,15,57,11,"chatId"],[84,21,57,17],[84,23,57,19],[84,29,57,25],[84,33,57,29,"Error"],[84,38,57,34],[84,39,57,35],[84,57,57,53],[84,58,57,54],[85,10,59,6],[85,14,59,6,"_yield$supabase$from$2"],[85,36,59,6],[85,45,59,36,"supabase"],[85,54,59,44],[85,55,59,44,"supabase"],[85,63,59,44],[85,64,60,9,"from"],[85,68,60,13],[85,69,60,14],[85,79,60,24],[85,80,60,25],[85,81,61,9,"select"],[85,87,61,15],[85,88,62,10],[86,0,63,0],[87,0,64,0],[88,0,65,0],[88,9,66,8],[88,10,66,9],[88,11,67,9,"eq"],[88,13,67,11],[88,14,67,12],[88,23,67,21],[88,25,67,23,"chatId"],[88,31,67,29],[88,32,67,30],[88,33,68,9,"order"],[88,38,68,14],[88,39,68,15],[88,51,68,27],[88,53,68,29],[89,14,68,31,"ascending"],[89,23,68,40],[89,25,68,42],[90,12,68,47],[90,13,68,48],[90,14,68,49],[91,12,59,14,"data"],[91,16,59,18],[91,19,59,18,"_yield$supabase$from$2"],[91,41,59,18],[91,42,59,14,"data"],[91,46,59,18],[92,12,59,20,"error"],[92,17,59,25],[92,20,59,25,"_yield$supabase$from$2"],[92,42,59,25],[92,43,59,20,"error"],[92,48,59,25],[93,10,70,6],[93,14,70,10,"error"],[93,19,70,15],[93,21,70,17],[93,27,70,23,"error"],[93,32,70,28],[94,10,71,6],[94,17,71,13,"data"],[94,21,71,17],[95,8,72,4],[95,9,72,5],[96,8,72,5],[96,24,56,4,"queryFn"],[96,31,56,11,"queryFn"],[96,32,56,11],[97,10,56,11],[97,17,56,11,"_ref2"],[97,22,56,11],[97,23,56,11,"apply"],[97,28,56,11],[97,35,56,11,"arguments"],[97,44,56,11],[98,8,56,11],[99,6,56,11],[99,9,72,5],[100,6,73,4,"enabled"],[100,13,73,11],[100,15,73,13],[100,16,73,14],[100,17,73,15,"chatId"],[101,4,74,2],[101,5,74,3],[101,6,74,4],[102,2,75,0],[104,2,77,0],[105,0,78,0],[106,0,79,0],[107,2,77,0,"_s2"],[107,5,77,0],[107,6,53,16,"useChatMessagesQuery"],[107,26,53,36],[108,4,53,36],[108,12,54,9,"useQuery"],[108,31,54,17],[108,32,54,17,"useQuery"],[108,40,54,17],[109,2,54,17],[110,2,80,7],[110,11,80,16,"useSendMessageMutation"],[110,33,80,38,"useSendMessageMutation"],[110,34,80,38],[110,36,80,41],[111,4,80,41,"_s3"],[111,7,80,41],[112,4,81,2],[112,8,81,8,"queryClient"],[112,19,81,19],[112,22,81,22],[112,26,81,22,"useQueryClient"],[112,45,81,36],[112,46,81,36,"useQueryClient"],[112,60,81,36],[112,62,81,37],[112,63,81,38],[113,4,83,2],[113,11,83,9],[113,15,83,9,"useMutation"],[113,34,83,20],[113,35,83,20,"useMutation"],[113,46,83,20],[113,48,83,21],[114,6,84,4,"mutationFn"],[114,16,84,14],[115,8,84,14],[115,12,84,14,"_ref4"],[115,17,84,14],[115,24,84,14,"_asyncToGenerator"],[115,41,84,14],[115,42,84,14,"default"],[115,49,84,14],[115,51,84,16],[115,62,84,16,"_ref3"],[115,67,84,16],[115,69,84,57],[116,10,84,57],[116,14,84,25,"chatId"],[116,20,84,31],[116,23,84,31,"_ref3"],[116,28,84,31],[116,29,84,25,"chatId"],[116,35,84,31],[117,12,84,33,"senderId"],[117,20,84,41],[117,23,84,41,"_ref3"],[117,28,84,41],[117,29,84,33,"senderId"],[117,37,84,41],[118,12,84,43,"content"],[118,19,84,50],[118,22,84,50,"_ref3"],[118,27,84,50],[118,28,84,43,"content"],[118,35,84,50],[119,10,85,6],[119,14,85,6,"_yield$supabase$from$3"],[119,36,85,6],[119,45,85,36,"supabase"],[119,54,85,44],[119,55,85,44,"supabase"],[119,63,85,44],[119,64,86,9,"from"],[119,68,86,13],[119,69,86,14],[119,79,86,24],[119,80,86,25],[119,81,87,9,"insert"],[119,87,87,15],[119,88,87,16],[120,14,88,10,"chat_id"],[120,21,88,17],[120,23,88,19,"chatId"],[120,29,88,25],[121,14,89,10,"sender_id"],[121,23,89,19],[121,25,89,21,"senderId"],[121,33,89,29],[122,14,90,10,"content"],[122,21,90,17],[122,23,90,19,"content"],[122,30,90,26],[122,31,90,27,"trim"],[122,35,90,31],[122,36,90,32],[123,12,91,8],[123,13,91,9],[123,14,91,10],[123,15,92,9,"select"],[123,21,92,15],[123,22,92,16],[123,23,92,17],[123,24,93,9,"single"],[123,30,93,15],[123,31,93,16],[123,32,93,17],[124,12,85,14,"data"],[124,16,85,18],[124,19,85,18,"_yield$supabase$from$3"],[124,41,85,18],[124,42,85,14,"data"],[124,46,85,18],[125,12,85,20,"error"],[125,17,85,25],[125,20,85,25,"_yield$supabase$from$3"],[125,42,85,25],[125,43,85,20,"error"],[125,48,85,25],[126,10,95,6],[126,14,95,10,"error"],[126,19,95,15],[126,21,95,17],[126,27,95,23,"error"],[126,32,95,28],[128,10,97,6],[129,10,98,6],[129,16,98,12,"supabase"],[129,25,98,20],[129,26,98,20,"supabase"],[129,34,98,20],[129,35,99,9,"from"],[129,39,99,13],[129,40,99,14],[129,47,99,21],[129,48,99,22],[129,49,100,9,"update"],[129,55,100,15],[129,56,100,16],[130,12,100,18,"updated_at"],[130,22,100,28],[130,24,100,30],[130,28,100,34,"Date"],[130,32,100,38],[130,33,100,39],[130,34,100,40],[130,35,100,41,"toISOString"],[130,46,100,52],[130,47,100,53],[131,10,100,55],[131,11,100,56],[131,12,100,57],[131,13,101,9,"eq"],[131,15,101,11],[131,16,101,12],[131,20,101,16],[131,22,101,18,"chatId"],[131,28,101,24],[131,29,101,25],[132,10,103,6],[132,17,103,13,"data"],[132,21,103,17],[133,8,104,4],[133,9,104,5],[134,8,104,5],[134,24,84,4,"mutationFn"],[134,34,84,14,"mutationFn"],[134,35,84,14,"_x"],[134,37,84,14],[135,10,84,14],[135,17,84,14,"_ref4"],[135,22,84,14],[135,23,84,14,"apply"],[135,28,84,14],[135,35,84,14,"arguments"],[135,44,84,14],[136,8,84,14],[137,6,84,14],[137,9,104,5],[138,6,105,4,"onSuccess"],[138,15,105,13],[138,17,105,15,"onSuccess"],[138,18,105,16,"data"],[138,22,105,20],[138,24,105,22,"variables"],[138,33,105,31],[138,38,105,36],[139,8,106,6],[140,8,107,6,"queryClient"],[140,19,107,17],[140,20,107,18,"invalidateQueries"],[140,37,107,35],[140,38,107,36],[140,39,107,37],[140,49,107,47],[140,51,107,49,"variables"],[140,60,107,58],[140,61,107,59,"chatId"],[140,67,107,65],[140,68,107,66],[140,69,107,67],[141,8,108,6],[142,8,109,6,"queryClient"],[142,19,109,17],[142,20,109,18,"invalidateQueries"],[142,37,109,35],[142,38,109,36],[142,39,109,37],[142,46,109,44],[142,47,109,45],[142,48,109,46],[143,6,110,4],[144,4,111,2],[144,5,111,3],[144,6,111,4],[145,2,112,0],[147,2,114,0],[148,0,115,0],[149,0,116,0],[150,2,114,0,"_s3"],[150,5,114,0],[150,6,80,16,"useSendMessageMutation"],[150,28,80,38],[151,4,80,38],[151,12,81,22,"useQueryClient"],[151,31,81,36],[151,32,81,36,"useQueryClient"],[151,46,81,36],[151,48,83,9,"useMutation"],[151,67,83,20],[151,68,83,20,"useMutation"],[151,79,83,20],[152,2,83,20],[153,2,117,7],[153,11,117,16,"useCreateChatMutation"],[153,32,117,37,"useCreateChatMutation"],[153,33,117,37],[153,35,117,40],[154,4,117,40,"_s4"],[154,7,117,40],[155,4,118,2],[155,8,118,8,"queryClient"],[155,19,118,19],[155,22,118,22],[155,26,118,22,"useQueryClient"],[155,45,118,36],[155,46,118,36,"useQueryClient"],[155,60,118,36],[155,62,118,37],[155,63,118,38],[156,4,120,2],[156,11,120,9],[156,15,120,9,"useMutation"],[156,34,120,20],[156,35,120,20,"useMutation"],[156,46,120,20],[156,48,120,21],[157,6,121,4,"mutationFn"],[157,16,121,14],[158,8,121,14],[158,12,121,14,"_ref6"],[158,17,121,14],[158,24,121,14,"_asyncToGenerator"],[158,41,121,14],[158,42,121,14,"default"],[158,49,121,14],[158,51,121,16],[158,62,121,16,"_ref5"],[158,67,121,16],[158,69,121,48],[159,10,121,48],[159,14,121,25,"user1Id"],[159,21,121,32],[159,24,121,32,"_ref5"],[159,29,121,32],[159,30,121,25,"user1Id"],[159,37,121,32],[160,12,121,34,"user2Id"],[160,19,121,41],[160,22,121,41,"_ref5"],[160,27,121,41],[160,28,121,34,"user2Id"],[160,35,121,41],[161,10,122,6],[162,10,123,6],[162,14,123,6,"_yield$supabase$from$4"],[162,36,123,6],[162,45,123,62,"supabase"],[162,54,123,70],[162,55,123,70,"supabase"],[162,63,123,70],[162,64,124,9,"from"],[162,68,124,13],[162,69,124,14],[162,76,124,21],[162,77,124,22],[162,78,125,9,"select"],[162,84,125,15],[162,85,125,16],[162,88,125,19],[162,89,125,20],[162,90,126,9,"or"],[162,92,126,11],[162,93,127,10],[162,112,127,29,"user1Id"],[162,119,127,36],[162,135,127,52,"user2Id"],[162,142,127,59],[162,163,127,80,"user2Id"],[162,170,127,87],[162,186,127,103,"user1Id"],[162,193,127,110],[162,196,128,8],[162,197,128,9],[162,198,129,9,"maybeSingle"],[162,209,129,20],[162,210,129,21],[162,211,129,22],[163,12,123,20,"existingChat"],[163,24,123,32],[163,27,123,32,"_yield$supabase$from$4"],[163,49,123,32],[163,50,123,14,"data"],[163,54,123,18],[164,12,123,41,"checkError"],[164,22,123,51],[164,25,123,51,"_yield$supabase$from$4"],[164,47,123,51],[164,48,123,34,"error"],[164,53,123,39],[165,10,131,6],[165,14,131,10,"checkError"],[165,24,131,20],[165,26,131,22],[165,32,131,28,"checkError"],[165,42,131,38],[166,10,133,6],[166,14,133,10,"existingChat"],[166,26,133,22],[166,28,133,24],[167,12,134,8],[167,19,134,15,"existingChat"],[167,31,134,27],[168,10,135,6],[170,10,137,6],[171,10,138,6],[171,14,138,12,"sortedIds"],[171,23,138,21],[171,26,138,24],[171,27,138,25,"user1Id"],[171,34,138,32],[171,36,138,34,"user2Id"],[171,43,138,41],[171,44,138,42],[171,45,138,43,"sort"],[171,49,138,47],[171,50,138,48],[171,51,138,49],[172,10,139,6],[172,14,139,6,"_sortedIds"],[172,24,139,6],[172,31,139,6,"_slicedToArray"],[172,45,139,6],[172,46,139,6,"default"],[172,53,139,6],[172,55,139,36,"sortedIds"],[172,64,139,45],[173,12,139,13,"smallerId"],[173,21,139,22],[173,24,139,22,"_sortedIds"],[173,34,139,22],[174,12,139,24,"largerId"],[174,20,139,32],[174,23,139,32,"_sortedIds"],[174,33,139,32],[176,10,141,6],[177,10,142,6],[177,14,142,6,"_yield$supabase$from$5"],[177,36,142,6],[177,45,142,36,"supabase"],[177,54,142,44],[177,55,142,44,"supabase"],[177,63,142,44],[177,64,143,9,"from"],[177,68,143,13],[177,69,143,14],[177,76,143,21],[177,77,143,22],[177,78,144,9,"insert"],[177,84,144,15],[177,85,144,16],[178,14,145,10,"user1_id"],[178,22,145,18],[178,24,145,20,"smallerId"],[178,33,145,29],[179,14,146,10,"user2_id"],[179,22,146,18],[179,24,146,20,"largerId"],[180,12,147,8],[180,13,147,9],[180,14,147,10],[180,15,148,9,"select"],[180,21,148,15],[180,22,148,16],[180,23,148,17],[180,24,149,9,"single"],[180,30,149,15],[180,31,149,16],[180,32,149,17],[181,12,142,14,"data"],[181,16,142,18],[181,19,142,18,"_yield$supabase$from$5"],[181,41,142,18],[181,42,142,14,"data"],[181,46,142,18],[182,12,142,20,"error"],[182,17,142,25],[182,20,142,25,"_yield$supabase$from$5"],[182,42,142,25],[182,43,142,20,"error"],[182,48,142,25],[183,10,151,6],[183,14,151,10,"error"],[183,19,151,15],[183,21,151,17],[183,27,151,23,"error"],[183,32,151,28],[184,10,152,6],[184,17,152,13,"data"],[184,21,152,17],[185,8,153,4],[185,9,153,5],[186,8,153,5],[186,24,121,4,"mutationFn"],[186,34,121,14,"mutationFn"],[186,35,121,14,"_x2"],[186,38,121,14],[187,10,121,14],[187,17,121,14,"_ref6"],[187,22,121,14],[187,23,121,14,"apply"],[187,28,121,14],[187,35,121,14,"arguments"],[187,44,121,14],[188,8,121,14],[189,6,121,14],[189,9,153,5],[190,6,154,4,"onSuccess"],[190,15,154,13],[190,17,154,15,"onSuccess"],[190,18,154,15],[190,23,154,21],[191,8,155,6,"queryClient"],[191,19,155,17],[191,20,155,18,"invalidateQueries"],[191,37,155,35],[191,38,155,36],[191,39,155,37],[191,46,155,44],[191,47,155,45],[191,48,155,46],[192,6,156,4],[193,4,157,2],[193,5,157,3],[193,6,157,4],[194,2,158,0],[196,2,160,0],[197,0,161,0],[198,0,162,0],[199,2,160,0,"_s4"],[199,5,160,0],[199,6,117,16,"useCreateChatMutation"],[199,27,117,37],[200,4,117,37],[200,12,118,22,"useQueryClient"],[200,31,118,36],[200,32,118,36,"useQueryClient"],[200,46,118,36],[200,48,120,9,"useMutation"],[200,67,120,20],[200,68,120,20,"useMutation"],[200,79,120,20],[201,2,120,20],[202,2,163,7],[202,11,163,16,"useMarkMessagesReadMutation"],[202,38,163,43,"useMarkMessagesReadMutation"],[202,39,163,43],[202,41,163,46],[203,4,163,46,"_s5"],[203,7,163,46],[204,4,164,2],[204,8,164,8,"queryClient"],[204,19,164,19],[204,22,164,22],[204,26,164,22,"useQueryClient"],[204,45,164,36],[204,46,164,36,"useQueryClient"],[204,60,164,36],[204,62,164,37],[204,63,164,38],[205,4,166,2],[205,11,166,9],[205,15,166,9,"useMutation"],[205,34,166,20],[205,35,166,20,"useMutation"],[205,46,166,20],[205,48,166,21],[206,6,167,4,"mutationFn"],[206,16,167,14],[207,8,167,14],[207,12,167,14,"_ref8"],[207,17,167,14],[207,24,167,14,"_asyncToGenerator"],[207,41,167,14],[207,42,167,14,"default"],[207,49,167,14],[207,51,167,16],[207,62,167,16,"_ref7"],[207,67,167,16],[207,69,167,46],[208,10,167,46],[208,14,167,25,"chatId"],[208,20,167,31],[208,23,167,31,"_ref7"],[208,28,167,31],[208,29,167,25,"chatId"],[208,35,167,31],[209,12,167,33,"userId"],[209,18,167,39],[209,21,167,39,"_ref7"],[209,26,167,39],[209,27,167,33,"userId"],[209,33,167,39],[210,10,168,6],[210,14,168,6,"_yield$supabase$from$6"],[210,36,168,6],[210,45,168,30,"supabase"],[210,54,168,38],[210,55,168,38,"supabase"],[210,63,168,38],[210,64,169,9,"from"],[210,68,169,13],[210,69,169,14],[210,79,169,24],[210,80,169,25],[210,81,170,9,"update"],[210,87,170,15],[210,88,170,16],[211,14,170,18,"is_read"],[211,21,170,25],[211,23,170,27],[212,12,170,32],[212,13,170,33],[212,14,170,34],[212,15,171,9,"eq"],[212,17,171,11],[212,18,171,12],[212,27,171,21],[212,29,171,23,"chatId"],[212,35,171,29],[212,36,171,30],[212,37,172,9,"neq"],[212,40,172,12],[212,41,172,13],[212,52,172,24],[212,54,172,26,"userId"],[212,60,172,32],[212,61,172,33],[212,62,173,9,"eq"],[212,64,173,11],[212,65,173,12],[212,74,173,21],[212,76,173,23],[212,81,173,28],[212,82,173,29],[213,12,168,14,"error"],[213,17,168,19],[213,20,168,19,"_yield$supabase$from$6"],[213,42,168,19],[213,43,168,14,"error"],[213,48,168,19],[214,10,175,6],[214,14,175,10,"error"],[214,19,175,15],[214,21,175,17],[214,27,175,23,"error"],[214,32,175,28],[215,8,176,4],[215,9,176,5],[216,8,176,5],[216,24,167,4,"mutationFn"],[216,34,167,14,"mutationFn"],[216,35,167,14,"_x3"],[216,38,167,14],[217,10,167,14],[217,17,167,14,"_ref8"],[217,22,167,14],[217,23,167,14,"apply"],[217,28,167,14],[217,35,167,14,"arguments"],[217,44,167,14],[218,8,167,14],[219,6,167,14],[219,9,176,5],[220,6,177,4,"onSuccess"],[220,15,177,13],[220,17,177,15,"onSuccess"],[220,18,177,16,"_"],[220,19,177,17],[220,21,177,19,"variables"],[220,30,177,28],[220,35,177,33],[221,8,178,6,"queryClient"],[221,19,178,17],[221,20,178,18,"invalidateQueries"],[221,37,178,35],[221,38,178,36],[221,39,178,37],[221,49,178,47],[221,51,178,49,"variables"],[221,60,178,58],[221,61,178,59,"chatId"],[221,67,178,65],[221,68,178,66],[221,69,178,67],[222,8,179,6,"queryClient"],[222,19,179,17],[222,20,179,18,"invalidateQueries"],[222,37,179,35],[222,38,179,36],[222,39,179,37],[222,46,179,44],[222,47,179,45],[222,48,179,46],[223,6,180,4],[224,4,181,2],[224,5,181,3],[224,6,181,4],[225,2,182,0],[226,2,182,1,"_s5"],[226,5,182,1],[226,6,163,16,"useMarkMessagesReadMutation"],[226,33,163,43],[227,4,163,43],[227,12,164,22,"useQueryClient"],[227,31,164,36],[227,32,164,36,"useQueryClient"],[227,46,164,36],[227,48,166,9,"useMutation"],[227,67,166,20],[227,68,166,20,"useMutation"],[227,79,166,20],[228,2,166,20],[229,0,166,20],[229,3]],"functionMap":{"names":["<global>","useChatsQuery","useQuery$argument_0.queryFn","data.map$argument_0","messages.filter$argument_0","useChatMessagesQuery","useSendMessageMutation","useMutation$argument_0.mutationFn","useMutation$argument_0.onSuccess","useCreateChatMutation","useMarkMessagesReadMutation"],"mappings":"AAA;OCM;aCG;sBCmB;UCM,iDD;ODS;KDC;CDG;OKK;aHG;KGgB;CLG;OMK;gBCI;KDoB;eEC;KFK;CNE;OSK;gBFI;KEgC;eDC;KCE;CTE;OUK;gBHI;KGS;eFC;KEG;CVE"},"hasCjsExports":false},"type":"js/module"}]}