{"dependencies":[{"name":"@tanstack/react-query","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":1,"column":0,"index":0},"end":{"line":1,"column":78,"index":78}}],"key":"Pzwu/0TIyhnZOrC9PAkpZx92hFo=","exportNames":["*"]}},{"name":"../supabase","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":79},"end":{"line":2,"column":39,"index":118}}],"key":"zx/dTdJp0d3TJEOaa003L7FI5PE=","exportNames":["*"]}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.useChatMessagesQuery = useChatMessagesQuery;\n  exports.useChatsQuery = useChatsQuery;\n  exports.useCreateChatMutation = useCreateChatMutation;\n  exports.useMarkMessagesReadMutation = useMarkMessagesReadMutation;\n  exports.useSendMessageMutation = useSendMessageMutation;\n  var _reactQuery = require(_dependencyMap[0], \"@tanstack/react-query\");\n  var _supabase = require(_dependencyMap[1], \"../supabase\");\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$();\n  /**\n   * Fetch all chats for the current user\n   */\n  function useChatsQuery(userId) {\n    _s();\n    return (0, _reactQuery.useQuery)({\n      queryKey: [\"chats\", userId],\n      queryFn: async () => {\n        if (!userId) throw new Error(\"User ID required\");\n        const {\n          data,\n          error\n        } = await _supabase.supabase.from(\"chats\").select(`\n          *,\n          user1:users!chats_user1_id_fkey(id, nickname, is_anonymous),\n          user2:users!chats_user2_id_fkey(id, nickname, is_anonymous),\n          messages(content, created_at, is_read, sender_id)\n        `).or(`user1_id.eq.${userId},user2_id.eq.${userId}`).order(\"updated_at\", {\n          ascending: false\n        });\n        if (error) throw error;\n\n        // Transform data to include other user and last message\n        return data.map(chat => {\n          const otherUser = chat.user1.id === userId ? chat.user2 : chat.user1;\n          const messages = chat.messages || [];\n          const lastMessage = messages.length > 0 ? messages[messages.length - 1] : null;\n          const unreadCount = messages.filter(msg => !msg.is_read && msg.sender_id !== userId).length;\n          return {\n            ...chat,\n            otherUser,\n            lastMessage,\n            unreadCount\n          };\n        });\n      },\n      enabled: !!userId\n    });\n  }\n\n  /**\n   * Fetch messages for a specific chat\n   */\n  _s(useChatsQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n    return [_reactQuery.useQuery];\n  });\n  function useChatMessagesQuery(chatId) {\n    _s2();\n    return (0, _reactQuery.useQuery)({\n      queryKey: [\"messages\", chatId],\n      queryFn: async () => {\n        if (!chatId) throw new Error(\"Chat ID required\");\n        const {\n          data,\n          error\n        } = await _supabase.supabase.from(\"messages\").select(`\n          *,\n          sender:users!messages_sender_id_fkey(id, nickname, is_anonymous)\n        `).eq(\"chat_id\", chatId).order(\"created_at\", {\n          ascending: true\n        });\n        if (error) throw error;\n        return data;\n      },\n      enabled: !!chatId\n    });\n  }\n\n  /**\n   * Send a new message\n   */\n  _s2(useChatMessagesQuery, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n    return [_reactQuery.useQuery];\n  });\n  function useSendMessageMutation() {\n    _s3();\n    const queryClient = (0, _reactQuery.useQueryClient)();\n    return (0, _reactQuery.useMutation)({\n      mutationFn: async ({\n        chatId,\n        senderId,\n        content\n      }) => {\n        const {\n          data,\n          error\n        } = await _supabase.supabase.from(\"messages\").insert({\n          chat_id: chatId,\n          sender_id: senderId,\n          content: content.trim()\n        }).select().single();\n        if (error) throw error;\n\n        // Update chat's updated_at timestamp\n        await _supabase.supabase.from(\"chats\").update({\n          updated_at: new Date().toISOString()\n        }).eq(\"id\", chatId);\n        return data;\n      },\n      onSuccess: (data, variables) => {\n        // Invalidate messages query to refetch\n        queryClient.invalidateQueries([\"messages\", variables.chatId]);\n        // Invalidate chats query to update last message\n        queryClient.invalidateQueries([\"chats\"]);\n      }\n    });\n  }\n\n  /**\n   * Create a new chat with another user\n   */\n  _s3(useSendMessageMutation, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n    return [_reactQuery.useQueryClient, _reactQuery.useMutation];\n  });\n  function useCreateChatMutation() {\n    _s4();\n    const queryClient = (0, _reactQuery.useQueryClient)();\n    return (0, _reactQuery.useMutation)({\n      mutationFn: async ({\n        user1Id,\n        user2Id\n      }) => {\n        // Check if chat already exists\n        const {\n          data: existingChat\n        } = await _supabase.supabase.from(\"chats\").select(\"*\").or(`and(user1_id.eq.${user1Id},user2_id.eq.${user2Id}),and(user1_id.eq.${user2Id},user2_id.eq.${user1Id})`).single();\n        if (existingChat) {\n          return existingChat;\n        }\n\n        // Create new chat\n        const {\n          data,\n          error\n        } = await _supabase.supabase.from(\"chats\").insert({\n          user1_id: user1Id,\n          user2_id: user2Id\n        }).select().single();\n        if (error) throw error;\n        return data;\n      },\n      onSuccess: () => {\n        queryClient.invalidateQueries([\"chats\"]);\n      }\n    });\n  }\n\n  /**\n   * Mark messages as read\n   */\n  _s4(useCreateChatMutation, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n    return [_reactQuery.useQueryClient, _reactQuery.useMutation];\n  });\n  function useMarkMessagesReadMutation() {\n    _s5();\n    const queryClient = (0, _reactQuery.useQueryClient)();\n    return (0, _reactQuery.useMutation)({\n      mutationFn: async ({\n        chatId,\n        userId\n      }) => {\n        const {\n          error\n        } = await _supabase.supabase.from(\"messages\").update({\n          is_read: true\n        }).eq(\"chat_id\", chatId).neq(\"sender_id\", userId).eq(\"is_read\", false);\n        if (error) throw error;\n      },\n      onSuccess: (_, variables) => {\n        queryClient.invalidateQueries([\"messages\", variables.chatId]);\n        queryClient.invalidateQueries([\"chats\"]);\n      }\n    });\n  }\n  _s5(useMarkMessagesReadMutation, \"YK0wzM21ECnncaq5SECwU+/SVdQ=\", false, function () {\n    return [_reactQuery.useQueryClient, _reactQuery.useMutation];\n  });\n});","lineCount":194,"map":[[10,2,1,0],[10,6,1,0,"_reactQuery"],[10,17,1,0],[10,20,1,0,"require"],[10,27,1,0],[10,28,1,0,"_dependencyMap"],[10,42,1,0],[11,2,2,0],[11,6,2,0,"_supabase"],[11,15,2,0],[11,18,2,0,"require"],[11,25,2,0],[11,26,2,0,"_dependencyMap"],[11,40,2,0],[12,2,2,39],[12,6,2,39,"_s"],[12,8,2,39],[12,11,2,39,"$RefreshSig$"],[12,23,2,39],[13,4,2,39,"_s2"],[13,7,2,39],[13,10,2,39,"$RefreshSig$"],[13,22,2,39],[14,4,2,39,"_s3"],[14,7,2,39],[14,10,2,39,"$RefreshSig$"],[14,22,2,39],[15,4,2,39,"_s4"],[15,7,2,39],[15,10,2,39,"$RefreshSig$"],[15,22,2,39],[16,4,2,39,"_s5"],[16,7,2,39],[16,10,2,39,"$RefreshSig$"],[16,22,2,39],[17,2,4,0],[18,0,5,0],[19,0,6,0],[20,2,7,7],[20,11,7,16,"useChatsQuery"],[20,24,7,29,"useChatsQuery"],[20,25,7,30,"userId"],[20,31,7,36],[20,33,7,38],[21,4,7,38,"_s"],[21,6,7,38],[22,4,8,2],[22,11,8,9],[22,15,8,9,"useQuery"],[22,35,8,17],[22,37,8,18],[23,6,9,4,"queryKey"],[23,14,9,12],[23,16,9,14],[23,17,9,15],[23,24,9,22],[23,26,9,24,"userId"],[23,32,9,30],[23,33,9,31],[24,6,10,4,"queryFn"],[24,13,10,11],[24,15,10,13],[24,21,10,13,"queryFn"],[24,22,10,13],[24,27,10,25],[25,8,11,6],[25,12,11,10],[25,13,11,11,"userId"],[25,19,11,17],[25,21,11,19],[25,27,11,25],[25,31,11,29,"Error"],[25,36,11,34],[25,37,11,35],[25,55,11,53],[25,56,11,54],[26,8,13,6],[26,14,13,12],[27,10,13,14,"data"],[27,14,13,18],[28,10,13,20,"error"],[29,8,13,26],[29,9,13,27],[29,12,13,30],[29,18,13,36,"supabase"],[29,36,13,44],[29,37,14,9,"from"],[29,41,14,13],[29,42,14,14],[29,49,14,21],[29,50,14,22],[29,51,15,9,"select"],[29,57,15,15],[29,58,15,16],[30,0,16,0],[31,0,17,0],[32,0,18,0],[33,0,19,0],[34,0,20,0],[34,9,20,9],[34,10,20,10],[34,11,21,9,"or"],[34,13,21,11],[34,14,21,12],[34,29,21,27,"userId"],[34,35,21,33],[34,51,21,49,"userId"],[34,57,21,55],[34,59,21,57],[34,60,21,58],[34,61,22,9,"order"],[34,66,22,14],[34,67,22,15],[34,79,22,27],[34,81,22,29],[35,10,22,31,"ascending"],[35,19,22,40],[35,21,22,42],[36,8,22,48],[36,9,22,49],[36,10,22,50],[37,8,24,6],[37,12,24,10,"error"],[37,17,24,15],[37,19,24,17],[37,25,24,23,"error"],[37,30,24,28],[39,8,26,6],[40,8,27,6],[40,15,27,13,"data"],[40,19,27,17],[40,20,27,18,"map"],[40,23,27,21],[40,24,27,23,"chat"],[40,28,27,27],[40,32,27,32],[41,10,28,8],[41,16,28,14,"otherUser"],[41,25,28,23],[41,28,28,26,"chat"],[41,32,28,30],[41,33,28,31,"user1"],[41,38,28,36],[41,39,28,37,"id"],[41,41,28,39],[41,46,28,44,"userId"],[41,52,28,50],[41,55,28,53,"chat"],[41,59,28,57],[41,60,28,58,"user2"],[41,65,28,63],[41,68,28,66,"chat"],[41,72,28,70],[41,73,28,71,"user1"],[41,78,28,76],[42,10,29,8],[42,16,29,14,"messages"],[42,24,29,22],[42,27,29,25,"chat"],[42,31,29,29],[42,32,29,30,"messages"],[42,40,29,38],[42,44,29,42],[42,46,29,44],[43,10,30,8],[43,16,30,14,"lastMessage"],[43,27,30,25],[43,30,30,28,"messages"],[43,38,30,36],[43,39,30,37,"length"],[43,45,30,43],[43,48,30,46],[43,49,30,47],[43,52,30,50,"messages"],[43,60,30,58],[43,61,30,59,"messages"],[43,69,30,67],[43,70,30,68,"length"],[43,76,30,74],[43,79,30,77],[43,80,30,78],[43,81,30,79],[43,84,30,82],[43,88,30,86],[44,10,31,8],[44,16,31,14,"unreadCount"],[44,27,31,25],[44,30,31,28,"messages"],[44,38,31,36],[44,39,31,37,"filter"],[44,45,31,43],[44,46,32,11,"msg"],[44,49,32,14],[44,53,32,19],[44,54,32,20,"msg"],[44,57,32,23],[44,58,32,24,"is_read"],[44,65,32,31],[44,69,32,35,"msg"],[44,72,32,38],[44,73,32,39,"sender_id"],[44,82,32,48],[44,87,32,53,"userId"],[44,93,33,8],[44,94,33,9],[44,95,33,10,"length"],[44,101,33,16],[45,10,35,8],[45,17,35,15],[46,12,36,10],[46,15,36,13,"chat"],[46,19,36,17],[47,12,37,10,"otherUser"],[47,21,37,19],[48,12,38,10,"lastMessage"],[48,23,38,21],[49,12,39,10,"unreadCount"],[50,10,40,8],[50,11,40,9],[51,8,41,6],[51,9,41,7],[51,10,41,8],[52,6,42,4],[52,7,42,5],[53,6,43,4,"enabled"],[53,13,43,11],[53,15,43,13],[53,16,43,14],[53,17,43,15,"userId"],[54,4,44,2],[54,5,44,3],[54,6,44,4],[55,2,45,0],[57,2,47,0],[58,0,48,0],[59,0,49,0],[60,2,47,0,"_s"],[60,4,47,0],[60,5,7,16,"useChatsQuery"],[60,18,7,29],[61,4,7,29],[61,12,8,9,"useQuery"],[61,32,8,17],[62,2,8,17],[63,2,50,7],[63,11,50,16,"useChatMessagesQuery"],[63,31,50,36,"useChatMessagesQuery"],[63,32,50,37,"chatId"],[63,38,50,43],[63,40,50,45],[64,4,50,45,"_s2"],[64,7,50,45],[65,4,51,2],[65,11,51,9],[65,15,51,9,"useQuery"],[65,35,51,17],[65,37,51,18],[66,6,52,4,"queryKey"],[66,14,52,12],[66,16,52,14],[66,17,52,15],[66,27,52,25],[66,29,52,27,"chatId"],[66,35,52,33],[66,36,52,34],[67,6,53,4,"queryFn"],[67,13,53,11],[67,15,53,13],[67,21,53,13,"queryFn"],[67,22,53,13],[67,27,53,25],[68,8,54,6],[68,12,54,10],[68,13,54,11,"chatId"],[68,19,54,17],[68,21,54,19],[68,27,54,25],[68,31,54,29,"Error"],[68,36,54,34],[68,37,54,35],[68,55,54,53],[68,56,54,54],[69,8,56,6],[69,14,56,12],[70,10,56,14,"data"],[70,14,56,18],[71,10,56,20,"error"],[72,8,56,26],[72,9,56,27],[72,12,56,30],[72,18,56,36,"supabase"],[72,36,56,44],[72,37,57,9,"from"],[72,41,57,13],[72,42,57,14],[72,52,57,24],[72,53,57,25],[72,54,58,9,"select"],[72,60,58,15],[72,61,58,16],[73,0,59,0],[74,0,60,0],[75,0,61,0],[75,9,61,9],[75,10,61,10],[75,11,62,9,"eq"],[75,13,62,11],[75,14,62,12],[75,23,62,21],[75,25,62,23,"chatId"],[75,31,62,29],[75,32,62,30],[75,33,63,9,"order"],[75,38,63,14],[75,39,63,15],[75,51,63,27],[75,53,63,29],[76,10,63,31,"ascending"],[76,19,63,40],[76,21,63,42],[77,8,63,47],[77,9,63,48],[77,10,63,49],[78,8,65,6],[78,12,65,10,"error"],[78,17,65,15],[78,19,65,17],[78,25,65,23,"error"],[78,30,65,28],[79,8,66,6],[79,15,66,13,"data"],[79,19,66,17],[80,6,67,4],[80,7,67,5],[81,6,68,4,"enabled"],[81,13,68,11],[81,15,68,13],[81,16,68,14],[81,17,68,15,"chatId"],[82,4,69,2],[82,5,69,3],[82,6,69,4],[83,2,70,0],[85,2,72,0],[86,0,73,0],[87,0,74,0],[88,2,72,0,"_s2"],[88,5,72,0],[88,6,50,16,"useChatMessagesQuery"],[88,26,50,36],[89,4,50,36],[89,12,51,9,"useQuery"],[89,32,51,17],[90,2,51,17],[91,2,75,7],[91,11,75,16,"useSendMessageMutation"],[91,33,75,38,"useSendMessageMutation"],[91,34,75,38],[91,36,75,41],[92,4,75,41,"_s3"],[92,7,75,41],[93,4,76,2],[93,10,76,8,"queryClient"],[93,21,76,19],[93,24,76,22],[93,28,76,22,"useQueryClient"],[93,54,76,36],[93,56,76,37],[93,57,76,38],[94,4,78,2],[94,11,78,9],[94,15,78,9,"useMutation"],[94,38,78,20],[94,40,78,21],[95,6,79,4,"mutationFn"],[95,16,79,14],[95,18,79,16],[95,24,79,16,"mutationFn"],[95,25,79,23],[96,8,79,25,"chatId"],[96,14,79,31],[97,8,79,33,"senderId"],[97,16,79,41],[98,8,79,43,"content"],[99,6,79,51],[99,7,79,52],[99,12,79,57],[100,8,80,6],[100,14,80,12],[101,10,80,14,"data"],[101,14,80,18],[102,10,80,20,"error"],[103,8,80,26],[103,9,80,27],[103,12,80,30],[103,18,80,36,"supabase"],[103,36,80,44],[103,37,81,9,"from"],[103,41,81,13],[103,42,81,14],[103,52,81,24],[103,53,81,25],[103,54,82,9,"insert"],[103,60,82,15],[103,61,82,16],[104,10,83,10,"chat_id"],[104,17,83,17],[104,19,83,19,"chatId"],[104,25,83,25],[105,10,84,10,"sender_id"],[105,19,84,19],[105,21,84,21,"senderId"],[105,29,84,29],[106,10,85,10,"content"],[106,17,85,17],[106,19,85,19,"content"],[106,26,85,26],[106,27,85,27,"trim"],[106,31,85,31],[106,32,85,32],[107,8,86,8],[107,9,86,9],[107,10,86,10],[107,11,87,9,"select"],[107,17,87,15],[107,18,87,16],[107,19,87,17],[107,20,88,9,"single"],[107,26,88,15],[107,27,88,16],[107,28,88,17],[108,8,90,6],[108,12,90,10,"error"],[108,17,90,15],[108,19,90,17],[108,25,90,23,"error"],[108,30,90,28],[110,8,92,6],[111,8,93,6],[111,14,93,12,"supabase"],[111,32,93,20],[111,33,94,9,"from"],[111,37,94,13],[111,38,94,14],[111,45,94,21],[111,46,94,22],[111,47,95,9,"update"],[111,53,95,15],[111,54,95,16],[112,10,95,18,"updated_at"],[112,20,95,28],[112,22,95,30],[112,26,95,34,"Date"],[112,30,95,38],[112,31,95,39],[112,32,95,40],[112,33,95,41,"toISOString"],[112,44,95,52],[112,45,95,53],[113,8,95,55],[113,9,95,56],[113,10,95,57],[113,11,96,9,"eq"],[113,13,96,11],[113,14,96,12],[113,18,96,16],[113,20,96,18,"chatId"],[113,26,96,24],[113,27,96,25],[114,8,98,6],[114,15,98,13,"data"],[114,19,98,17],[115,6,99,4],[115,7,99,5],[116,6,100,4,"onSuccess"],[116,15,100,13],[116,17,100,15,"onSuccess"],[116,18,100,16,"data"],[116,22,100,20],[116,24,100,22,"variables"],[116,33,100,31],[116,38,100,36],[117,8,101,6],[118,8,102,6,"queryClient"],[118,19,102,17],[118,20,102,18,"invalidateQueries"],[118,37,102,35],[118,38,102,36],[118,39,102,37],[118,49,102,47],[118,51,102,49,"variables"],[118,60,102,58],[118,61,102,59,"chatId"],[118,67,102,65],[118,68,102,66],[118,69,102,67],[119,8,103,6],[120,8,104,6,"queryClient"],[120,19,104,17],[120,20,104,18,"invalidateQueries"],[120,37,104,35],[120,38,104,36],[120,39,104,37],[120,46,104,44],[120,47,104,45],[120,48,104,46],[121,6,105,4],[122,4,106,2],[122,5,106,3],[122,6,106,4],[123,2,107,0],[125,2,109,0],[126,0,110,0],[127,0,111,0],[128,2,109,0,"_s3"],[128,5,109,0],[128,6,75,16,"useSendMessageMutation"],[128,28,75,38],[129,4,75,38],[129,12,76,22,"useQueryClient"],[129,38,76,36],[129,40,78,9,"useMutation"],[129,63,78,20],[130,2,78,20],[131,2,112,7],[131,11,112,16,"useCreateChatMutation"],[131,32,112,37,"useCreateChatMutation"],[131,33,112,37],[131,35,112,40],[132,4,112,40,"_s4"],[132,7,112,40],[133,4,113,2],[133,10,113,8,"queryClient"],[133,21,113,19],[133,24,113,22],[133,28,113,22,"useQueryClient"],[133,54,113,36],[133,56,113,37],[133,57,113,38],[134,4,115,2],[134,11,115,9],[134,15,115,9,"useMutation"],[134,38,115,20],[134,40,115,21],[135,6,116,4,"mutationFn"],[135,16,116,14],[135,18,116,16],[135,24,116,16,"mutationFn"],[135,25,116,23],[136,8,116,25,"user1Id"],[136,15,116,32],[137,8,116,34,"user2Id"],[138,6,116,42],[138,7,116,43],[138,12,116,48],[139,8,117,6],[140,8,118,6],[140,14,118,12],[141,10,118,14,"data"],[141,14,118,18],[141,16,118,20,"existingChat"],[142,8,118,33],[142,9,118,34],[142,12,118,37],[142,18,118,43,"supabase"],[142,36,118,51],[142,37,119,9,"from"],[142,41,119,13],[142,42,119,14],[142,49,119,21],[142,50,119,22],[142,51,120,9,"select"],[142,57,120,15],[142,58,120,16],[142,61,120,19],[142,62,120,20],[142,63,121,9,"or"],[142,65,121,11],[142,66,122,10],[142,85,122,29,"user1Id"],[142,92,122,36],[142,108,122,52,"user2Id"],[142,115,122,59],[142,136,122,80,"user2Id"],[142,143,122,87],[142,159,122,103,"user1Id"],[142,166,122,110],[142,169,123,8],[142,170,123,9],[142,171,124,9,"single"],[142,177,124,15],[142,178,124,16],[142,179,124,17],[143,8,126,6],[143,12,126,10,"existingChat"],[143,24,126,22],[143,26,126,24],[144,10,127,8],[144,17,127,15,"existingChat"],[144,29,127,27],[145,8,128,6],[147,8,130,6],[148,8,131,6],[148,14,131,12],[149,10,131,14,"data"],[149,14,131,18],[150,10,131,20,"error"],[151,8,131,26],[151,9,131,27],[151,12,131,30],[151,18,131,36,"supabase"],[151,36,131,44],[151,37,132,9,"from"],[151,41,132,13],[151,42,132,14],[151,49,132,21],[151,50,132,22],[151,51,133,9,"insert"],[151,57,133,15],[151,58,133,16],[152,10,134,10,"user1_id"],[152,18,134,18],[152,20,134,20,"user1Id"],[152,27,134,27],[153,10,135,10,"user2_id"],[153,18,135,18],[153,20,135,20,"user2Id"],[154,8,136,8],[154,9,136,9],[154,10,136,10],[154,11,137,9,"select"],[154,17,137,15],[154,18,137,16],[154,19,137,17],[154,20,138,9,"single"],[154,26,138,15],[154,27,138,16],[154,28,138,17],[155,8,140,6],[155,12,140,10,"error"],[155,17,140,15],[155,19,140,17],[155,25,140,23,"error"],[155,30,140,28],[156,8,141,6],[156,15,141,13,"data"],[156,19,141,17],[157,6,142,4],[157,7,142,5],[158,6,143,4,"onSuccess"],[158,15,143,13],[158,17,143,15,"onSuccess"],[158,18,143,15],[158,23,143,21],[159,8,144,6,"queryClient"],[159,19,144,17],[159,20,144,18,"invalidateQueries"],[159,37,144,35],[159,38,144,36],[159,39,144,37],[159,46,144,44],[159,47,144,45],[159,48,144,46],[160,6,145,4],[161,4,146,2],[161,5,146,3],[161,6,146,4],[162,2,147,0],[164,2,149,0],[165,0,150,0],[166,0,151,0],[167,2,149,0,"_s4"],[167,5,149,0],[167,6,112,16,"useCreateChatMutation"],[167,27,112,37],[168,4,112,37],[168,12,113,22,"useQueryClient"],[168,38,113,36],[168,40,115,9,"useMutation"],[168,63,115,20],[169,2,115,20],[170,2,152,7],[170,11,152,16,"useMarkMessagesReadMutation"],[170,38,152,43,"useMarkMessagesReadMutation"],[170,39,152,43],[170,41,152,46],[171,4,152,46,"_s5"],[171,7,152,46],[172,4,153,2],[172,10,153,8,"queryClient"],[172,21,153,19],[172,24,153,22],[172,28,153,22,"useQueryClient"],[172,54,153,36],[172,56,153,37],[172,57,153,38],[173,4,155,2],[173,11,155,9],[173,15,155,9,"useMutation"],[173,38,155,20],[173,40,155,21],[174,6,156,4,"mutationFn"],[174,16,156,14],[174,18,156,16],[174,24,156,16,"mutationFn"],[174,25,156,23],[175,8,156,25,"chatId"],[175,14,156,31],[176,8,156,33,"userId"],[177,6,156,40],[177,7,156,41],[177,12,156,46],[178,8,157,6],[178,14,157,12],[179,10,157,14,"error"],[180,8,157,20],[180,9,157,21],[180,12,157,24],[180,18,157,30,"supabase"],[180,36,157,38],[180,37,158,9,"from"],[180,41,158,13],[180,42,158,14],[180,52,158,24],[180,53,158,25],[180,54,159,9,"update"],[180,60,159,15],[180,61,159,16],[181,10,159,18,"is_read"],[181,17,159,25],[181,19,159,27],[182,8,159,32],[182,9,159,33],[182,10,159,34],[182,11,160,9,"eq"],[182,13,160,11],[182,14,160,12],[182,23,160,21],[182,25,160,23,"chatId"],[182,31,160,29],[182,32,160,30],[182,33,161,9,"neq"],[182,36,161,12],[182,37,161,13],[182,48,161,24],[182,50,161,26,"userId"],[182,56,161,32],[182,57,161,33],[182,58,162,9,"eq"],[182,60,162,11],[182,61,162,12],[182,70,162,21],[182,72,162,23],[182,77,162,28],[182,78,162,29],[183,8,164,6],[183,12,164,10,"error"],[183,17,164,15],[183,19,164,17],[183,25,164,23,"error"],[183,30,164,28],[184,6,165,4],[184,7,165,5],[185,6,166,4,"onSuccess"],[185,15,166,13],[185,17,166,15,"onSuccess"],[185,18,166,16,"_"],[185,19,166,17],[185,21,166,19,"variables"],[185,30,166,28],[185,35,166,33],[186,8,167,6,"queryClient"],[186,19,167,17],[186,20,167,18,"invalidateQueries"],[186,37,167,35],[186,38,167,36],[186,39,167,37],[186,49,167,47],[186,51,167,49,"variables"],[186,60,167,58],[186,61,167,59,"chatId"],[186,67,167,65],[186,68,167,66],[186,69,167,67],[187,8,168,6,"queryClient"],[187,19,168,17],[187,20,168,18,"invalidateQueries"],[187,37,168,35],[187,38,168,36],[187,39,168,37],[187,46,168,44],[187,47,168,45],[187,48,168,46],[188,6,169,4],[189,4,170,2],[189,5,170,3],[189,6,170,4],[190,2,171,0],[191,2,171,1,"_s5"],[191,5,171,1],[191,6,152,16,"useMarkMessagesReadMutation"],[191,33,152,43],[192,4,152,43],[192,12,153,22,"useQueryClient"],[192,38,153,36],[192,40,155,9,"useMutation"],[192,63,155,20],[193,2,155,20],[194,0,155,20],[194,3]],"functionMap":{"names":["<global>","useChatsQuery","useQuery$argument_0.queryFn","data.map$argument_0","messages.filter$argument_0","useChatMessagesQuery","useSendMessageMutation","useMutation$argument_0.mutationFn","useMutation$argument_0.onSuccess","useCreateChatMutation","useMarkMessagesReadMutation"],"mappings":"AAA;OCM;aCG;sBCiB;UCK,iDD;ODS;KDC;CDG;OKK;aHG;KGc;CLG;OMK;gBCI;KDoB;eEC;KFK;CNE;OSK;gBFI;KE0B;eDC;KCE;CTE;OUK;gBHI;KGS;eFC;KEG;CVE"}},"type":"js/module"}]}