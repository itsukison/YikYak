{"dependencies":[{"name":"@babel/runtime/helpers/asyncToGenerator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"YisBBiy2Xm9DEVdFebZ2nbgAHBo=","exportNames":["*"],"imports":1}},{"name":"@babel/runtime/helpers/asyncIterator","data":{"asyncType":null,"isESMImport":false,"locs":[],"key":"iAa+RToycgxigMSWyQzterF69/I=","exportNames":["*"],"imports":1}},{"name":"./utils.js","data":{"asyncType":null,"isESMImport":true,"locs":[{"start":{"line":2,"column":0,"index":24},"end":{"line":2,"column":38,"index":62}}],"key":"NIaSEHO1E48gsZc7jH9Ex1xTHgE=","exportNames":["*"],"imports":1}}],"output":[{"data":{"code":"__d(function (global, require, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  \"use strict\";\n\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n  function _interopDefault(e) {\n    return e && e.__esModule ? e : {\n      default: e\n    };\n  }\n  Object.defineProperty(exports, \"streamedQuery\", {\n    enumerable: true,\n    get: function () {\n      return streamedQuery;\n    }\n  });\n  var _babelRuntimeHelpersAsyncToGenerator = require(_dependencyMap[0], \"@babel/runtime/helpers/asyncToGenerator\");\n  var _asyncToGenerator = _interopDefault(_babelRuntimeHelpersAsyncToGenerator);\n  var _babelRuntimeHelpersAsyncIterator = require(_dependencyMap[1], \"@babel/runtime/helpers/asyncIterator\");\n  var _asyncIterator = _interopDefault(_babelRuntimeHelpersAsyncIterator);\n  var _utilsJs = require(_dependencyMap[2], \"./utils.js\");\n  // src/streamedQuery.ts\n\n  function streamedQuery(_ref) {\n    var queryFn = _ref.queryFn,\n      _ref$refetchMode = _ref.refetchMode,\n      refetchMode = _ref$refetchMode === void 0 ? \"reset\" : _ref$refetchMode,\n      maxChunks = _ref.maxChunks;\n    return /*#__PURE__*/function () {\n      var _ref2 = (0, _asyncToGenerator.default)(function* (context) {\n        var query = context.client.getQueryCache().find({\n          queryKey: context.queryKey,\n          exact: true\n        });\n        var isRefetch = !!query && query.state.data !== void 0;\n        if (isRefetch && refetchMode === \"reset\") {\n          query.setState({\n            status: \"pending\",\n            data: void 0,\n            error: null,\n            fetchStatus: \"fetching\"\n          });\n        }\n        var result = [];\n        var stream = yield queryFn(context);\n        var _iteratorAbruptCompletion = false;\n        var _didIteratorError = false;\n        var _iteratorError;\n        try {\n          var _loop = function* () {\n            var chunk = _step.value;\n            {\n              if (context.signal.aborted) {\n                return 1; // break\n              }\n              if (!isRefetch || refetchMode !== \"replace\") {\n                context.client.setQueryData(context.queryKey, function () {\n                  var prev = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n                  return (0, _utilsJs.addToEnd)(prev, chunk, maxChunks);\n                });\n              }\n              result = (0, _utilsJs.addToEnd)(result, chunk, maxChunks);\n            }\n          };\n          for (var _iterator = (0, _asyncIterator.default)(stream), _step; _iteratorAbruptCompletion = !(_step = yield _iterator.next()).done; _iteratorAbruptCompletion = false) {\n            if (yield* _loop()) break;\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (_iteratorAbruptCompletion && _iterator.return != null) {\n              yield _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n        if (isRefetch && refetchMode === \"replace\" && !context.signal.aborted) {\n          context.client.setQueryData(context.queryKey, result);\n        }\n        return context.client.getQueryData(context.queryKey);\n      });\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  }\n});","lineCount":93,"map":[[12,2,41,0,"Object"],[12,8,41,0],[12,9,41,0,"defineProperty"],[12,23,41,0],[12,24,41,0,"exports"],[12,31,41,0],[13,4,41,0,"enumerable"],[13,14,41,0],[14,4,41,0,"get"],[14,7,41,0],[14,18,41,0,"get"],[14,19,41,0],[15,6,41,0],[15,13,42,2,"streamedQuery"],[15,26,42,15],[16,4,42,15],[17,2,42,15],[18,2,43,2],[18,6,43,2,"_babelRuntimeHelpersAsyncToGenerator"],[18,42,43,2],[18,45,43,2,"require"],[18,52,43,2],[18,53,43,2,"_dependencyMap"],[18,67,43,2],[19,2,43,2],[19,6,43,2,"_asyncToGenerator"],[19,23,43,2],[19,26,43,2,"_interopDefault"],[19,41,43,2],[19,42,43,2,"_babelRuntimeHelpersAsyncToGenerator"],[19,78,43,2],[20,2,43,2],[20,6,43,2,"_babelRuntimeHelpersAsyncIterator"],[20,39,43,2],[20,42,43,2,"require"],[20,49,43,2],[20,50,43,2,"_dependencyMap"],[20,64,43,2],[21,2,43,2],[21,6,43,2,"_asyncIterator"],[21,20,43,2],[21,23,43,2,"_interopDefault"],[21,38,43,2],[21,39,43,2,"_babelRuntimeHelpersAsyncIterator"],[21,72,43,2],[22,2,2,0],[22,6,2,0,"_utilsJs"],[22,14,2,0],[22,17,2,0,"require"],[22,24,2,0],[22,25,2,0,"_dependencyMap"],[22,39,2,0],[23,2,1,0],[25,2,3,0],[25,11,3,9,"streamedQuery"],[25,24,3,22,"streamedQuery"],[25,25,3,22,"_ref"],[25,29,3,22],[25,31,7,3],[26,4,7,3],[26,8,4,2,"queryFn"],[26,15,4,9],[26,18,4,9,"_ref"],[26,22,4,9],[26,23,4,2,"queryFn"],[26,30,4,9],[27,6,4,9,"_ref$refetchMode"],[27,22,4,9],[27,25,4,9,"_ref"],[27,29,4,9],[27,30,5,2,"refetchMode"],[27,41,5,13],[28,6,5,2,"refetchMode"],[28,17,5,13],[28,20,5,13,"_ref$refetchMode"],[28,36,5,13],[28,50,5,16],[28,57,5,23],[28,60,5,23,"_ref$refetchMode"],[28,76,5,23],[29,6,6,2,"maxChunks"],[29,15,6,11],[29,18,6,11,"_ref"],[29,22,6,11],[29,23,6,2,"maxChunks"],[29,32,6,11],[30,4,8,2],[31,6,8,2],[31,10,8,2,"_ref2"],[31,15,8,2],[31,22,8,2,"_asyncToGenerator"],[31,39,8,2],[31,40,8,2,"default"],[31,47,8,2],[31,49,8,9],[31,60,8,16,"context"],[31,67,8,23],[31,69,8,28],[32,8,9,4],[32,12,9,10,"query"],[32,17,9,15],[32,20,9,18,"context"],[32,27,9,25],[32,28,9,26,"client"],[32,34,9,32],[32,35,9,33,"getQueryCache"],[32,48,9,46],[32,49,9,47],[32,50,9,48],[32,51,9,49,"find"],[32,55,9,53],[32,56,9,54],[33,10,9,56,"queryKey"],[33,18,9,64],[33,20,9,66,"context"],[33,27,9,73],[33,28,9,74,"queryKey"],[33,36,9,82],[34,10,9,84,"exact"],[34,15,9,89],[34,17,9,91],[35,8,9,96],[35,9,9,97],[35,10,9,98],[36,8,10,4],[36,12,10,10,"isRefetch"],[36,21,10,19],[36,24,10,22],[36,25,10,23],[36,26,10,24,"query"],[36,31,10,29],[36,35,10,33,"query"],[36,40,10,38],[36,41,10,39,"state"],[36,46,10,44],[36,47,10,45,"data"],[36,51,10,49],[36,56,10,54],[36,61,10,59],[36,62,10,60],[37,8,11,4],[37,12,11,8,"isRefetch"],[37,21,11,17],[37,25,11,21,"refetchMode"],[37,36,11,32],[37,41,11,37],[37,48,11,44],[37,50,11,46],[38,10,12,6,"query"],[38,15,12,11],[38,16,12,12,"setState"],[38,24,12,20],[38,25,12,21],[39,12,13,8,"status"],[39,18,13,14],[39,20,13,16],[39,29,13,25],[40,12,14,8,"data"],[40,16,14,12],[40,18,14,14],[40,23,14,19],[40,24,14,20],[41,12,15,8,"error"],[41,17,15,13],[41,19,15,15],[41,23,15,19],[42,12,16,8,"fetchStatus"],[42,23,16,19],[42,25,16,21],[43,10,17,6],[43,11,17,7],[43,12,17,8],[44,8,18,4],[45,8,19,4],[45,12,19,8,"result"],[45,18,19,14],[45,21,19,17],[45,23,19,19],[46,8,20,4],[46,12,20,10,"stream"],[46,18,20,16],[46,27,20,25,"queryFn"],[46,34,20,32],[46,35,20,33,"context"],[46,42,20,40],[46,43,20,41],[47,8,20,42],[47,12,20,42,"_iteratorAbruptCompletion"],[47,37,20,42],[48,8,20,42],[48,12,20,42,"_didIteratorError"],[48,29,20,42],[49,8,20,42],[49,12,20,42,"_iteratorError"],[49,26,20,42],[50,8,20,42],[51,10,20,42],[51,14,20,42,"_loop"],[51,19,20,42],[51,32,20,42,"_loop"],[51,33,20,42],[51,35,21,38],[52,12,21,38],[52,16,21,21,"chunk"],[52,21,21,26],[52,24,21,26,"_step"],[52,29,21,26],[52,30,21,26,"value"],[52,35,21,26],[53,12,21,26],[54,14,22,6],[54,18,22,10,"context"],[54,25,22,17],[54,26,22,18,"signal"],[54,32,22,24],[54,33,22,25,"aborted"],[54,40,22,32],[54,42,22,34],[55,16,22,34],[56,14,24,6],[57,14,25,6],[57,18,25,10],[57,19,25,11,"isRefetch"],[57,28,25,20],[57,32,25,24,"refetchMode"],[57,43,25,35],[57,48,25,40],[57,57,25,49],[57,59,25,51],[58,16,26,8,"context"],[58,23,26,15],[58,24,26,16,"client"],[58,30,26,22],[58,31,26,23,"setQueryData"],[58,43,26,35],[58,44,27,10,"context"],[58,51,27,17],[58,52,27,18,"queryKey"],[58,60,27,26],[58,62,28,10],[58,74,28,25],[59,18,28,25],[59,22,28,11,"prev"],[59,26,28,15],[59,29,28,15,"arguments"],[59,38,28,15],[59,39,28,15,"length"],[59,45,28,15],[59,53,28,15,"arguments"],[59,62,28,15],[59,70,28,15,"undefined"],[59,79,28,15],[59,82,28,15,"arguments"],[59,91,28,15],[59,97,28,18],[59,99,28,20],[60,18,29,12],[60,25,29,19],[60,29,29,19,"addToEnd"],[60,37,29,27],[60,38,29,27,"addToEnd"],[60,46,29,27],[60,48,29,28,"prev"],[60,52,29,32],[60,54,29,34,"chunk"],[60,59,29,39],[60,61,29,41,"maxChunks"],[60,70,29,50],[60,71,29,51],[61,16,30,10],[61,17,31,8],[61,18,31,9],[62,14,32,6],[63,14,33,6,"result"],[63,20,33,12],[63,23,33,15],[63,27,33,15,"addToEnd"],[63,35,33,23],[63,36,33,23,"addToEnd"],[63,44,33,23],[63,46,33,24,"result"],[63,52,33,30],[63,54,33,32,"chunk"],[63,59,33,37],[63,61,33,39,"maxChunks"],[63,70,33,48],[63,71,33,49],[64,12,33,50],[65,10,34,4],[65,11,34,5],[66,10,21,4],[66,19,21,4,"_iterator"],[66,28,21,4],[66,35,21,4,"_asyncIterator"],[66,49,21,4],[66,50,21,4,"default"],[66,57,21,4],[66,59,21,30,"stream"],[66,65,21,36],[66,68,21,36,"_step"],[66,73,21,36],[66,75,21,36,"_iteratorAbruptCompletion"],[66,100,21,36],[66,105,21,36,"_step"],[66,110,21,36],[66,119,21,36,"_iterator"],[66,128,21,36],[66,129,21,36,"next"],[66,133,21,36],[66,137,21,36,"done"],[66,141,21,36],[66,143,21,36,"_iteratorAbruptCompletion"],[66,168,21,36],[67,12,21,36],[67,23,21,36,"_loop"],[67,28,21,36],[67,32,23,8],[68,10,23,14],[69,8,34,5],[69,17,34,5,"err"],[69,20,34,5],[70,10,34,5,"_didIteratorError"],[70,27,34,5],[71,10,34,5,"_iteratorError"],[71,24,34,5],[71,27,34,5,"err"],[71,30,34,5],[72,8,34,5],[73,10,34,5],[74,12,34,5],[74,16,34,5,"_iteratorAbruptCompletion"],[74,41,34,5],[74,45,34,5,"_iterator"],[74,54,34,5],[74,55,34,5,"return"],[74,61,34,5],[75,14,34,5],[75,20,34,5,"_iterator"],[75,29,34,5],[75,30,34,5,"return"],[75,36,34,5],[76,12,34,5],[77,10,34,5],[78,12,34,5],[78,16,34,5,"_didIteratorError"],[78,33,34,5],[79,14,34,5],[79,20,34,5,"_iteratorError"],[79,34,34,5],[80,12,34,5],[81,10,34,5],[82,8,34,5],[83,8,35,4],[83,12,35,8,"isRefetch"],[83,21,35,17],[83,25,35,21,"refetchMode"],[83,36,35,32],[83,41,35,37],[83,50,35,46],[83,54,35,50],[83,55,35,51,"context"],[83,62,35,58],[83,63,35,59,"signal"],[83,69,35,65],[83,70,35,66,"aborted"],[83,77,35,73],[83,79,35,75],[84,10,36,6,"context"],[84,17,36,13],[84,18,36,14,"client"],[84,24,36,20],[84,25,36,21,"setQueryData"],[84,37,36,33],[84,38,36,34,"context"],[84,45,36,41],[84,46,36,42,"queryKey"],[84,54,36,50],[84,56,36,52,"result"],[84,62,36,58],[84,63,36,59],[85,8,37,4],[86,8,38,4],[86,15,38,11,"context"],[86,22,38,18],[86,23,38,19,"client"],[86,29,38,25],[86,30,38,26,"getQueryData"],[86,42,38,38],[86,43,38,39,"context"],[86,50,38,46],[86,51,38,47,"queryKey"],[86,59,38,55],[86,60,38,56],[87,6,39,2],[87,7,39,3],[88,6,39,3],[88,23,39,3,"_x"],[88,25,39,3],[89,8,39,3],[89,15,39,3,"_ref2"],[89,20,39,3],[89,21,39,3,"apply"],[89,26,39,3],[89,33,39,3,"arguments"],[89,42,39,3],[90,6,39,3],[91,4,39,3],[92,2,40,0],[93,0,40,1],[93,3]],"functionMap":{"names":["<global>","streamedQuery","<anonymous>","context.client.setQueryData$argument_1"],"mappings":"AAA;ACE;SCK;UCoB;WDE;GDS;CDC"},"hasCjsExports":false},"type":"js/module"}]}